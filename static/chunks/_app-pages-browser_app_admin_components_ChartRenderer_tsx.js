"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_app_admin_components_ChartRenderer_tsx"],{

/***/ "(app-pages-browser)/./app/admin/components/ChartRenderer.tsx":
/*!************************************************!*\
  !*** ./app/admin/components/ChartRenderer.tsx ***!
  \************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _charts_SimpleBarChart__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./charts/SimpleBarChart */ \"(app-pages-browser)/./app/admin/components/charts/SimpleBarChart.tsx\");\n/* harmony import */ var _charts_StackedBarChart__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./charts/StackedBarChart */ \"(app-pages-browser)/./app/admin/components/charts/StackedBarChart.tsx\");\n/* harmony import */ var _charts_DualAxisChart__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./charts/DualAxisChart */ \"(app-pages-browser)/./app/admin/components/charts/DualAxisChart.tsx\");\n/* harmony import */ var _charts_MultiSeriesLineBarChart__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./charts/MultiSeriesLineBarChart */ \"(app-pages-browser)/./app/admin/components/charts/MultiSeriesLineBarChart.tsx\");\n/* harmony import */ var _charts_PieChart__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./charts/PieChart */ \"(app-pages-browser)/./app/admin/components/charts/PieChart.tsx\");\n/* harmony import */ var _components_shared_Modal__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../components/shared/Modal */ \"(app-pages-browser)/./app/components/shared/Modal.tsx\");\n/* harmony import */ var _components_shared_filters_TimeFilter__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../components/shared/filters/TimeFilter */ \"(app-pages-browser)/./app/components/shared/filters/TimeFilter.tsx\");\n/* harmony import */ var _components_shared_filters_CurrencyFilter__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../components/shared/filters/CurrencyFilter */ \"(app-pages-browser)/./app/components/shared/filters/CurrencyFilter.tsx\");\n/* harmony import */ var _components_shared_filters_DisplayModeFilter__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../components/shared/filters/DisplayModeFilter */ \"(app-pages-browser)/./app/components/shared/filters/DisplayModeFilter.tsx\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n//import LineChart from './charts/LineChart';\n// import AreaChart from './charts/AreaChart';\n// Import filter components\n\n\n\n// Add helper function at the top of the file\nfunction getFieldFromYAxisConfig(field) {\n    return typeof field === 'string' ? field : field.field;\n}\nconst ChartRenderer = (param)=>{\n    let { chartConfig, onDataLoaded, isExpanded = false, onCloseExpanded, onFilterChange, filterValues: externalFilterValues, colorMap: externalColorMap, onColorsGenerated, isLoading = false } = param;\n    _s();\n    const [data, setData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    // Use internal or external filter values based on what's provided\n    const [internalFilterValues, setInternalFilterValues] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});\n    const [isFilterChanged, setIsFilterChanged] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Add state to track legend colors, use external if provided\n    const [legendColorMap, setLegendColorMap] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(externalColorMap || {});\n    // Update legendColorMap when externalColorMap changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ChartRenderer.useEffect\": ()=>{\n            if (externalColorMap) {\n                setLegendColorMap(externalColorMap);\n            }\n        }\n    }[\"ChartRenderer.useEffect\"], [\n        externalColorMap\n    ]);\n    // Add effect to forward legend colors to parent component\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ChartRenderer.useEffect\": ()=>{\n            if (onColorsGenerated && Object.keys(legendColorMap).length > 0) {\n                // Check if this is actually a new color map from what we got externally\n                const externalMapStr = JSON.stringify(externalColorMap || {});\n                const currentMapStr = JSON.stringify(legendColorMap);\n                // Only trigger the callback if the maps are different\n                if (externalMapStr !== currentMapStr) {\n                    onColorsGenerated(legendColorMap);\n                }\n            }\n        }\n    }[\"ChartRenderer.useEffect\"], [\n        legendColorMap,\n        onColorsGenerated,\n        externalColorMap\n    ]);\n    // Determine whether to use internal or external filter values\n    const filterValues = externalFilterValues || internalFilterValues;\n    // Helper function to find a matching field with flexible matching\n    const findMatchingField = (obj, fieldName)=>{\n        // Direct match\n        if (fieldName in obj) return fieldName;\n        // Case insensitive match\n        const lowerField = fieldName.toLowerCase();\n        const keys = Object.keys(obj);\n        // First try exact match with lowercase\n        for (const key of keys){\n            if (key.toLowerCase() === lowerField) return key;\n        }\n        // Then try replacing spaces with underscores and vice versa\n        const spaceToUnderscore = lowerField.replace(/ /g, '_');\n        const underscoreToSpace = lowerField.replace(/_/g, ' ');\n        for (const key of keys){\n            const lowerKey = key.toLowerCase();\n            if (lowerKey === spaceToUnderscore || lowerKey === underscoreToSpace) {\n                return key;\n            }\n        }\n        return null;\n    };\n    // Initialize filter values from chart config\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ChartRenderer.useEffect\": ()=>{\n            var _chartConfig_additionalOptions;\n            // Only initialize internal filters if external ones aren't provided\n            if (externalFilterValues) return;\n            const initialFilters = {};\n            // Extract initial filter values from chart config\n            if ((_chartConfig_additionalOptions = chartConfig.additionalOptions) === null || _chartConfig_additionalOptions === void 0 ? void 0 : _chartConfig_additionalOptions.filters) {\n                // Set time filter\n                if (chartConfig.additionalOptions.filters.timeFilter && Array.isArray(chartConfig.additionalOptions.filters.timeFilter.options) && chartConfig.additionalOptions.filters.timeFilter.options.length > 0) {\n                    initialFilters['timeFilter'] = chartConfig.additionalOptions.filters.timeFilter.options[0];\n                }\n                // Set currency filter\n                if (chartConfig.additionalOptions.filters.currencyFilter && Array.isArray(chartConfig.additionalOptions.filters.currencyFilter.options) && chartConfig.additionalOptions.filters.currencyFilter.options.length > 0) {\n                    initialFilters['currencyFilter'] = chartConfig.additionalOptions.filters.currencyFilter.options[0];\n                }\n                // Set display mode filter\n                if (chartConfig.additionalOptions.filters.displayModeFilter && Array.isArray(chartConfig.additionalOptions.filters.displayModeFilter.options) && chartConfig.additionalOptions.filters.displayModeFilter.options.length > 0) {\n                    initialFilters['displayModeFilter'] = chartConfig.additionalOptions.filters.displayModeFilter.options[0];\n                }\n            }\n            setInternalFilterValues(initialFilters);\n        }\n    }[\"ChartRenderer.useEffect\"], [\n        chartConfig.id,\n        externalFilterValues\n    ]);\n    // Handle filter change\n    const handleFilterChange = (filterType, value)=>{\n        console.log(\"Filter changed: \".concat(filterType, \" = \").concat(value));\n        // If external handler is provided, use it\n        if (onFilterChange) {\n            onFilterChange(filterType, value);\n        } else {\n            // Otherwise update internal state\n            setInternalFilterValues((prev)=>({\n                    ...prev,\n                    [filterType]: value\n                }));\n            setIsFilterChanged(true);\n        }\n    };\n    // Sample data to use when API fails\n    const getSampleData = (chartType, groupByField)=>{\n        // Basic sample data for bar charts\n        if (chartType.includes('bar')) {\n            if (chartType.includes('stacked') && groupByField) {\n                // Sample data for stacked bar charts\n                return [\n                    {\n                        platform: 'Raydium',\n                        segment: 'DEX',\n                        protocol_revenue: 1250000\n                    },\n                    {\n                        platform: 'Raydium',\n                        segment: 'Lending',\n                        protocol_revenue: 350000\n                    },\n                    {\n                        platform: 'Raydium',\n                        segment: 'NFT',\n                        protocol_revenue: 75000\n                    },\n                    {\n                        platform: 'Orca',\n                        segment: 'DEX',\n                        protocol_revenue: 980000\n                    },\n                    {\n                        platform: 'Orca',\n                        segment: 'Lending',\n                        protocol_revenue: 120000\n                    },\n                    {\n                        platform: 'Orca',\n                        segment: 'Liquid Staking',\n                        protocol_revenue: 420000\n                    },\n                    {\n                        platform: 'Drift',\n                        segment: 'DEX',\n                        protocol_revenue: 750000\n                    },\n                    {\n                        platform: 'Drift',\n                        segment: 'Perpetuals',\n                        protocol_revenue: 890000\n                    },\n                    {\n                        platform: 'Marinade',\n                        segment: 'Liquid Staking',\n                        protocol_revenue: 1100000\n                    },\n                    {\n                        platform: 'Marinade',\n                        segment: 'Lending',\n                        protocol_revenue: 120000\n                    }\n                ];\n            }\n            // Regular bar chart\n            return [\n                {\n                    platform: 'Raydium',\n                    protocol_revenue: 1750000,\n                    volume: 12500000,\n                    users: 45000\n                },\n                {\n                    platform: 'Orca',\n                    protocol_revenue: 1380000,\n                    volume: 9800000,\n                    users: 32000\n                },\n                {\n                    platform: 'Drift',\n                    protocol_revenue: 1640000,\n                    volume: 11200000,\n                    users: 28000\n                },\n                {\n                    platform: 'Marinade',\n                    protocol_revenue: 1220000,\n                    volume: 5400000,\n                    users: 56000\n                },\n                {\n                    platform: 'Jupiter',\n                    protocol_revenue: 2100000,\n                    volume: 18600000,\n                    users: 78000\n                },\n                {\n                    platform: 'Solend',\n                    protocol_revenue: 840000,\n                    volume: 4200000,\n                    users: 22000\n                }\n            ];\n        }\n        // Time series data (previously for line charts, now as a fallback)\n        if (chartType === 'line' || chartType.includes('time')) {\n            return [\n                {\n                    date: '2023-01-01',\n                    protocol_revenue: 980000,\n                    cumulative_revenue: 980000\n                },\n                {\n                    date: '2023-02-01',\n                    protocol_revenue: 1250000,\n                    cumulative_revenue: 2230000\n                },\n                {\n                    date: '2023-03-01',\n                    protocol_revenue: 1420000,\n                    cumulative_revenue: 3650000\n                },\n                {\n                    date: '2023-04-01',\n                    protocol_revenue: 1650000,\n                    cumulative_revenue: 5300000\n                },\n                {\n                    date: '2023-05-01',\n                    protocol_revenue: 2100000,\n                    cumulative_revenue: 7400000\n                },\n                {\n                    date: '2023-06-01',\n                    protocol_revenue: 1850000,\n                    cumulative_revenue: 9250000\n                }\n            ];\n        }\n        // Default data\n        return [\n            {\n                x: 'A',\n                y: 100\n            },\n            {\n                x: 'B',\n                y: 200\n            },\n            {\n                x: 'C',\n                y: 150\n            },\n            {\n                x: 'D',\n                y: 300\n            },\n            {\n                x: 'E',\n                y: 250\n            }\n        ];\n    };\n    // Fetch data from API when component mounts or filters change\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ChartRenderer.useEffect\": ()=>{\n            // Create a stringified version of the data mapping for dependency comparison\n            const dataMappingKey = JSON.stringify({\n                xAxis: chartConfig.dataMapping.xAxis,\n                yAxis: chartConfig.dataMapping.yAxis,\n                groupBy: chartConfig.dataMapping.groupBy\n            });\n            // Create an AbortController to cancel fetch requests when component unmounts\n            const controller = new AbortController();\n            const signal = controller.signal;\n            const fetchData = {\n                \"ChartRenderer.useEffect.fetchData\": async ()=>{\n                    setError(null);\n                    // Variable to hold our parsed data\n                    let parsedData = [];\n                    try {\n                        // Skip API call if using the same endpoint with the same mapping and no filter changes\n                        const cacheKey = \"\".concat(chartConfig.apiEndpoint, \"-\").concat(dataMappingKey, \"-\").concat(JSON.stringify(filterValues));\n                        const cachedData = !isFilterChanged ? sessionStorage.getItem(cacheKey) : null;\n                        if (cachedData) {\n                            console.log('Using cached data for', chartConfig.title);\n                            parsedData = JSON.parse(cachedData);\n                        } else {\n                            var _chartConfig_additionalOptions, _result_query_result_data, _result_query_result;\n                            // Create URL with API key if provided\n                            let apiUrl;\n                            try {\n                                apiUrl = new URL(chartConfig.apiEndpoint);\n                                // Add API key to URL for both GET and POST requests\n                                if (chartConfig.apiKey) {\n                                    apiUrl.searchParams.append('api_key', chartConfig.apiKey);\n                                }\n                            } catch (error) {\n                                throw new Error(\"Invalid URL: \".concat(chartConfig.apiEndpoint));\n                            }\n                            // Build parameters object for POST request based on filters\n                            const parameters = {};\n                            const filterConfig = (_chartConfig_additionalOptions = chartConfig.additionalOptions) === null || _chartConfig_additionalOptions === void 0 ? void 0 : _chartConfig_additionalOptions.filters;\n                            const hasFilters = filterConfig !== undefined;\n                            if (hasFilters) {\n                                // Add time filter parameter\n                                if (filterConfig.timeFilter && filterValues['timeFilter']) {\n                                    parameters[filterConfig.timeFilter.paramName] = filterValues['timeFilter'];\n                                    console.log(\"Setting time filter: \".concat(filterConfig.timeFilter.paramName, \"=\").concat(filterValues['timeFilter']));\n                                } else if (filterConfig.timeFilter && Array.isArray(filterConfig.timeFilter.options) && filterConfig.timeFilter.options.length > 0) {\n                                    parameters[filterConfig.timeFilter.paramName] = filterConfig.timeFilter.options[0];\n                                    console.log(\"Setting default time filter: \".concat(filterConfig.timeFilter.paramName, \"=\").concat(filterConfig.timeFilter.options[0]));\n                                }\n                                // Add currency filter parameter\n                                if (filterConfig.currencyFilter && filterValues['currencyFilter']) {\n                                    parameters[filterConfig.currencyFilter.paramName] = filterValues['currencyFilter'];\n                                    console.log(\"Setting currency filter: \".concat(filterConfig.currencyFilter.paramName, \"=\").concat(filterValues['currencyFilter']));\n                                } else if (filterConfig.currencyFilter && Array.isArray(filterConfig.currencyFilter.options) && filterConfig.currencyFilter.options.length > 0) {\n                                    parameters[filterConfig.currencyFilter.paramName] = filterConfig.currencyFilter.options[0];\n                                    console.log(\"Setting default currency filter: \".concat(filterConfig.currencyFilter.paramName, \"=\").concat(filterConfig.currencyFilter.options[0]));\n                                }\n                                // Add display mode filter parameter\n                                if (filterConfig.displayModeFilter && filterValues['displayModeFilter']) {\n                                    parameters[filterConfig.displayModeFilter.paramName] = filterValues['displayModeFilter'];\n                                    console.log(\"Setting display mode filter: \".concat(filterConfig.displayModeFilter.paramName, \"=\").concat(filterValues['displayModeFilter']));\n                                } else if (filterConfig.displayModeFilter && Array.isArray(filterConfig.displayModeFilter.options) && filterConfig.displayModeFilter.options.length > 0) {\n                                    parameters[filterConfig.displayModeFilter.paramName] = filterConfig.displayModeFilter.options[0];\n                                    console.log(\"Setting default display mode filter: \".concat(filterConfig.displayModeFilter.paramName, \"=\").concat(filterConfig.displayModeFilter.options[0]));\n                                }\n                            }\n                            const hasParameters = Object.keys(parameters).length > 0;\n                            // Set up fetch options\n                            const options = {\n                                method: hasParameters ? 'POST' : 'GET',\n                                headers: {\n                                    'Content-Type': 'application/json'\n                                },\n                                cache: 'no-store',\n                                signal,\n                                // Add a longer timeout for slow connections\n                                ...{\n                                    timeout: 15000\n                                }\n                            };\n                            // Add body with parameters for POST request\n                            if (hasParameters) {\n                                // Format exactly as in the cURL example: {\"parameters\":{\"Date Part\":\"W\"}}\n                                options.body = JSON.stringify({\n                                    parameters\n                                });\n                                console.log(\"Fetching data with request body:\", options.body);\n                            }\n                            console.log(\"Fetching data from: \".concat(apiUrl.toString(), \" with method: \").concat(options.method));\n                            // Fetch data from API with timeout and proper error handling\n                            const response = await fetch(apiUrl.toString(), options);\n                            console.log(\"API response status: \".concat(response.status, \" \").concat(response.statusText));\n                            if (!response.ok) {\n                                throw new Error(\"API request failed with status \".concat(response.status, \": \").concat(response.statusText));\n                            }\n                            const result = await response.json();\n                            console.log(\"API response structure:\", Object.keys(result));\n                            // Handle different API response formats\n                            // Format 1: Standard Redash format with query_result.data.rows\n                            if (result === null || result === void 0 ? void 0 : (_result_query_result = result.query_result) === null || _result_query_result === void 0 ? void 0 : (_result_query_result_data = _result_query_result.data) === null || _result_query_result_data === void 0 ? void 0 : _result_query_result_data.rows) {\n                                parsedData = result.query_result.data.rows;\n                                console.log(\"Found \".concat(parsedData.length, \" rows in Redash format\"));\n                            } else if (Array.isArray(result)) {\n                                parsedData = result;\n                                console.log(\"Found \".concat(parsedData.length, \" rows in direct array format\"));\n                            } else if ((result === null || result === void 0 ? void 0 : result.data) && Array.isArray(result.data)) {\n                                parsedData = result.data;\n                                console.log(\"Found \".concat(parsedData.length, \" rows in data array format\"));\n                            } else if ((result === null || result === void 0 ? void 0 : result.rows) && Array.isArray(result.rows)) {\n                                parsedData = result.rows;\n                                console.log(\"Found \".concat(parsedData.length, \" rows in rows array format\"));\n                            } else if ((result === null || result === void 0 ? void 0 : result.results) && Array.isArray(result.results)) {\n                                parsedData = result.results;\n                                console.log(\"Found \".concat(parsedData.length, \" rows in results array format\"));\n                            } else if (result === null || result === void 0 ? void 0 : result.error) {\n                                throw new Error(\"API returned an error: \".concat(result.error));\n                            } else {\n                                console.error('Unrecognized API response structure:', result);\n                                throw new Error('API response does not have a recognized structure');\n                            }\n                            // Cache the result to prevent unnecessary fetches\n                            try {\n                                sessionStorage.setItem(cacheKey, JSON.stringify(parsedData));\n                            } catch (e) {\n                                console.warn('Failed to cache data:', e);\n                            }\n                            // Reset filter changed flag\n                            setIsFilterChanged(false);\n                        }\n                        // Process the data if we have any (either from API or fallback)\n                        if (parsedData.length > 0 && !signal.aborted) {\n                            // Log the data for debugging purposes\n                            console.log('Chart data successfully loaded:', parsedData.slice(0, 2));\n                            // Validate that we can access the required data fields\n                            try {\n                                const { xAxis, yAxis, groupBy } = chartConfig.dataMapping;\n                                const sampleItem = parsedData[0];\n                                // Normalize arrays and strings for processing\n                                const xAxisFields = Array.isArray(xAxis) ? xAxis : [\n                                    xAxis\n                                ];\n                                let yAxisFields = [];\n                                // Extract field names from yAxis which could be strings or YAxisConfig objects\n                                if (Array.isArray(yAxis)) {\n                                    yAxisFields = yAxis.map({\n                                        \"ChartRenderer.useEffect.fetchData\": (field)=>getFieldFromYAxisConfig(field)\n                                    }[\"ChartRenderer.useEffect.fetchData\"]);\n                                } else {\n                                    yAxisFields = [\n                                        getFieldFromYAxisConfig(yAxis)\n                                    ];\n                                }\n                                // Check and normalize fields if needed\n                                let needsNormalization = false;\n                                // Check if the required fields exist\n                                const fieldExists = {\n                                    \"ChartRenderer.useEffect.fetchData.fieldExists\": (item, field)=>{\n                                        return !!findMatchingField(item, field);\n                                    }\n                                }[\"ChartRenderer.useEffect.fetchData.fieldExists\"];\n                                // Check x-axis fields\n                                for (const field of xAxisFields){\n                                    if (!fieldExists(sampleItem, field)) {\n                                        throw new Error('X-axis field \"'.concat(field, '\" not found in data. Available fields: ').concat(Object.keys(sampleItem).join(', ')));\n                                    }\n                                    if (findMatchingField(sampleItem, field) !== field) {\n                                        needsNormalization = true;\n                                    }\n                                }\n                                // Check y-axis fields\n                                for (const field of yAxisFields){\n                                    if (!fieldExists(sampleItem, field)) {\n                                        throw new Error('Y-axis field \"'.concat(field, '\" not found in data. Available fields: ').concat(Object.keys(sampleItem).join(', ')));\n                                    }\n                                    if (findMatchingField(sampleItem, field) !== field) {\n                                        needsNormalization = true;\n                                    }\n                                }\n                                // Check for group by field if this is a stacked chart\n                                if (groupBy && (chartConfig.chartType.includes('stacked') || chartConfig.isStacked)) {\n                                    if (!fieldExists(sampleItem, groupBy)) {\n                                        throw new Error('Group By field \"'.concat(groupBy, '\" not found in data. Available fields: ').concat(Object.keys(sampleItem).join(', ')));\n                                    }\n                                    if (findMatchingField(sampleItem, groupBy) !== groupBy) {\n                                        needsNormalization = true;\n                                    }\n                                }\n                                // Normalize the data if needed\n                                if (needsNormalization) {\n                                    parsedData = parsedData.map({\n                                        \"ChartRenderer.useEffect.fetchData\": (item)=>{\n                                            const normalizedItem = {\n                                                ...item\n                                            };\n                                            // Normalize x-axis fields\n                                            for (const field of xAxisFields){\n                                                const matchingField = findMatchingField(item, field);\n                                                if (matchingField && matchingField !== field) {\n                                                    normalizedItem[field] = item[matchingField];\n                                                }\n                                            }\n                                            // Normalize y-axis fields\n                                            for (const field of yAxisFields){\n                                                const matchingField = findMatchingField(item, field);\n                                                if (matchingField && matchingField !== field) {\n                                                    normalizedItem[field] = item[matchingField];\n                                                }\n                                            }\n                                            // Normalize group by field if needed\n                                            if (groupBy && (chartConfig.chartType.includes('stacked') || chartConfig.isStacked)) {\n                                                const matchingGroupField = findMatchingField(item, groupBy);\n                                                if (matchingGroupField && matchingGroupField !== groupBy) {\n                                                    normalizedItem[groupBy] = item[matchingGroupField];\n                                                }\n                                            }\n                                            return normalizedItem;\n                                        }\n                                    }[\"ChartRenderer.useEffect.fetchData\"]);\n                                }\n                                // Call onDataLoaded callback if provided and component is still mounted\n                                if (onDataLoaded && !signal.aborted) {\n                                    onDataLoaded(parsedData);\n                                }\n                                // Set data only if component is still mounted\n                                if (!signal.aborted) {\n                                    setData(parsedData);\n                                }\n                            } catch (error) {\n                                if (!signal.aborted) {\n                                    console.error('Error processing data:', error);\n                                    setError(\"Error processing data: \".concat(error instanceof Error ? error.message : String(error)));\n                                }\n                            }\n                        }\n                    } catch (error) {\n                        // Only set error if the request wasn't cancelled and component is still mounted\n                        if (!signal.aborted) {\n                            console.error('Error fetching chart data:', error);\n                            // More detailed error messages based on error type\n                            let errorMessage;\n                            if (error instanceof Error) {\n                                // Network errors\n                                if (error.message.includes('Failed to fetch') || error.message.includes('NetworkError')) {\n                                    errorMessage = \"Network error: Unable to reach the API. Check if the endpoint is accessible.\";\n                                } else if (error.message.includes('CORS')) {\n                                    errorMessage = \"CORS error: The API doesn't allow requests from this origin.\";\n                                } else if (error.message.includes('API request failed with status')) {\n                                    errorMessage = error.message;\n                                } else {\n                                    errorMessage = error.message;\n                                }\n                            } else {\n                                errorMessage = String(error);\n                            }\n                            // Use sample data as fallback\n                            parsedData = getSampleData(chartConfig.chartType, chartConfig.dataMapping.groupBy);\n                            // Show a warning message but continue with fallback data\n                            setError(\"Using fallback data: \".concat(errorMessage));\n                            console.log('Using fallback data:', parsedData);\n                            // Set the data with the fallback\n                            if (!signal.aborted) {\n                                setData(parsedData);\n                            }\n                        }\n                    }\n                }\n            }[\"ChartRenderer.useEffect.fetchData\"];\n            // Only fetch if we have a valid endpoint\n            if (chartConfig.apiEndpoint) {\n                fetchData();\n            } else {\n                setError(\"No API endpoint provided\");\n            }\n            // Cleanup function to cancel pending requests when component unmounts\n            return ({\n                \"ChartRenderer.useEffect\": ()=>{\n                    controller.abort();\n                }\n            })[\"ChartRenderer.useEffect\"];\n        }\n    }[\"ChartRenderer.useEffect\"], [\n        chartConfig.apiEndpoint,\n        chartConfig.apiKey,\n        chartConfig.title,\n        JSON.stringify(chartConfig.dataMapping),\n        filterValues,\n        isFilterChanged\n    ]);\n    // Memoize the chart rendering to prevent unnecessary re-renders\n    const renderChart = react__WEBPACK_IMPORTED_MODULE_1___default().useCallback({\n        \"ChartRenderer.useCallback[renderChart]\": ()=>{\n            console.log(\"Rendering chart with config:\", {\n                chartType: chartConfig.chartType,\n                isStacked: chartConfig.isStacked,\n                title: chartConfig.title,\n                xAxis: chartConfig.dataMapping.xAxis,\n                yAxis: chartConfig.dataMapping.yAxis,\n                groupBy: chartConfig.dataMapping.groupBy\n            });\n            // Get the unit from the chart config for use with all chart types\n            const yAxisUnit = getYAxisUnit(chartConfig.dataMapping.yAxis);\n            switch(chartConfig.chartType){\n                case 'bar':\n                    // Check if we should use MultiSeriesLineBarChart (multiple Y fields with mixed line/bar types)\n                    // OR if we have a single field of type 'line'\n                    if (Array.isArray(chartConfig.dataMapping.yAxis) && chartConfig.dataMapping.yAxis.length > 0 && (chartConfig.dataMapping.yAxis.some({\n                        \"ChartRenderer.useCallback[renderChart]\": (field)=>typeof field !== 'string' && field.type === 'line'\n                    }[\"ChartRenderer.useCallback[renderChart]\"]) || // Single field case where the field type is 'line'\n                    chartConfig.dataMapping.yAxis.length === 1 && typeof chartConfig.dataMapping.yAxis[0] !== 'string' && chartConfig.dataMapping.yAxis[0].type === 'line')) {\n                        console.log(\"Using MultiSeriesLineBarChart for mixed bar/line series or single line type\");\n                        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_charts_MultiSeriesLineBarChart__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                            chartConfig: {\n                                ...chartConfig,\n                                onFilterChange: {\n                                    \"ChartRenderer.useCallback[renderChart]\": (newFilters)=>{\n                                        // Apply the filter changes\n                                        Object.entries(newFilters).forEach({\n                                            \"ChartRenderer.useCallback[renderChart]\": (param)=>{\n                                                let [key, value] = param;\n                                                handleFilterChange(key, value);\n                                            }\n                                        }[\"ChartRenderer.useCallback[renderChart]\"]);\n                                    }\n                                }[\"ChartRenderer.useCallback[renderChart]\"]\n                            },\n                            data: data,\n                            isExpanded: isExpanded,\n                            onCloseExpanded: onCloseExpanded,\n                            colorMap: legendColorMap,\n                            filterValues: filterValues,\n                            yAxisUnit: yAxisUnit\n                        }, void 0, false, {\n                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/ChartRenderer.tsx\",\n                            lineNumber: 572,\n                            columnNumber: 18\n                        }, undefined);\n                    }\n                    // Use SimpleBarChart for simple bar charts (non-stacked)\n                    if (!chartConfig.isStacked) {\n                        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_charts_SimpleBarChart__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                            chartConfig: {\n                                ...chartConfig,\n                                onFilterChange: {\n                                    \"ChartRenderer.useCallback[renderChart]\": (newFilters)=>{\n                                        // Apply the filter changes\n                                        Object.entries(newFilters).forEach({\n                                            \"ChartRenderer.useCallback[renderChart]\": (param)=>{\n                                                let [key, value] = param;\n                                                handleFilterChange(key, value);\n                                            }\n                                        }[\"ChartRenderer.useCallback[renderChart]\"]);\n                                    }\n                                }[\"ChartRenderer.useCallback[renderChart]\"]\n                            },\n                            data: data,\n                            isExpanded: isExpanded,\n                            onCloseExpanded: onCloseExpanded,\n                            colorMap: legendColorMap,\n                            filterValues: filterValues,\n                            yAxisUnit: yAxisUnit\n                        }, void 0, false, {\n                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/ChartRenderer.tsx\",\n                            lineNumber: 593,\n                            columnNumber: 18\n                        }, undefined);\n                    }\n                    // Use StackedBarChart for stacked charts with groupBy field or multiple Y fields\n                    if (chartConfig.isStacked && (chartConfig.dataMapping.groupBy || Array.isArray(chartConfig.dataMapping.yAxis) && chartConfig.dataMapping.yAxis.length > 1)) {\n                        console.log(\"Using StackedBarChart for stacked mode with multiple Y fields or groupBy\");\n                        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_charts_StackedBarChart__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                            chartConfig: {\n                                ...chartConfig,\n                                onFilterChange: {\n                                    \"ChartRenderer.useCallback[renderChart]\": (newFilters)=>{\n                                        // Apply the filter changes\n                                        Object.entries(newFilters).forEach({\n                                            \"ChartRenderer.useCallback[renderChart]\": (param)=>{\n                                                let [key, value] = param;\n                                                handleFilterChange(key, value);\n                                            }\n                                        }[\"ChartRenderer.useCallback[renderChart]\"]);\n                                    }\n                                }[\"ChartRenderer.useCallback[renderChart]\"]\n                            },\n                            data: data,\n                            isExpanded: isExpanded,\n                            onCloseExpanded: onCloseExpanded,\n                            colorMap: legendColorMap,\n                            filterValues: filterValues,\n                            yAxisUnit: yAxisUnit\n                        }, void 0, false, {\n                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/ChartRenderer.tsx\",\n                            lineNumber: 616,\n                            columnNumber: 18\n                        }, undefined);\n                    }\n                    // Fall back to SimpleBarChart for other bar chart cases\n                    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_charts_SimpleBarChart__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                        chartConfig: {\n                            ...chartConfig,\n                            onFilterChange: {\n                                \"ChartRenderer.useCallback[renderChart]\": (newFilters)=>{\n                                    // Apply the filter changes\n                                    Object.entries(newFilters).forEach({\n                                        \"ChartRenderer.useCallback[renderChart]\": (param)=>{\n                                            let [key, value] = param;\n                                            handleFilterChange(key, value);\n                                        }\n                                    }[\"ChartRenderer.useCallback[renderChart]\"]);\n                                }\n                            }[\"ChartRenderer.useCallback[renderChart]\"]\n                        },\n                        data: data,\n                        isExpanded: isExpanded,\n                        onCloseExpanded: onCloseExpanded,\n                        colorMap: legendColorMap,\n                        filterValues: filterValues,\n                        yAxisUnit: yAxisUnit\n                    }, void 0, false, {\n                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/ChartRenderer.tsx\",\n                        lineNumber: 636,\n                        columnNumber: 16\n                    }, undefined);\n                case 'stacked-bar':\n                    // Use StackedBarChart for stacked bar charts with groupBy or multiple Y fields\n                    if (chartConfig.dataMapping.groupBy || Array.isArray(chartConfig.dataMapping.yAxis) && chartConfig.dataMapping.yAxis.length > 1) {\n                        console.log(\"Using StackedBarChart for stacked-bar type with groupBy or multiple Y fields\");\n                        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_charts_StackedBarChart__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                            chartConfig: {\n                                ...chartConfig,\n                                isStacked: true,\n                                onFilterChange: {\n                                    \"ChartRenderer.useCallback[renderChart]\": (newFilters)=>{\n                                        // Apply the filter changes\n                                        Object.entries(newFilters).forEach({\n                                            \"ChartRenderer.useCallback[renderChart]\": (param)=>{\n                                                let [key, value] = param;\n                                                handleFilterChange(key, value);\n                                            }\n                                        }[\"ChartRenderer.useCallback[renderChart]\"]);\n                                    }\n                                }[\"ChartRenderer.useCallback[renderChart]\"]\n                            },\n                            data: data,\n                            isExpanded: isExpanded,\n                            onCloseExpanded: onCloseExpanded,\n                            colorMap: legendColorMap,\n                            filterValues: filterValues,\n                            yAxisUnit: yAxisUnit\n                        }, void 0, false, {\n                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/ChartRenderer.tsx\",\n                            lineNumber: 659,\n                            columnNumber: 18\n                        }, undefined);\n                    }\n                case 'dual-axis':\n                    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_charts_DualAxisChart__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                        chartConfig: {\n                            ...chartConfig,\n                            onFilterChange: {\n                                \"ChartRenderer.useCallback[renderChart]\": (newFilters)=>{\n                                    // Apply the filter changes\n                                    Object.entries(newFilters).forEach({\n                                        \"ChartRenderer.useCallback[renderChart]\": (param)=>{\n                                            let [key, value] = param;\n                                            handleFilterChange(key, value);\n                                        }\n                                    }[\"ChartRenderer.useCallback[renderChart]\"]);\n                                }\n                            }[\"ChartRenderer.useCallback[renderChart]\"]\n                        },\n                        data: data,\n                        isExpanded: isExpanded,\n                        onCloseExpanded: onCloseExpanded,\n                        colorMap: legendColorMap,\n                        filterValues: filterValues,\n                        yAxisUnit: yAxisUnit\n                    }, void 0, false, {\n                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/ChartRenderer.tsx\",\n                        lineNumber: 680,\n                        columnNumber: 16\n                    }, undefined);\n                case 'pie':\n                    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_charts_PieChart__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                        chartConfig: {\n                            ...chartConfig,\n                            onFilterChange: {\n                                \"ChartRenderer.useCallback[renderChart]\": (newFilters)=>{\n                                    // Apply the filter changes\n                                    Object.entries(newFilters).forEach({\n                                        \"ChartRenderer.useCallback[renderChart]\": (param)=>{\n                                            let [key, value] = param;\n                                            handleFilterChange(key, value);\n                                        }\n                                    }[\"ChartRenderer.useCallback[renderChart]\"]);\n                                }\n                            }[\"ChartRenderer.useCallback[renderChart]\"]\n                        },\n                        data: data,\n                        isExpanded: isExpanded,\n                        onCloseExpanded: onCloseExpanded,\n                        colorMap: legendColorMap,\n                        filterValues: filterValues,\n                        yAxisUnit: yAxisUnit\n                    }, void 0, false, {\n                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/ChartRenderer.tsx\",\n                        lineNumber: 699,\n                        columnNumber: 16\n                    }, undefined);\n                /* Temporarily commented out until AreaChart is implemented\n      case 'area':\n      case 'stacked-area':\n        return <AreaChart chartConfig={chartConfig} data={data} />;\n      */ // For other chart types, show a placeholder message\n                default:\n                    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"border border-gray-200 rounded-lg p-4 bg-white\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"mb-4\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                        className: \"text-lg font-medium text-gray-900\",\n                                        children: chartConfig.title\n                                    }, void 0, false, {\n                                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/ChartRenderer.tsx\",\n                                        lineNumber: 728,\n                                        columnNumber: 15\n                                    }, undefined),\n                                    chartConfig.subtitle && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                        className: \"text-sm text-gray-500\",\n                                        children: chartConfig.subtitle\n                                    }, void 0, false, {\n                                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/ChartRenderer.tsx\",\n                                        lineNumber: 729,\n                                        columnNumber: 40\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/ChartRenderer.tsx\",\n                                lineNumber: 727,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"bg-gray-50 p-4 rounded border border-gray-200 h-64 flex items-center justify-center\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"text-center\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                            className: \"text-lg font-medium text-indigo-600 mb-2\",\n                                            children: \"Chart Preview\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/ChartRenderer.tsx\",\n                                            lineNumber: 734,\n                                            columnNumber: 17\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                            className: \"text-sm text-gray-500 mb-4\",\n                                            children: [\n                                                \"Type: \",\n                                                chartConfig.chartType\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/ChartRenderer.tsx\",\n                                            lineNumber: 735,\n                                            columnNumber: 17\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                            className: \"text-sm text-gray-500 mb-4\",\n                                            children: \"This chart type is not yet implemented. Please select bar or stacked-bar chart.\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/ChartRenderer.tsx\",\n                                            lineNumber: 736,\n                                            columnNumber: 17\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"grid grid-cols-3 gap-2 text-xs text-gray-500\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"bg-white p-2 rounded border\",\n                                                    children: [\n                                                        \"X-Axis: \",\n                                                        typeof chartConfig.dataMapping.xAxis === 'string' ? chartConfig.dataMapping.xAxis : Array.isArray(chartConfig.dataMapping.xAxis) ? chartConfig.dataMapping.xAxis.join(', ') : 'Complex type'\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/ChartRenderer.tsx\",\n                                                    lineNumber: 740,\n                                                    columnNumber: 19\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"bg-white p-2 rounded border\",\n                                                    children: [\n                                                        \"Y-Axis: \",\n                                                        typeof chartConfig.dataMapping.yAxis === 'string' ? chartConfig.dataMapping.yAxis : Array.isArray(chartConfig.dataMapping.yAxis) ? chartConfig.dataMapping.yAxis.map({\n                                                            \"ChartRenderer.useCallback[renderChart]\": (f)=>getFieldFromYAxisConfig(f)\n                                                        }[\"ChartRenderer.useCallback[renderChart]\"]).join(', ') : 'Complex type'\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/ChartRenderer.tsx\",\n                                                    lineNumber: 743,\n                                                    columnNumber: 19\n                                                }, undefined),\n                                                chartConfig.dataMapping.groupBy && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"bg-white p-2 rounded border\",\n                                                    children: [\n                                                        \"Group By: \",\n                                                        chartConfig.dataMapping.groupBy\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/ChartRenderer.tsx\",\n                                                    lineNumber: 752,\n                                                    columnNumber: 21\n                                                }, undefined)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/ChartRenderer.tsx\",\n                                            lineNumber: 739,\n                                            columnNumber: 17\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"mt-4 bg-white p-2 rounded border text-xs text-left\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                    className: \"font-medium mb-1\",\n                                                    children: [\n                                                        \"Sample Data (\",\n                                                        Math.min(3, data.length),\n                                                        \" of \",\n                                                        data.length,\n                                                        \" rows):\"\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/ChartRenderer.tsx\",\n                                                    lineNumber: 758,\n                                                    columnNumber: 19\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"pre\", {\n                                                    className: \"overflow-auto max-h-16\",\n                                                    children: JSON.stringify(data.slice(0, 3), null, 2)\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/ChartRenderer.tsx\",\n                                                    lineNumber: 759,\n                                                    columnNumber: 19\n                                                }, undefined)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/ChartRenderer.tsx\",\n                                            lineNumber: 757,\n                                            columnNumber: 17\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/ChartRenderer.tsx\",\n                                    lineNumber: 733,\n                                    columnNumber: 15\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/ChartRenderer.tsx\",\n                                lineNumber: 732,\n                                columnNumber: 13\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/ChartRenderer.tsx\",\n                        lineNumber: 726,\n                        columnNumber: 11\n                    }, undefined);\n            }\n        }\n    }[\"ChartRenderer.useCallback[renderChart]\"], [\n        chartConfig,\n        data,\n        isExpanded,\n        onCloseExpanded,\n        legendColorMap,\n        filterValues\n    ]);\n    // Implement logic to extract the unit from yAxis when necessary\n    const getYAxisUnit = (yAxis)=>{\n        // Check if we're using a dataMapping.yAxisUnit field (single field mode)\n        if (chartConfig.dataMapping.yAxisUnit) {\n            return chartConfig.dataMapping.yAxisUnit;\n        }\n        // Otherwise try to get unit from YAxisConfig objects if available\n        if (Array.isArray(yAxis) && yAxis.length > 0 && typeof yAxis[0] !== 'string') {\n            return yAxis[0].unit;\n        }\n        // Handle single YAxisConfig\n        if (typeof yAxis !== 'string' && !Array.isArray(yAxis)) {\n            return yAxis.unit;\n        }\n        // No unit specified\n        return undefined;\n    };\n    if (error) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"p-4 rounded-md\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"ml-3\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                            className: \"text-sm font-medium text-gray-800\",\n                            children: \"Error Loading Chart\"\n                        }, void 0, false, {\n                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/ChartRenderer.tsx\",\n                            lineNumber: 797,\n                            columnNumber: 13\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"mt-2 text-sm text-gray-700\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                children: error\n                            }, void 0, false, {\n                                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/ChartRenderer.tsx\",\n                                lineNumber: 799,\n                                columnNumber: 15\n                            }, undefined)\n                        }, void 0, false, {\n                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/ChartRenderer.tsx\",\n                            lineNumber: 798,\n                            columnNumber: 13\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/ChartRenderer.tsx\",\n                    lineNumber: 796,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/ChartRenderer.tsx\",\n                lineNumber: 794,\n                columnNumber: 9\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/ChartRenderer.tsx\",\n            lineNumber: 793,\n            columnNumber: 7\n        }, undefined);\n    }\n    if (!data.length) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \" p-4 rounded-md\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                className: \"text-gray-800\",\n                children: \"No data available for this chart. API returned empty dataset.\"\n            }, void 0, false, {\n                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/ChartRenderer.tsx\",\n                lineNumber: 810,\n                columnNumber: 9\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/ChartRenderer.tsx\",\n            lineNumber: 809,\n            columnNumber: 7\n        }, undefined);\n    }\n    // Render expanded modal view if isExpanded is true\n    if (isExpanded) {\n        var _chartConfig_additionalOptions;\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_shared_Modal__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n            isOpen: isExpanded,\n            onClose: onCloseExpanded || (()=>{}),\n            title: chartConfig.title,\n            subtitle: chartConfig.subtitle,\n            isLoading: isLoading,\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"h-[70vh] w-full overflow-hidden\",\n                children: [\n                    ((_chartConfig_additionalOptions = chartConfig.additionalOptions) === null || _chartConfig_additionalOptions === void 0 ? void 0 : _chartConfig_additionalOptions.filters) && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex flex-wrap gap-3 items-center mb-4 px-2\",\n                        children: [\n                            chartConfig.additionalOptions.filters.timeFilter && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_shared_filters_TimeFilter__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n                                value: filterValues['timeFilter'] || chartConfig.additionalOptions.filters.timeFilter.options[0],\n                                onChange: (value)=>handleFilterChange('timeFilter', value),\n                                options: chartConfig.additionalOptions.filters.timeFilter.options.map((value)=>({\n                                        value,\n                                        label: value\n                                    }))\n                            }, void 0, false, {\n                                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/ChartRenderer.tsx\",\n                                lineNumber: 831,\n                                columnNumber: 17\n                            }, undefined),\n                            chartConfig.additionalOptions.filters.currencyFilter && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_shared_filters_CurrencyFilter__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n                                currency: filterValues['currencyFilter'] || chartConfig.additionalOptions.filters.currencyFilter.options[0],\n                                options: chartConfig.additionalOptions.filters.currencyFilter.options,\n                                onChange: (value)=>handleFilterChange('currencyFilter', value)\n                            }, void 0, false, {\n                                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/ChartRenderer.tsx\",\n                                lineNumber: 843,\n                                columnNumber: 17\n                            }, undefined),\n                            chartConfig.additionalOptions.filters.displayModeFilter && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_shared_filters_DisplayModeFilter__WEBPACK_IMPORTED_MODULE_10__[\"default\"], {\n                                mode: filterValues['displayModeFilter'] || chartConfig.additionalOptions.filters.displayModeFilter.options[0],\n                                onChange: (value)=>handleFilterChange('displayModeFilter', value)\n                            }, void 0, false, {\n                                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/ChartRenderer.tsx\",\n                                lineNumber: 852,\n                                columnNumber: 17\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/ChartRenderer.tsx\",\n                        lineNumber: 828,\n                        columnNumber: 13\n                    }, undefined),\n                    renderChart()\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/ChartRenderer.tsx\",\n                lineNumber: 825,\n                columnNumber: 9\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/ChartRenderer.tsx\",\n            lineNumber: 818,\n            columnNumber: 7\n        }, undefined);\n    }\n    // Render the regular chart\n    return renderChart();\n};\n_s(ChartRenderer, \"snH6PBCcwX0qDLtSWASffnT92II=\");\n_c = ChartRenderer;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ChartRenderer);\nvar _c;\n$RefreshReg$(_c, \"ChartRenderer\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/admin/components/ChartRenderer.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/admin/components/charts/DualAxisChart.tsx":
/*!*******************************************************!*\
  !*** ./app/admin/components/charts/DualAxisChart.tsx ***!
  \*******************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _visx_responsive__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @visx/responsive */ \"(app-pages-browser)/./node_modules/@visx/responsive/esm/components/ParentSize.js\");\n/* harmony import */ var _visx_group__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @visx/group */ \"(app-pages-browser)/./node_modules/@visx/group/esm/Group.js\");\n/* harmony import */ var _visx_grid__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @visx/grid */ \"(app-pages-browser)/./node_modules/@visx/grid/esm/grids/GridRows.js\");\n/* harmony import */ var _visx_scale__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @visx/scale */ \"(app-pages-browser)/./node_modules/@visx/scale/esm/scales/band.js\");\n/* harmony import */ var _visx_scale__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @visx/scale */ \"(app-pages-browser)/./node_modules/@visx/scale/esm/scales/linear.js\");\n/* harmony import */ var _visx_axis__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @visx/axis */ \"(app-pages-browser)/./node_modules/@visx/axis/esm/axis/AxisLeft.js\");\n/* harmony import */ var _visx_axis__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @visx/axis */ \"(app-pages-browser)/./node_modules/@visx/axis/esm/axis/AxisRight.js\");\n/* harmony import */ var _visx_axis__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @visx/axis */ \"(app-pages-browser)/./node_modules/@visx/axis/esm/axis/AxisBottom.js\");\n/* harmony import */ var _visx_shape__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @visx/shape */ \"(app-pages-browser)/./node_modules/@visx/shape/esm/shapes/Bar.js\");\n/* harmony import */ var _visx_shape__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @visx/shape */ \"(app-pages-browser)/./node_modules/@visx/shape/esm/shapes/LinePath.js\");\n/* harmony import */ var _app_utils_chartColors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/app/utils/chartColors */ \"(app-pages-browser)/./app/utils/chartColors.ts\");\n/* harmony import */ var _app_components_shared_ChartTooltip__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/app/components/shared/ChartTooltip */ \"(app-pages-browser)/./app/components/shared/ChartTooltip.tsx\");\n/* harmony import */ var _app_components_shared_buttons_ButtonSecondary__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/app/components/shared/buttons/ButtonSecondary */ \"(app-pages-browser)/./app/components/shared/buttons/ButtonSecondary.tsx\");\n/* harmony import */ var _app_components_shared_BrushTimeScale__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/app/components/shared/BrushTimeScale */ \"(app-pages-browser)/./app/components/shared/BrushTimeScale.tsx\");\n/* harmony import */ var _visx_curve__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @visx/curve */ \"(app-pages-browser)/./node_modules/d3-shape/src/curve/catmullRom.js\");\n/* harmony import */ var _app_components_shared_Modal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/app/components/shared/Modal */ \"(app-pages-browser)/./app/components/shared/Modal.tsx\");\n/* harmony import */ var _app_components_shared_filters_TimeFilter__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @/app/components/shared/filters/TimeFilter */ \"(app-pages-browser)/./app/components/shared/filters/TimeFilter.tsx\");\n/* harmony import */ var _app_components_shared_filters_CurrencyFilter__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @/app/components/shared/filters/CurrencyFilter */ \"(app-pages-browser)/./app/components/shared/filters/CurrencyFilter.tsx\");\n/* harmony import */ var _app_components_shared_filters_DisplayModeFilter__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @/app/components/shared/filters/DisplayModeFilter */ \"(app-pages-browser)/./app/components/shared/filters/DisplayModeFilter.tsx\");\n/* harmony import */ var _app_components_shared_LegendItem__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @/app/components/shared/LegendItem */ \"(app-pages-browser)/./app/components/shared/LegendItem.tsx\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Define RefreshIcon component\nconst RefreshIcon = (param)=>{\n    let { className = \"w-4 h-4\" } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n        className: className,\n        fill: \"none\",\n        stroke: \"currentColor\",\n        viewBox: \"0 0 24 24\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n        }, void 0, false, {\n            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/DualAxisChart.tsx\",\n            lineNumber: 32,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/DualAxisChart.tsx\",\n        lineNumber: 25,\n        columnNumber: 5\n    }, undefined);\n};\n_c = RefreshIcon;\n// Helper function to get field from YAxisConfig or use string directly\nfunction getYAxisField(field) {\n    return typeof field === 'string' ? field : field.field;\n}\n// Helper function to get unit from YAxisConfig or use a default\nfunction getYAxisUnit(field) {\n    return typeof field === 'string' ? undefined : field.unit;\n}\n// Format value with appropriate units\nfunction formatWithUnit(value, unit, defaultUnit) {\n    // Get the unit symbol (use defaultUnit as fallback)\n    const unitSymbol = unit || defaultUnit || '';\n    const isUnitPrefix = unitSymbol && unitSymbol !== '%' && unitSymbol !== 'SOL'; // Most units are prefixed, but some go after\n    // Format with appropriate scale\n    let formattedValue;\n    if (value >= 1000000000) {\n        formattedValue = \"\".concat((value / 1000000000).toFixed(2), \"B\");\n    } else if (value >= 1000000) {\n        formattedValue = \"\".concat((value / 1000000).toFixed(2), \"M\");\n    } else if (value >= 1000) {\n        formattedValue = \"\".concat((value / 1000).toFixed(2), \"K\");\n    } else {\n        formattedValue = value.toFixed(2);\n    }\n    // Return with correct unit placement (or no unit if not specified)\n    if (!unitSymbol) return formattedValue;\n    return isUnitPrefix ? \"\".concat(unitSymbol).concat(formattedValue) : \"\".concat(formattedValue, \"\\xa0\").concat(unitSymbol);\n}\nconst DualAxisChart = (param)=>{\n    let { chartConfig, data, width = 500, height = 300, isExpanded = false, onCloseExpanded, colorMap: externalColorMap, filterValues, yAxisUnit } = param;\n    var _this = undefined;\n    _s();\n    const chartRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const modalChartRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [legendItems, setLegendItems] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    // Brush state\n    const [isBrushActive, setIsBrushActive] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [brushDomain, setBrushDomain] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    // Filtered data based on brush\n    const [filteredData, setFilteredData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    // Modal-specific filtered data\n    const [modalFilteredData, setModalFilteredData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    // Update tooltip state definition\n    const [tooltip, setTooltip] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        visible: false,\n        left: 0,\n        top: 0,\n        key: '',\n        items: []\n    });\n    // Modal brush state\n    const [isModalBrushActive, setIsModalBrushActive] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [modalBrushDomain, setModalBrushDomain] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    // Add state for filter values in modal\n    const [modalFilterValues, setModalFilterValues] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(filterValues || {});\n    // Add state to track client-side rendering\n    const [isClient, setIsClient] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Extract mapping fields\n    const xField = chartConfig.dataMapping.xAxis;\n    const yField = chartConfig.dataMapping.yAxis;\n    // For type safety, ensure we use string values for indexing\n    const xKey = typeof xField === 'string' ? xField : xField[0];\n    // Set isClient to true when component mounts in browser\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"DualAxisChart.useEffect\": ()=>{\n            setIsClient(true);\n        }\n    }[\"DualAxisChart.useEffect\"], []);\n    // Helper function to format X-axis tick labels\n    const formatXAxisLabel = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"DualAxisChart.useCallback[formatXAxisLabel]\": (value)=>{\n            // Check if the value is a date format (YYYY-MM-DD or similar)\n            const isDateFormat = /^\\d{4}-\\d{2}-\\d{2}/.test(value) || /^\\d{2}\\/\\d{2}\\/\\d{4}/.test(value) || /^\\d{1,2}-[A-Za-z]{3}-\\d{4}/.test(value);\n            if (isDateFormat) {\n                const date = new Date(value);\n                if (!isNaN(date.getTime())) {\n                    // Format based on timeFilter\n                    if ((filterValues === null || filterValues === void 0 ? void 0 : filterValues.timeFilter) === 'D' || (filterValues === null || filterValues === void 0 ? void 0 : filterValues.timeFilter) === 'W') {\n                        return date.toLocaleDateString('en-US', {\n                            month: 'short',\n                            day: 'numeric'\n                        });\n                    } else if ((filterValues === null || filterValues === void 0 ? void 0 : filterValues.timeFilter) === 'M') {\n                        return date.toLocaleDateString('en-US', {\n                            month: 'short'\n                        });\n                    } else if ((filterValues === null || filterValues === void 0 ? void 0 : filterValues.timeFilter) === 'Q') {\n                        const quarter = Math.floor(date.getMonth() / 3) + 1;\n                        return \"Q\".concat(quarter);\n                    } else if ((filterValues === null || filterValues === void 0 ? void 0 : filterValues.timeFilter) === 'Y') {\n                        return date.getFullYear().toString();\n                    }\n                    // Default format if no timeFilter is specified\n                    return date.toLocaleDateString('en-US', {\n                        month: 'short',\n                        day: 'numeric'\n                    });\n                }\n            }\n            // For quarter format (Q1, Q2, etc.)\n            if (/^Q[1-4]\\s\\d{4}$/.test(value)) {\n                return value.substring(0, 2); // Just \"Q1\", \"Q2\", etc.\n            }\n            // For month-year format (Jan 2023)\n            if (/^[A-Za-z]{3}\\s\\d{4}$/.test(value)) {\n                return value.substring(0, 3); // Just \"Jan\", \"Feb\", etc.\n            }\n            // Don't shorten other values that are already short\n            if (value.length <= 5) {\n                return value;\n            }\n            // For other longer text, truncate with ellipsis\n            return \"\".concat(value.substring(0, 3), \"...\");\n        }\n    }[\"DualAxisChart.useCallback[formatXAxisLabel]\"], [\n        filterValues\n    ]);\n    // Format value for tooltip\n    const formatValue = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"DualAxisChart.useCallback[formatValue]\": (value)=>{\n            // Add null/undefined check\n            if (value === undefined || value === null) {\n                return '$0.00';\n            }\n            if (value >= 1000000000) {\n                return \"$\".concat((value / 1000000000).toFixed(2), \"B\");\n            } else if (value >= 1000000) {\n                return \"$\".concat((value / 1000000).toFixed(2), \"M\");\n            } else if (value >= 1000) {\n                return \"$\".concat((value / 1000).toFixed(2), \"K\");\n            } else {\n                return \"$\".concat(value.toFixed(2));\n            }\n        }\n    }[\"DualAxisChart.useCallback[formatValue]\"], []);\n    // Format y-axis tick value with appropriate units\n    const formatTickValue = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"DualAxisChart.useCallback[formatTickValue]\": (value)=>{\n            if (value === 0) return '0';\n            if (value >= 1000000000) {\n                const formattedValue = (value / 1000000000).toFixed(1);\n                return formattedValue.endsWith('.0') ? \"\".concat(formattedValue.slice(0, -2), \"B\") : \"\".concat(formattedValue, \"B\");\n            } else if (value >= 1000000) {\n                const formattedValue = (value / 1000000).toFixed(1);\n                return formattedValue.endsWith('.0') ? \"\".concat(formattedValue.slice(0, -2), \"M\") : \"\".concat(formattedValue, \"M\");\n            } else if (value >= 1000) {\n                const formattedValue = (value / 1000).toFixed(1);\n                return formattedValue.endsWith('.0') ? \"\".concat(formattedValue.slice(0, -2), \"K\") : \"\".concat(formattedValue, \"K\");\n            } else {\n                return value.toFixed(0);\n            }\n        }\n    }[\"DualAxisChart.useCallback[formatTickValue]\"], []);\n    // Placeholder for refresh data functionality\n    const refreshData = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"DualAxisChart.useCallback[refreshData]\": ()=>{\n            // If onFilterChange exists in chartConfig, call it with current filters\n            if (chartConfig.onFilterChange) {\n                chartConfig.onFilterChange(filterValues || {});\n            }\n            setError(null);\n        }\n    }[\"DualAxisChart.useCallback[refreshData]\"], [\n        filterValues,\n        chartConfig\n    ]);\n    // Extract data for the chart\n    const { chartData, fields, fieldColors } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"DualAxisChart.useMemo\": ()=>{\n            // Use appropriate data based on context\n            const currentData = isExpanded && isModalBrushActive && modalFilteredData.length > 0 ? modalFilteredData : !isExpanded && isBrushActive && filteredData.length > 0 ? filteredData : data;\n            if (!currentData || currentData.length === 0) {\n                return {\n                    chartData: [],\n                    fields: [],\n                    fieldColors: {}\n                };\n            }\n            // Use external color map if available\n            const preferredColorMap = externalColorMap || {};\n            // Filter data first to remove any undefined x values\n            const processedData = currentData.filter({\n                \"DualAxisChart.useMemo.processedData\": (d)=>d[xKey] !== undefined && d[xKey] !== null\n            }[\"DualAxisChart.useMemo.processedData\"]);\n            // Sort by date if applicable\n            if (processedData.length > 0) {\n                // Detect if data contains dates\n                const isDateField = typeof processedData[0][xKey] === 'string' && (processedData[0][xKey].match(/^\\d{4}-\\d{2}-\\d{2}/) || /^\\w+\\s\\d{4}$/.test(processedData[0][xKey]) || /^\\d{4}$/.test(processedData[0][xKey]));\n                if (isDateField) {\n                    // Sort dates chronologically (past to present)\n                    processedData.sort({\n                        \"DualAxisChart.useMemo\": (a, b)=>{\n                            const dateA = new Date(a[xKey]);\n                            const dateB = new Date(b[xKey]);\n                            return dateA.getTime() - dateB.getTime();\n                        }\n                    }[\"DualAxisChart.useMemo\"]);\n                }\n            }\n            // Get all field names that should appear in the chart\n            let allFields = [];\n            if (Array.isArray(yField)) {\n                allFields = yField.map({\n                    \"DualAxisChart.useMemo\": (field)=>getYAxisField(field)\n                }[\"DualAxisChart.useMemo\"]);\n            } else {\n                allFields = [\n                    getYAxisField(yField)\n                ];\n            }\n            // Prepare color mapping for fields\n            const colorMapping = {};\n            allFields.forEach({\n                \"DualAxisChart.useMemo\": (field, index)=>{\n                    colorMapping[field] = preferredColorMap[field] || (0,_app_utils_chartColors__WEBPACK_IMPORTED_MODULE_2__.getColorByIndex)(index);\n                }\n            }[\"DualAxisChart.useMemo\"]);\n            return {\n                chartData: processedData,\n                fields: allFields,\n                fieldColors: colorMapping\n            };\n        }\n    }[\"DualAxisChart.useMemo\"], [\n        data,\n        filteredData,\n        modalFilteredData,\n        isBrushActive,\n        isModalBrushActive,\n        xKey,\n        yField,\n        externalColorMap,\n        isExpanded\n    ]);\n    // Utility to determine if a field belongs to the right axis\n    const isRightAxisField = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"DualAxisChart.useCallback[isRightAxisField]\": (field)=>{\n            if (!chartConfig.dualAxisConfig) return false;\n            return chartConfig.dualAxisConfig.rightAxisFields.includes(field);\n        }\n    }[\"DualAxisChart.useCallback[isRightAxisField]\"], [\n        chartConfig.dualAxisConfig\n    ]);\n    // Utility to check if a field should be rendered as a line\n    const shouldRenderAsLine = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"DualAxisChart.useCallback[shouldRenderAsLine]\": (field)=>{\n            if (!chartConfig.dualAxisConfig) return false;\n            // Check field configuration in yField if available\n            if (Array.isArray(yField) && typeof yField[0] !== 'string') {\n                const fieldConfig = yField.find({\n                    \"DualAxisChart.useCallback[shouldRenderAsLine].fieldConfig\": (config)=>config.field === field\n                }[\"DualAxisChart.useCallback[shouldRenderAsLine].fieldConfig\"]);\n                if (fieldConfig) {\n                    return fieldConfig.type === 'line';\n                }\n            }\n            // Otherwise use axis type from dual axis config\n            const isRight = isRightAxisField(field);\n            return isRight ? chartConfig.dualAxisConfig.rightAxisType === 'line' : chartConfig.dualAxisConfig.leftAxisType === 'line';\n        }\n    }[\"DualAxisChart.useCallback[shouldRenderAsLine]\"], [\n        chartConfig.dualAxisConfig,\n        yField,\n        isRightAxisField\n    ]);\n    // Handle mouse move for tooltips\n    const handleMouseMove = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"DualAxisChart.useCallback[handleMouseMove]\": function(e) {\n            let isModal = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n            var _containerRef_current;\n            const containerRef = isModal ? modalChartRef : chartRef;\n            const rect = (_containerRef_current = containerRef.current) === null || _containerRef_current === void 0 ? void 0 : _containerRef_current.getBoundingClientRect();\n            if (!rect) return;\n            // Get mouse position - use client coordinates for consistency\n            const mouseX = e.clientX - rect.left;\n            const mouseY = e.clientY - rect.top;\n            // Use current data based on brush state\n            const currentData = isModal ? isModalBrushActive && modalFilteredData.length > 0 ? modalFilteredData : data : isBrushActive && filteredData.length > 0 ? filteredData : data;\n            // Check if we have data to work with\n            if (currentData.length === 0) return;\n            // Calculate available chart space for dual-axis chart\n            const margin = {\n                top: 10,\n                right: 25,\n                bottom: 30,\n                left: 40\n            };\n            const innerWidth = rect.width - margin.left - margin.right;\n            // Adjust mouseX to account for margin\n            const adjustedMouseX = mouseX - margin.left;\n            // Early exit if mouse is outside the chart area\n            if (adjustedMouseX < 0 || adjustedMouseX > innerWidth) {\n                if (tooltip.visible) {\n                    setTooltip({\n                        \"DualAxisChart.useCallback[handleMouseMove]\": (prev)=>({\n                                ...prev,\n                                visible: false\n                            })\n                    }[\"DualAxisChart.useCallback[handleMouseMove]\"]);\n                }\n                return;\n            }\n            // Calculate bar width and find closest bar\n            const barWidth = innerWidth / chartData.length;\n            const barIndex = Math.floor(adjustedMouseX / barWidth);\n            // Validate the index\n            if (barIndex < 0 || barIndex >= chartData.length) {\n                if (tooltip.visible) {\n                    setTooltip({\n                        \"DualAxisChart.useCallback[handleMouseMove]\": (prev)=>({\n                                ...prev,\n                                visible: false\n                            })\n                    }[\"DualAxisChart.useCallback[handleMouseMove]\"]);\n                }\n                return;\n            }\n            // Get the data point at this index\n            const dataPoint = chartData[barIndex];\n            if (!dataPoint) {\n                if (tooltip.visible) {\n                    setTooltip({\n                        \"DualAxisChart.useCallback[handleMouseMove]\": (prev)=>({\n                                ...prev,\n                                visible: false\n                            })\n                    }[\"DualAxisChart.useCallback[handleMouseMove]\"]);\n                }\n                return;\n            }\n            const xValue = dataPoint[xKey];\n            // Calculate tooltip position\n            const tooltipLeft = mouseX;\n            const tooltipTop = Math.max(mouseY - 10, 10);\n            // Only update if showing a new x-value or hiding previous one\n            if (!tooltip.visible || tooltip.key !== xValue) {\n                // For dual-axis, show all field values\n                const tooltipItems = fields.filter({\n                    \"DualAxisChart.useCallback[handleMouseMove].tooltipItems\": (field)=>{\n                        // Only include fields with non-zero values\n                        const value = Number(dataPoint[field]);\n                        return !isNaN(value) && value > 0;\n                    }\n                }[\"DualAxisChart.useCallback[handleMouseMove].tooltipItems\"]).map({\n                    \"DualAxisChart.useCallback[handleMouseMove].tooltipItems\": (field)=>{\n                        // Get the unit specific to this field only\n                        const fieldUnit = getYAxisUnit(// Look for this specific field in the yField array\n                        Array.isArray(yField) ? yField.find({\n                            \"DualAxisChart.useCallback[handleMouseMove].tooltipItems.fieldUnit\": (f)=>getYAxisField(f) === field\n                        }[\"DualAxisChart.useCallback[handleMouseMove].tooltipItems.fieldUnit\"]) || field : field);\n                        return {\n                            label: field,\n                            value: formatWithUnit(Number(dataPoint[field]) || 0, fieldUnit),\n                            color: fieldColors[field] || _app_utils_chartColors__WEBPACK_IMPORTED_MODULE_2__.blue,\n                            shape: shouldRenderAsLine(field) ? 'circle' : 'square'\n                        };\n                    }\n                }[\"DualAxisChart.useCallback[handleMouseMove].tooltipItems\"]);\n                // If no values found, show placeholder\n                if (tooltipItems.length === 0 && fields.length > 0) {\n                    const firstFieldUnit = getYAxisUnit(Array.isArray(yField) ? yField.find({\n                        \"DualAxisChart.useCallback[handleMouseMove].firstFieldUnit\": (f)=>getYAxisField(f) === fields[0]\n                    }[\"DualAxisChart.useCallback[handleMouseMove].firstFieldUnit\"]) || fields[0] : fields[0]);\n                    tooltipItems.push({\n                        label: fields[0],\n                        value: formatWithUnit(0, firstFieldUnit),\n                        color: fieldColors[fields[0]] || _app_utils_chartColors__WEBPACK_IMPORTED_MODULE_2__.blue,\n                        shape: shouldRenderAsLine(fields[0]) ? 'circle' : 'square'\n                    });\n                }\n                // Update the tooltip\n                setTooltip({\n                    visible: true,\n                    key: xValue,\n                    items: tooltipItems,\n                    left: tooltipLeft,\n                    top: tooltipTop\n                });\n            } else {\n                // If tooltip content isn't changing, just update position\n                setTooltip({\n                    \"DualAxisChart.useCallback[handleMouseMove]\": (prev)=>({\n                            ...prev,\n                            left: tooltipLeft,\n                            top: tooltipTop\n                        })\n                }[\"DualAxisChart.useCallback[handleMouseMove]\"]);\n            }\n        }\n    }[\"DualAxisChart.useCallback[handleMouseMove]\"], [\n        data,\n        filteredData,\n        modalFilteredData,\n        isBrushActive,\n        isModalBrushActive,\n        chartData,\n        fields,\n        xKey,\n        yField,\n        fieldColors,\n        formatValue,\n        tooltip.visible,\n        tooltip.key,\n        tooltip.items,\n        shouldRenderAsLine,\n        getYAxisUnit\n    ]);\n    // Handle mouse leave for tooltip\n    const handleMouseLeave = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"DualAxisChart.useCallback[handleMouseLeave]\": ()=>{\n            if (tooltip.visible) {\n                setTooltip({\n                    \"DualAxisChart.useCallback[handleMouseLeave]\": (prev)=>({\n                            ...prev,\n                            visible: false\n                        })\n                }[\"DualAxisChart.useCallback[handleMouseLeave]\"]);\n            }\n        }\n    }[\"DualAxisChart.useCallback[handleMouseLeave]\"], [\n        tooltip.visible\n    ]);\n    // Process brush data\n    const brushData = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"DualAxisChart.useMemo[brushData]\": ()=>{\n            if (!data || data.length === 0) return [];\n            // Filter and ensure x values are valid\n            const processedData = data.filter({\n                \"DualAxisChart.useMemo[brushData].processedData\": (d)=>d[xKey] !== undefined && d[xKey] !== null\n            }[\"DualAxisChart.useMemo[brushData].processedData\"]);\n            // Create synthetic dates for brush\n            const baseDate = new Date();\n            baseDate.setHours(0, 0, 0, 0);\n            // Get the first field for brush data\n            const firstField = fields.length > 0 ? fields[0] : '';\n            // Create date points for the brush\n            const brushPoints = processedData.map({\n                \"DualAxisChart.useMemo[brushData].brushPoints\": (d, i)=>{\n                    // Try to parse date from x value or use synthetic date\n                    let date;\n                    if (typeof d[xKey] === 'string' && (d[xKey].match(/^\\d{4}-\\d{2}-\\d{2}/) || /^\\d{2}\\/\\d{2}\\/\\d{4}/.test(d[xKey]) || /^[A-Za-z]{3}\\s\\d{4}$/.test(d[xKey]) || /^\\d{4}$/.test(d[xKey]))) {\n                        date = new Date(d[xKey]);\n                        if (isNaN(date.getTime())) {\n                            date = new Date(baseDate);\n                            date.setDate(baseDate.getDate() + i);\n                        }\n                    } else {\n                        date = new Date(baseDate);\n                        date.setDate(baseDate.getDate() + i);\n                    }\n                    return {\n                        date,\n                        value: Number(d[firstField]) || 0,\n                        originalData: d\n                    };\n                }\n            }[\"DualAxisChart.useMemo[brushData].brushPoints\"]);\n            // Ensure brush data is sorted from past to present\n            return brushPoints.sort({\n                \"DualAxisChart.useMemo[brushData]\": (a, b)=>a.date.getTime() - b.date.getTime()\n            }[\"DualAxisChart.useMemo[brushData]\"]);\n        }\n    }[\"DualAxisChart.useMemo[brushData]\"], [\n        data,\n        xKey,\n        fields\n    ]);\n    // Handle brush change\n    const handleBrushChange = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"DualAxisChart.useCallback[handleBrushChange]\": (domain)=>{\n            if (!domain) {\n                if (isBrushActive) {\n                    setBrushDomain(null);\n                    setIsBrushActive(false);\n                    setFilteredData([]);\n                }\n                return;\n            }\n            const { x0, x1 } = domain;\n            // Update brush domain\n            setBrushDomain([\n                new Date(x0),\n                new Date(x1)\n            ]);\n            // Filter data based on brush selection\n            const selectedItems = brushData.filter({\n                \"DualAxisChart.useCallback[handleBrushChange].selectedItems\": (item)=>item.date >= new Date(x0) && item.date <= new Date(x1)\n            }[\"DualAxisChart.useCallback[handleBrushChange].selectedItems\"]).map({\n                \"DualAxisChart.useCallback[handleBrushChange].selectedItems\": (item)=>item.originalData\n            }[\"DualAxisChart.useCallback[handleBrushChange].selectedItems\"]);\n            setFilteredData(selectedItems);\n            if (!isBrushActive) {\n                setIsBrushActive(true);\n            }\n        }\n    }[\"DualAxisChart.useCallback[handleBrushChange]\"], [\n        isBrushActive,\n        brushData\n    ]);\n    // Handle modal brush change\n    const handleModalBrushChange = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"DualAxisChart.useCallback[handleModalBrushChange]\": (domain)=>{\n            if (!domain) {\n                if (isModalBrushActive) {\n                    setModalBrushDomain(null);\n                    setIsModalBrushActive(false);\n                    setModalFilteredData([]);\n                }\n                return;\n            }\n            const { x0, x1 } = domain;\n            // Update modal brush domain\n            setModalBrushDomain([\n                new Date(x0),\n                new Date(x1)\n            ]);\n            // Filter data based on brush selection\n            const selectedItems = brushData.filter({\n                \"DualAxisChart.useCallback[handleModalBrushChange].selectedItems\": (item)=>item.date >= new Date(x0) && item.date <= new Date(x1)\n            }[\"DualAxisChart.useCallback[handleModalBrushChange].selectedItems\"]).map({\n                \"DualAxisChart.useCallback[handleModalBrushChange].selectedItems\": (item)=>item.originalData\n            }[\"DualAxisChart.useCallback[handleModalBrushChange].selectedItems\"]);\n            setModalFilteredData(selectedItems);\n            if (!isModalBrushActive) {\n                setIsModalBrushActive(true);\n            }\n        }\n    }[\"DualAxisChart.useCallback[handleModalBrushChange]\"], [\n        isModalBrushActive,\n        brushData\n    ]);\n    // Enhanced filter change handler for modal\n    const handleModalFilterChange = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"DualAxisChart.useCallback[handleModalFilterChange]\": (key, value)=>{\n            console.log(\"Modal filter changed: \".concat(key, \" = \").concat(value));\n            const updatedFilters = {\n                ...modalFilterValues,\n                [key]: value\n            };\n            // Update local state\n            setModalFilterValues(updatedFilters);\n            // If onFilterChange exists in chartConfig, call it with updated filters\n            if (chartConfig.onFilterChange) {\n                chartConfig.onFilterChange(updatedFilters);\n            }\n        }\n    }[\"DualAxisChart.useCallback[handleModalFilterChange]\"], [\n        modalFilterValues,\n        chartConfig\n    ]);\n    // Update legend items based on chart data\n    const updateLegendItems = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"DualAxisChart.useCallback[updateLegendItems]\": ()=>{\n            if (fields.length > 0) {\n                const items = fields.map({\n                    \"DualAxisChart.useCallback[updateLegendItems].items\": (field)=>({\n                            id: field,\n                            label: field,\n                            color: fieldColors[field] || _app_utils_chartColors__WEBPACK_IMPORTED_MODULE_2__.blue\n                        })\n                }[\"DualAxisChart.useCallback[updateLegendItems].items\"]);\n                setLegendItems(items);\n            }\n        }\n    }[\"DualAxisChart.useCallback[updateLegendItems]\"], [\n        fields,\n        fieldColors\n    ]);\n    // Sync modal brush domain with main brush domain when modal opens\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"DualAxisChart.useEffect\": ()=>{\n            if (isExpanded) {\n                console.log('Modal opened, syncing brush domains');\n                // When modal opens, sync the brush domains\n                setModalBrushDomain(brushDomain);\n                setIsModalBrushActive(isBrushActive);\n                // Also sync filtered data\n                if (isBrushActive && filteredData.length > 0) {\n                    console.log('Syncing filtered data to modal:', filteredData.length, 'items');\n                    setModalFilteredData(filteredData);\n                } else {\n                    setModalFilteredData(data);\n                }\n                // Update legend items for modal\n                updateLegendItems();\n            }\n        }\n    }[\"DualAxisChart.useEffect\"], [\n        isExpanded,\n        brushDomain,\n        isBrushActive,\n        filteredData,\n        data,\n        updateLegendItems\n    ]);\n    // Render chart content function\n    const renderChartContent = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"DualAxisChart.useCallback[renderChartContent]\": function(chartWidth, chartHeight) {\n            let isModal = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;\n            // Show error state or no data\n            if (error || chartData.length === 0) {\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex flex-col justify-center items-center h-full\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-gray-400/80 text-xs mb-2\",\n                            children: error || 'No data available'\n                        }, void 0, false, {\n                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/DualAxisChart.tsx\",\n                            lineNumber: 615,\n                            columnNumber: 11\n                        }, _this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app_components_shared_buttons_ButtonSecondary__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                            onClick: refreshData,\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex items-center gap-1.5\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(RefreshIcon, {\n                                        className: \"w-3.5 h-3.5\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/DualAxisChart.tsx\",\n                                        lineNumber: 618,\n                                        columnNumber: 15\n                                    }, _this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        children: \"Refresh\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/DualAxisChart.tsx\",\n                                        lineNumber: 619,\n                                        columnNumber: 15\n                                    }, _this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/DualAxisChart.tsx\",\n                                lineNumber: 617,\n                                columnNumber: 13\n                            }, _this)\n                        }, void 0, false, {\n                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/DualAxisChart.tsx\",\n                            lineNumber: 616,\n                            columnNumber: 11\n                        }, _this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/DualAxisChart.tsx\",\n                    lineNumber: 614,\n                    columnNumber: 9\n                }, _this);\n            }\n            // Define margins for chart\n            const margin = {\n                top: 10,\n                right: 25,\n                bottom: 30,\n                left: 40\n            };\n            const innerWidth = chartWidth - margin.left - margin.right;\n            const innerHeight = chartHeight - margin.top - margin.bottom;\n            if (innerWidth <= 0 || innerHeight <= 0) return null;\n            // Use appropriate data based on view and brush state\n            const currentData = isModal ? isModalBrushActive && modalFilteredData.length > 0 ? modalFilteredData : data : isBrushActive && filteredData.length > 0 ? filteredData : data;\n            // Create scales for dual-axis chart\n            const xScale = (0,_visx_scale__WEBPACK_IMPORTED_MODULE_11__[\"default\"])({\n                domain: currentData.map({\n                    \"DualAxisChart.useCallback[renderChartContent].xScale\": (d)=>d[xKey]\n                }[\"DualAxisChart.useCallback[renderChartContent].xScale\"]).sort({\n                    \"DualAxisChart.useCallback[renderChartContent].xScale\": (a, b)=>{\n                        // If they're dates, sort chronologically \n                        if (typeof a === 'string' && typeof b === 'string' && (a.match(/^\\d{4}-\\d{2}-\\d{2}/) || /^\\w+\\s\\d{1,2}$/.test(a)) && (b.match(/^\\d{4}-\\d{2}-\\d{2}/) || /^\\w+\\s\\d{1,2}$/.test(b))) {\n                            const dateA = new Date(a);\n                            const dateB = new Date(b);\n                            if (!isNaN(dateA.getTime()) && !isNaN(dateB.getTime())) {\n                                return dateA.getTime() - dateB.getTime();\n                            }\n                        }\n                        return 0; // No change in order if not dates\n                    }\n                }[\"DualAxisChart.useCallback[renderChartContent].xScale\"]),\n                range: [\n                    0,\n                    innerWidth\n                ],\n                padding: 0.2\n            });\n            // Calculate max values for left and right axes\n            const leftAxisFields = fields.filter({\n                \"DualAxisChart.useCallback[renderChartContent].leftAxisFields\": (field)=>!isRightAxisField(field)\n            }[\"DualAxisChart.useCallback[renderChartContent].leftAxisFields\"]);\n            const rightAxisFields = fields.filter({\n                \"DualAxisChart.useCallback[renderChartContent].rightAxisFields\": (field)=>isRightAxisField(field)\n            }[\"DualAxisChart.useCallback[renderChartContent].rightAxisFields\"]);\n            const leftMax = Math.max(...currentData.flatMap({\n                \"DualAxisChart.useCallback[renderChartContent].leftMax\": (d)=>leftAxisFields.map({\n                        \"DualAxisChart.useCallback[renderChartContent].leftMax\": (field)=>Number(d[field]) || 0\n                    }[\"DualAxisChart.useCallback[renderChartContent].leftMax\"])\n            }[\"DualAxisChart.useCallback[renderChartContent].leftMax\"]), 1);\n            const rightMax = Math.max(...currentData.flatMap({\n                \"DualAxisChart.useCallback[renderChartContent].rightMax\": (d)=>rightAxisFields.map({\n                        \"DualAxisChart.useCallback[renderChartContent].rightMax\": (field)=>Number(d[field]) || 0\n                    }[\"DualAxisChart.useCallback[renderChartContent].rightMax\"])\n            }[\"DualAxisChart.useCallback[renderChartContent].rightMax\"]), 1);\n            // Create scales for left and right y-axes\n            const leftYScale = (0,_visx_scale__WEBPACK_IMPORTED_MODULE_12__[\"default\"])({\n                domain: [\n                    0,\n                    leftMax * 1.1\n                ],\n                range: [\n                    innerHeight,\n                    0\n                ],\n                nice: true,\n                clamp: true\n            });\n            const rightYScale = (0,_visx_scale__WEBPACK_IMPORTED_MODULE_12__[\"default\"])({\n                domain: [\n                    0,\n                    rightMax * 1.1\n                ],\n                range: [\n                    innerHeight,\n                    0\n                ],\n                nice: true,\n                clamp: true\n            });\n            // Create line data for series that should be rendered as lines\n            const lineDataByField = {};\n            // Initialize data structure for each field that should be a line\n            fields.forEach({\n                \"DualAxisChart.useCallback[renderChartContent]\": (field)=>{\n                    if (shouldRenderAsLine(field)) {\n                        lineDataByField[field] = [];\n                    }\n                }\n            }[\"DualAxisChart.useCallback[renderChartContent]\"]);\n            // Build line points\n            currentData.forEach({\n                \"DualAxisChart.useCallback[renderChartContent]\": (d)=>{\n                    fields.forEach({\n                        \"DualAxisChart.useCallback[renderChartContent]\": (field)=>{\n                            if (shouldRenderAsLine(field)) {\n                                const x = xScale(d[xKey]) || 0;\n                                const centerX = x + xScale.bandwidth() / 2; // Center of the bar\n                                // Use appropriate scale based on axis\n                                const y = isRightAxisField(field) ? rightYScale(Number(d[field]) || 0) : leftYScale(Number(d[field]) || 0);\n                                lineDataByField[field].push({\n                                    x: centerX,\n                                    y\n                                });\n                            }\n                        }\n                    }[\"DualAxisChart.useCallback[renderChartContent]\"]);\n                }\n            }[\"DualAxisChart.useCallback[renderChartContent]\"]);\n            // Sort line data by x position\n            Object.keys(lineDataByField).forEach({\n                \"DualAxisChart.useCallback[renderChartContent]\": (field)=>{\n                    lineDataByField[field].sort({\n                        \"DualAxisChart.useCallback[renderChartContent]\": (a, b)=>a.x - b.x\n                    }[\"DualAxisChart.useCallback[renderChartContent]\"]);\n                }\n            }[\"DualAxisChart.useCallback[renderChartContent]\"]);\n            // Use all X-axis values for tick labels, but limit date ticks to 8 max\n            const xTickValues = ({\n                \"DualAxisChart.useCallback[renderChartContent].xTickValues\": ()=>{\n                    // Check if the data contains dates\n                    const isDateData = chartData.length > 0 && typeof chartData[0][xKey] === 'string' && (/^\\d{4}-\\d{2}-\\d{2}/.test(chartData[0][xKey]) || /^\\d{2}\\/\\d{2}\\/\\d{4}/.test(chartData[0][xKey]) || /^\\d{1,2}-[A-Za-z]{3}-\\d{4}/.test(chartData[0][xKey]) || /^[A-Za-z]{3}\\s\\d{4}$/.test(chartData[0][xKey]) || /^\\d{4}$/.test(chartData[0][xKey]));\n                    // For date data, limit to 8 ticks maximum\n                    if (isDateData && chartData.length > 8) {\n                        const tickInterval = Math.ceil(chartData.length / 8);\n                        return chartData.filter({\n                            \"DualAxisChart.useCallback[renderChartContent].xTickValues\": (_, i)=>i % tickInterval === 0\n                        }[\"DualAxisChart.useCallback[renderChartContent].xTickValues\"]).map({\n                            \"DualAxisChart.useCallback[renderChartContent].xTickValues\": (d)=>d[xKey]\n                        }[\"DualAxisChart.useCallback[renderChartContent].xTickValues\"]);\n                    }\n                    // For other data types, show all values\n                    return chartData.map({\n                        \"DualAxisChart.useCallback[renderChartContent].xTickValues\": (d)=>d[xKey]\n                    }[\"DualAxisChart.useCallback[renderChartContent].xTickValues\"]);\n                }\n            })[\"DualAxisChart.useCallback[renderChartContent].xTickValues\"]();\n            // Use appropriate handlers based on modal state\n            const mouseMoveFn = isModal ? ({\n                \"DualAxisChart.useCallback[renderChartContent]\": (e)=>handleMouseMove(e, true)\n            })[\"DualAxisChart.useCallback[renderChartContent]\"] : ({\n                \"DualAxisChart.useCallback[renderChartContent]\": (e)=>handleMouseMove(e, false)\n            })[\"DualAxisChart.useCallback[renderChartContent]\"];\n            // Render the chart content\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"relative w-full h-full\",\n                onMouseMove: mouseMoveFn,\n                onMouseLeave: handleMouseLeave,\n                ref: isModal ? modalChartRef : chartRef,\n                children: [\n                    tooltip.visible && tooltip.items && !isModal && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app_components_shared_ChartTooltip__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                        title: String(tooltip.key),\n                        items: tooltip.items,\n                        left: tooltip.left,\n                        top: tooltip.top,\n                        isModal: false,\n                        timeFilter: filterValues === null || filterValues === void 0 ? void 0 : filterValues.timeFilter,\n                        currencyFilter: filterValues === null || filterValues === void 0 ? void 0 : filterValues.currencyFilter\n                    }, void 0, false, {\n                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/DualAxisChart.tsx\",\n                        lineNumber: 758,\n                        columnNumber: 11\n                    }, _this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                        width: chartWidth,\n                        height: chartHeight,\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_visx_group__WEBPACK_IMPORTED_MODULE_13__[\"default\"], {\n                            left: margin.left,\n                            top: margin.top,\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_visx_grid__WEBPACK_IMPORTED_MODULE_14__[\"default\"], {\n                                    scale: leftYScale,\n                                    width: innerWidth,\n                                    stroke: \"#1f2937\",\n                                    strokeOpacity: 0.5,\n                                    strokeDasharray: \"2,3\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/DualAxisChart.tsx\",\n                                    lineNumber: 772,\n                                    columnNumber: 13\n                                }, _this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_visx_axis__WEBPACK_IMPORTED_MODULE_15__[\"default\"], {\n                                    scale: leftYScale,\n                                    stroke: \"#374151\",\n                                    strokeWidth: 0.5,\n                                    tickStroke: \"transparent\",\n                                    tickLength: 0,\n                                    hideZero: false,\n                                    numTicks: 5,\n                                    tickFormat: {\n                                        \"DualAxisChart.useCallback[renderChartContent]\": (value)=>formatTickValue(Number(value))\n                                    }[\"DualAxisChart.useCallback[renderChartContent]\"],\n                                    tickLabelProps: {\n                                        \"DualAxisChart.useCallback[renderChartContent]\": ()=>({\n                                                fill: '#6b7280',\n                                                fontSize: 11,\n                                                fontWeight: 300,\n                                                letterSpacing: '0.05em',\n                                                textAnchor: 'end',\n                                                dy: '0.33em',\n                                                dx: '-0.25em'\n                                            })\n                                    }[\"DualAxisChart.useCallback[renderChartContent]\"]\n                                }, void 0, false, {\n                                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/DualAxisChart.tsx\",\n                                    lineNumber: 781,\n                                    columnNumber: 13\n                                }, _this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_visx_axis__WEBPACK_IMPORTED_MODULE_16__[\"default\"], {\n                                    scale: rightYScale,\n                                    left: innerWidth,\n                                    stroke: \"#374151\",\n                                    strokeWidth: 0.5,\n                                    tickStroke: \"transparent\",\n                                    tickLength: 0,\n                                    hideZero: false,\n                                    numTicks: 5,\n                                    tickFormat: {\n                                        \"DualAxisChart.useCallback[renderChartContent]\": (value)=>formatTickValue(Number(value))\n                                    }[\"DualAxisChart.useCallback[renderChartContent]\"],\n                                    tickLabelProps: {\n                                        \"DualAxisChart.useCallback[renderChartContent]\": ()=>({\n                                                fill: '#6b7280',\n                                                fontSize: 11,\n                                                fontWeight: 300,\n                                                letterSpacing: '0.05em',\n                                                textAnchor: 'start',\n                                                dy: '0.33em',\n                                                dx: '0.25em'\n                                            })\n                                    }[\"DualAxisChart.useCallback[renderChartContent]\"]\n                                }, void 0, false, {\n                                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/DualAxisChart.tsx\",\n                                    lineNumber: 802,\n                                    columnNumber: 13\n                                }, _this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_visx_axis__WEBPACK_IMPORTED_MODULE_17__[\"default\"], {\n                                    top: innerHeight,\n                                    scale: xScale,\n                                    stroke: \"#374151\",\n                                    strokeWidth: 0.5,\n                                    tickStroke: \"transparent\",\n                                    hideAxisLine: false,\n                                    tickLength: 0,\n                                    tickValues: xTickValues,\n                                    tickFormat: {\n                                        \"DualAxisChart.useCallback[renderChartContent]\": (value)=>{\n                                            // Format date labels based on timeFilter\n                                            if (typeof value === 'string') {\n                                                // For ISO dates (YYYY-MM-DD)\n                                                if (/^\\d{4}-\\d{2}-\\d{2}/.test(value)) {\n                                                    const date = new Date(value);\n                                                    if (!isNaN(date.getTime())) {\n                                                        // Format based on timeFilter if available\n                                                        if ((filterValues === null || filterValues === void 0 ? void 0 : filterValues.timeFilter) === 'D' || (filterValues === null || filterValues === void 0 ? void 0 : filterValues.timeFilter) === 'W') {\n                                                            return date.toLocaleDateString('en-US', {\n                                                                month: 'short',\n                                                                day: 'numeric'\n                                                            });\n                                                        } else if ((filterValues === null || filterValues === void 0 ? void 0 : filterValues.timeFilter) === 'M') {\n                                                            return date.toLocaleDateString('en-US', {\n                                                                month: 'short'\n                                                            });\n                                                        } else if ((filterValues === null || filterValues === void 0 ? void 0 : filterValues.timeFilter) === 'Q') {\n                                                            const quarter = Math.floor(date.getMonth() / 3) + 1;\n                                                            return \"Q\".concat(quarter);\n                                                        } else if ((filterValues === null || filterValues === void 0 ? void 0 : filterValues.timeFilter) === 'Y') {\n                                                            return date.getFullYear().toString();\n                                                        }\n                                                        // Default format if no timeFilter is specified\n                                                        return date.toLocaleDateString('en-US', {\n                                                            month: 'short',\n                                                            day: 'numeric'\n                                                        });\n                                                    }\n                                                }\n                                                // For other date formats, use the helper function\n                                                return formatXAxisLabel(value);\n                                            }\n                                            // For non-date values, format using our helper function\n                                            return formatXAxisLabel(String(value));\n                                        }\n                                    }[\"DualAxisChart.useCallback[renderChartContent]\"],\n                                    tickLabelProps: {\n                                        \"DualAxisChart.useCallback[renderChartContent]\": ()=>({\n                                                fill: '#6b7280',\n                                                fontSize: 11,\n                                                fontWeight: 300,\n                                                textAnchor: 'middle',\n                                                dy: '0.5em'\n                                            })\n                                    }[\"DualAxisChart.useCallback[renderChartContent]\"],\n                                    // Ensure first tick doesn't start before origin\n                                    left: 0\n                                }, void 0, false, {\n                                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/DualAxisChart.tsx\",\n                                    lineNumber: 824,\n                                    columnNumber: 13\n                                }, _this),\n                                currentData.map({\n                                    \"DualAxisChart.useCallback[renderChartContent]\": (d, i)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((react__WEBPACK_IMPORTED_MODULE_1___default().Fragment), {\n                                            children: fields.map({\n                                                \"DualAxisChart.useCallback[renderChartContent]\": (field, fieldIndex)=>{\n                                                    // Skip if this field should be rendered as a line\n                                                    if (shouldRenderAsLine(field)) return null;\n                                                    // Determine how many fields should be rendered as bars\n                                                    const barFields = fields.filter({\n                                                        \"DualAxisChart.useCallback[renderChartContent].barFields\": (f)=>!shouldRenderAsLine(f)\n                                                    }[\"DualAxisChart.useCallback[renderChartContent].barFields\"]);\n                                                    const barWidth = xScale.bandwidth() / barFields.length;\n                                                    // Find this field's position in the barFields array\n                                                    const barFieldIndex = barFields.indexOf(field);\n                                                    // Calculate bar dimensions\n                                                    const value = Number(d[field]) || 0;\n                                                    const scale = isRightAxisField(field) ? rightYScale : leftYScale;\n                                                    const barHeight = innerHeight - scale(value);\n                                                    const barX = (xScale(d[xKey]) || 0) + barFieldIndex * barWidth;\n                                                    const barY = innerHeight - barHeight;\n                                                    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_visx_shape__WEBPACK_IMPORTED_MODULE_18__[\"default\"], {\n                                                        x: barX,\n                                                        y: barY,\n                                                        width: barWidth,\n                                                        height: barHeight,\n                                                        fill: fieldColors[field],\n                                                        opacity: tooltip.visible && tooltip.key === d[xKey] ? 1 : 0.8,\n                                                        rx: 2\n                                                    }, \"bar-\".concat(i, \"-\").concat(field), false, {\n                                                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/DualAxisChart.tsx\",\n                                                        lineNumber: 898,\n                                                        columnNumber: 21\n                                                    }, _this);\n                                                }\n                                            }[\"DualAxisChart.useCallback[renderChartContent]\"])\n                                        }, \"bars-\".concat(i), false, {\n                                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/DualAxisChart.tsx\",\n                                            lineNumber: 878,\n                                            columnNumber: 15\n                                        }, _this)\n                                }[\"DualAxisChart.useCallback[renderChartContent]\"]),\n                                fields.map({\n                                    \"DualAxisChart.useCallback[renderChartContent]\": (field)=>{\n                                        // Only render fields configured as lines\n                                        if (!shouldRenderAsLine(field)) return null;\n                                        const lineData = lineDataByField[field];\n                                        if (!lineData || lineData.length === 0) return null;\n                                        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_visx_shape__WEBPACK_IMPORTED_MODULE_19__[\"default\"], {\n                                            data: lineData,\n                                            x: {\n                                                \"DualAxisChart.useCallback[renderChartContent]\": (d)=>d.x\n                                            }[\"DualAxisChart.useCallback[renderChartContent]\"],\n                                            y: {\n                                                \"DualAxisChart.useCallback[renderChartContent]\": (d)=>d.y\n                                            }[\"DualAxisChart.useCallback[renderChartContent]\"],\n                                            stroke: fieldColors[field],\n                                            strokeWidth: 2,\n                                            curve: _visx_curve__WEBPACK_IMPORTED_MODULE_20__[\"default\"]\n                                        }, \"line-\".concat(field), false, {\n                                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/DualAxisChart.tsx\",\n                                            lineNumber: 922,\n                                            columnNumber: 17\n                                        }, _this);\n                                    }\n                                }[\"DualAxisChart.useCallback[renderChartContent]\"])\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/DualAxisChart.tsx\",\n                            lineNumber: 770,\n                            columnNumber: 11\n                        }, _this)\n                    }, void 0, false, {\n                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/DualAxisChart.tsx\",\n                        lineNumber: 769,\n                        columnNumber: 9\n                    }, _this),\n                    tooltip.visible && tooltip.items && isModal && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"absolute z-50\",\n                        style: {\n                            pointerEvents: 'none',\n                            top: tooltip.top,\n                            left: tooltip.left\n                        },\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app_components_shared_ChartTooltip__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                            title: String(tooltip.key),\n                            items: tooltip.items,\n                            left: 0,\n                            top: 0,\n                            isModal: true,\n                            timeFilter: (modalFilterValues === null || modalFilterValues === void 0 ? void 0 : modalFilterValues.timeFilter) || (filterValues === null || filterValues === void 0 ? void 0 : filterValues.timeFilter),\n                            currencyFilter: (modalFilterValues === null || modalFilterValues === void 0 ? void 0 : modalFilterValues.currencyFilter) || (filterValues === null || filterValues === void 0 ? void 0 : filterValues.currencyFilter)\n                        }, void 0, false, {\n                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/DualAxisChart.tsx\",\n                            lineNumber: 943,\n                            columnNumber: 13\n                        }, _this)\n                    }, void 0, false, {\n                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/DualAxisChart.tsx\",\n                        lineNumber: 938,\n                        columnNumber: 11\n                    }, _this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/DualAxisChart.tsx\",\n                lineNumber: 750,\n                columnNumber: 7\n            }, _this);\n        }\n    }[\"DualAxisChart.useCallback[renderChartContent]\"], [\n        chartData,\n        fields,\n        xKey,\n        error,\n        refreshData,\n        handleMouseMove,\n        handleMouseLeave,\n        tooltip,\n        fieldColors,\n        isRightAxisField,\n        shouldRenderAsLine,\n        formatTickValue,\n        formatXAxisLabel,\n        isBrushActive,\n        isModalBrushActive,\n        filteredData,\n        modalFilteredData,\n        data,\n        yAxisUnit,\n        filterValues,\n        modalFilterValues\n    ]);\n    // Render the brush with time scale\n    const renderBrushArea = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"DualAxisChart.useCallback[renderBrushArea]\": function() {\n            let modalView = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;\n            if (!brushData || brushData.length === 0) return null;\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"h-[15%] w-full mt-2\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app_components_shared_BrushTimeScale__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                    data: brushData,\n                    activeBrushDomain: modalView ? modalBrushDomain : brushDomain,\n                    onBrushChange: modalView ? handleModalBrushChange : handleBrushChange,\n                    onClearBrush: {\n                        \"DualAxisChart.useCallback[renderBrushArea]\": ()=>{\n                            if (modalView) {\n                                setModalBrushDomain(null);\n                                setIsModalBrushActive(false);\n                                setModalFilteredData([]);\n                            } else {\n                                setBrushDomain(null);\n                                setIsBrushActive(false);\n                                setFilteredData([]);\n                            }\n                        }\n                    }[\"DualAxisChart.useCallback[renderBrushArea]\"],\n                    getDate: {\n                        \"DualAxisChart.useCallback[renderBrushArea]\": (d)=>d.date\n                    }[\"DualAxisChart.useCallback[renderBrushArea]\"],\n                    getValue: {\n                        \"DualAxisChart.useCallback[renderBrushArea]\": (d)=>d.value\n                    }[\"DualAxisChart.useCallback[renderBrushArea]\"],\n                    lineColor: \"#60a5fa\",\n                    margin: {\n                        top: 0,\n                        right: 25,\n                        bottom: 20,\n                        left: 30\n                    },\n                    isModal: modalView,\n                    curveType: \"catmullRom\",\n                    strokeWidth: 1.5,\n                    filterValues: modalView ? modalFilterValues : filterValues\n                }, void 0, false, {\n                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/DualAxisChart.tsx\",\n                    lineNumber: 970,\n                    columnNumber: 9\n                }, _this)\n            }, void 0, false, {\n                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/DualAxisChart.tsx\",\n                lineNumber: 969,\n                columnNumber: 7\n            }, _this);\n        }\n    }[\"DualAxisChart.useCallback[renderBrushArea]\"], [\n        brushData,\n        modalBrushDomain,\n        brushDomain,\n        handleModalBrushChange,\n        handleBrushChange,\n        modalFilterValues,\n        filterValues\n    ]);\n    // When rendering the chart in expanded mode, use the Modal component\n    if (isExpanded) {\n        var _chartConfig_additionalOptions_filters, _chartConfig_additionalOptions, _chartConfig_additionalOptions_filters_timeFilter_options, _chartConfig_additionalOptions_filters1, _chartConfig_additionalOptions1, _chartConfig_additionalOptions_filters2, _chartConfig_additionalOptions2;\n        // Only render Modal on client-side to prevent hydration errors\n        if (!isClient) {\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"w-full h-full flex items-center justify-center\",\n                children: \"Loading expanded view...\"\n            }, void 0, false, {\n                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/DualAxisChart.tsx\",\n                lineNumber: 1006,\n                columnNumber: 14\n            }, undefined);\n        }\n        // Render expanded view inside Modal\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app_components_shared_Modal__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n            isOpen: isExpanded,\n            onClose: onCloseExpanded || (()=>{}),\n            title: chartConfig.title || \"Chart View\",\n            subtitle: chartConfig.subtitle,\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"w-full h-[80vh] relative overflow-visible\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"mb-4 flex justify-between items-center\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex items-center space-x-4\",\n                            children: [\n                                ((_chartConfig_additionalOptions = chartConfig.additionalOptions) === null || _chartConfig_additionalOptions === void 0 ? void 0 : (_chartConfig_additionalOptions_filters = _chartConfig_additionalOptions.filters) === null || _chartConfig_additionalOptions_filters === void 0 ? void 0 : _chartConfig_additionalOptions_filters.timeFilter) && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"flex items-center\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app_components_shared_filters_TimeFilter__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n                                        value: (modalFilterValues === null || modalFilterValues === void 0 ? void 0 : modalFilterValues.timeFilter) || chartConfig.additionalOptions.filters.timeFilter.activeValue || 'M',\n                                        onChange: (value)=>handleModalFilterChange('timeFilter', value),\n                                        options: (_chartConfig_additionalOptions_filters_timeFilter_options = chartConfig.additionalOptions.filters.timeFilter.options) === null || _chartConfig_additionalOptions_filters_timeFilter_options === void 0 ? void 0 : _chartConfig_additionalOptions_filters_timeFilter_options.map((opt)=>({\n                                                value: opt,\n                                                label: opt\n                                            }))\n                                    }, void 0, false, {\n                                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/DualAxisChart.tsx\",\n                                        lineNumber: 1024,\n                                        columnNumber: 19\n                                    }, undefined)\n                                }, void 0, false, {\n                                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/DualAxisChart.tsx\",\n                                    lineNumber: 1023,\n                                    columnNumber: 17\n                                }, undefined),\n                                ((_chartConfig_additionalOptions1 = chartConfig.additionalOptions) === null || _chartConfig_additionalOptions1 === void 0 ? void 0 : (_chartConfig_additionalOptions_filters1 = _chartConfig_additionalOptions1.filters) === null || _chartConfig_additionalOptions_filters1 === void 0 ? void 0 : _chartConfig_additionalOptions_filters1.currencyFilter) && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app_components_shared_filters_CurrencyFilter__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n                                    currency: (modalFilterValues === null || modalFilterValues === void 0 ? void 0 : modalFilterValues.currencyFilter) || chartConfig.additionalOptions.filters.currencyFilter.activeValue || 'USD',\n                                    onChange: (value)=>handleModalFilterChange('currencyFilter', value),\n                                    options: chartConfig.additionalOptions.filters.currencyFilter.options\n                                }, void 0, false, {\n                                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/DualAxisChart.tsx\",\n                                    lineNumber: 1037,\n                                    columnNumber: 17\n                                }, undefined),\n                                ((_chartConfig_additionalOptions2 = chartConfig.additionalOptions) === null || _chartConfig_additionalOptions2 === void 0 ? void 0 : (_chartConfig_additionalOptions_filters2 = _chartConfig_additionalOptions2.filters) === null || _chartConfig_additionalOptions_filters2 === void 0 ? void 0 : _chartConfig_additionalOptions_filters2.displayModeFilter) && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"flex items-center\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app_components_shared_filters_DisplayModeFilter__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n                                        mode: (modalFilterValues === null || modalFilterValues === void 0 ? void 0 : modalFilterValues.displayMode) || chartConfig.additionalOptions.filters.displayModeFilter.activeValue || 'absolute',\n                                        onChange: (value)=>handleModalFilterChange('displayMode', value)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/DualAxisChart.tsx\",\n                                        lineNumber: 1048,\n                                        columnNumber: 19\n                                    }, undefined)\n                                }, void 0, false, {\n                                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/DualAxisChart.tsx\",\n                                    lineNumber: 1047,\n                                    columnNumber: 17\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/DualAxisChart.tsx\",\n                            lineNumber: 1020,\n                            columnNumber: 13\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/DualAxisChart.tsx\",\n                        lineNumber: 1019,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"w-full h-px bg-gray-900 mb-4\"\n                    }, void 0, false, {\n                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/DualAxisChart.tsx\",\n                        lineNumber: 1058,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex h-full\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"w-[90%] h-[90%] pr-3 border-r border-gray-900\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"flex flex-col h-full\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"h-[85%] w-full relative\",\n                                            ref: modalChartRef,\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_visx_responsive__WEBPACK_IMPORTED_MODULE_21__[\"default\"], {\n                                                debounceTime: 10,\n                                                children: (param)=>{\n                                                    let { width: parentWidth, height: parentHeight } = param;\n                                                    return parentWidth > 0 && parentHeight > 0 ? renderChartContent(parentWidth, parentHeight, true) : null;\n                                                }\n                                            }, void 0, false, {\n                                                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/DualAxisChart.tsx\",\n                                                lineNumber: 1067,\n                                                columnNumber: 19\n                                            }, undefined)\n                                        }, void 0, false, {\n                                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/DualAxisChart.tsx\",\n                                            lineNumber: 1066,\n                                            columnNumber: 17\n                                        }, undefined),\n                                        brushData.length > 0 ? renderBrushArea(true) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"h-[15%] w-full flex items-center justify-center text-gray-500 text-sm\",\n                                            children: \"No brush data available\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/DualAxisChart.tsx\",\n                                            lineNumber: 1080,\n                                            columnNumber: 19\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/DualAxisChart.tsx\",\n                                    lineNumber: 1064,\n                                    columnNumber: 15\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/DualAxisChart.tsx\",\n                                lineNumber: 1063,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"w-[10%] h-full pl-3 flex flex-col justify-start items-start\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"space-y-2 w-full overflow-y-auto max-h-[600px] [&::-webkit-scrollbar]:w-1.5  [&::-webkit-scrollbar-track]:bg-transparent  [&::-webkit-scrollbar-thumb]:bg-gray-700/40 [&::-webkit-scrollbar-thumb]:rounded-full [&::-webkit-scrollbar-thumb]:hover:bg-gray-600/60 scrollbar-thin scrollbar-track-transparent scrollbar-thumb-gray-700/40\",\n                                    children: legendItems.map((item)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app_components_shared_LegendItem__WEBPACK_IMPORTED_MODULE_10__[\"default\"], {\n                                            label: item.label,\n                                            color: item.color,\n                                            shape: shouldRenderAsLine(item.id) ? 'circle' : 'square'\n                                        }, item.id, false, {\n                                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/DualAxisChart.tsx\",\n                                            lineNumber: 1098,\n                                            columnNumber: 19\n                                        }, undefined))\n                                }, void 0, false, {\n                                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/DualAxisChart.tsx\",\n                                    lineNumber: 1090,\n                                    columnNumber: 15\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/DualAxisChart.tsx\",\n                                lineNumber: 1088,\n                                columnNumber: 13\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/DualAxisChart.tsx\",\n                        lineNumber: 1061,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/DualAxisChart.tsx\",\n                lineNumber: 1017,\n                columnNumber: 9\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/DualAxisChart.tsx\",\n            lineNumber: 1011,\n            columnNumber: 7\n        }, undefined);\n    }\n    // Render normal view with brush\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"w-full h-full relative\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"h-[85%] w-full\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_visx_responsive__WEBPACK_IMPORTED_MODULE_21__[\"default\"], {\n                    debounceTime: 10,\n                    children: (param)=>{\n                        let { width: parentWidth, height: parentHeight } = param;\n                        return parentWidth > 0 && parentHeight > 0 ? renderChartContent(parentWidth, parentHeight) : null;\n                    }\n                }, void 0, false, {\n                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/DualAxisChart.tsx\",\n                    lineNumber: 1117,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/DualAxisChart.tsx\",\n                lineNumber: 1116,\n                columnNumber: 7\n            }, undefined),\n            brushData.length > 0 ? renderBrushArea(false) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"h-[15%] w-full mt-2 flex items-center justify-center text-gray-500 text-sm\",\n                children: \"No brush data available\"\n            }, void 0, false, {\n                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/DualAxisChart.tsx\",\n                lineNumber: 1129,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/DualAxisChart.tsx\",\n        lineNumber: 1115,\n        columnNumber: 5\n    }, undefined);\n};\n_s(DualAxisChart, \"s4k0BKQTgI5augmW/OaRg+/CfXA=\");\n_c1 = DualAxisChart;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (/*#__PURE__*/_c2 = react__WEBPACK_IMPORTED_MODULE_1___default().memo(DualAxisChart));\nvar _c, _c1, _c2;\n$RefreshReg$(_c, \"RefreshIcon\");\n$RefreshReg$(_c1, \"DualAxisChart\");\n$RefreshReg$(_c2, \"%default%\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/admin/components/charts/DualAxisChart.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/admin/components/charts/MultiSeriesLineBarChart.tsx":
/*!*****************************************************************!*\
  !*** ./app/admin/components/charts/MultiSeriesLineBarChart.tsx ***!
  \*****************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _visx_responsive__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @visx/responsive */ \"(app-pages-browser)/./node_modules/@visx/responsive/esm/components/ParentSize.js\");\n/* harmony import */ var _visx_group__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @visx/group */ \"(app-pages-browser)/./node_modules/@visx/group/esm/Group.js\");\n/* harmony import */ var _visx_grid__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @visx/grid */ \"(app-pages-browser)/./node_modules/@visx/grid/esm/grids/GridRows.js\");\n/* harmony import */ var _visx_scale__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @visx/scale */ \"(app-pages-browser)/./node_modules/@visx/scale/esm/scales/band.js\");\n/* harmony import */ var _visx_scale__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @visx/scale */ \"(app-pages-browser)/./node_modules/@visx/scale/esm/scales/linear.js\");\n/* harmony import */ var _visx_axis__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @visx/axis */ \"(app-pages-browser)/./node_modules/@visx/axis/esm/axis/AxisLeft.js\");\n/* harmony import */ var _visx_axis__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @visx/axis */ \"(app-pages-browser)/./node_modules/@visx/axis/esm/axis/AxisBottom.js\");\n/* harmony import */ var _visx_shape__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @visx/shape */ \"(app-pages-browser)/./node_modules/@visx/shape/esm/shapes/Bar.js\");\n/* harmony import */ var _visx_shape__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @visx/shape */ \"(app-pages-browser)/./node_modules/@visx/shape/esm/shapes/LinePath.js\");\n/* harmony import */ var _app_utils_chartColors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/app/utils/chartColors */ \"(app-pages-browser)/./app/utils/chartColors.ts\");\n/* harmony import */ var _app_components_shared_ChartTooltip__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/app/components/shared/ChartTooltip */ \"(app-pages-browser)/./app/components/shared/ChartTooltip.tsx\");\n/* harmony import */ var _app_components_shared_buttons_ButtonSecondary__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/app/components/shared/buttons/ButtonSecondary */ \"(app-pages-browser)/./app/components/shared/buttons/ButtonSecondary.tsx\");\n/* harmony import */ var _app_components_shared_BrushTimeScale__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/app/components/shared/BrushTimeScale */ \"(app-pages-browser)/./app/components/shared/BrushTimeScale.tsx\");\n/* harmony import */ var _app_components_shared_Modal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/app/components/shared/Modal */ \"(app-pages-browser)/./app/components/shared/Modal.tsx\");\n/* harmony import */ var _app_components_shared_LegendItem__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @/app/components/shared/LegendItem */ \"(app-pages-browser)/./app/components/shared/LegendItem.tsx\");\n/* harmony import */ var _app_components_shared_filters_TimeFilter__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @/app/components/shared/filters/TimeFilter */ \"(app-pages-browser)/./app/components/shared/filters/TimeFilter.tsx\");\n/* harmony import */ var _app_components_shared_filters_CurrencyFilter__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @/app/components/shared/filters/CurrencyFilter */ \"(app-pages-browser)/./app/components/shared/filters/CurrencyFilter.tsx\");\n/* harmony import */ var _app_components_shared_filters_DisplayModeFilter__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @/app/components/shared/filters/DisplayModeFilter */ \"(app-pages-browser)/./app/components/shared/filters/DisplayModeFilter.tsx\");\n/* harmony import */ var _visx_curve__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @visx/curve */ \"(app-pages-browser)/./node_modules/d3-shape/src/curve/catmullRom.js\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Define RefreshIcon component\nconst RefreshIcon = (param)=>{\n    let { className = \"w-4 h-4\" } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n        className: className,\n        fill: \"none\",\n        stroke: \"currentColor\",\n        viewBox: \"0 0 24 24\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n        }, void 0, false, {\n            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/MultiSeriesLineBarChart.tsx\",\n            lineNumber: 32,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/MultiSeriesLineBarChart.tsx\",\n        lineNumber: 25,\n        columnNumber: 5\n    }, undefined);\n};\n_c = RefreshIcon;\n// Helper function to get field from YAxisConfig or use string directly\nfunction getYAxisField(field) {\n    return typeof field === 'string' ? field : field.field;\n}\n// Helper function to get unit from YAxisConfig or use a default\nfunction getYAxisUnit(field) {\n    return typeof field === 'string' ? undefined : field.unit;\n}\n// Helper function to determine if a field should be rendered as a line\nfunction shouldRenderAsLine(field) {\n    if (typeof field === 'string') {\n        return false; // Default to bar for string fields\n    }\n    return field.type === 'line';\n}\n// Format value with appropriate units\nfunction formatWithUnit(value, unit, defaultUnit) {\n    // Get the unit symbol (use defaultUnit as fallback)\n    const unitSymbol = unit || defaultUnit || '';\n    const isUnitPrefix = unitSymbol && unitSymbol !== '%' && unitSymbol !== 'SOL'; // Most units are prefixed, but some go after\n    // Format with appropriate scale\n    let formattedValue;\n    if (value >= 1000000000) {\n        formattedValue = \"\".concat((value / 1000000000).toFixed(2), \"B\");\n    } else if (value >= 1000000) {\n        formattedValue = \"\".concat((value / 1000000).toFixed(2), \"M\");\n    } else if (value >= 1000) {\n        formattedValue = \"\".concat((value / 1000).toFixed(2), \"K\");\n    } else {\n        formattedValue = value.toFixed(2);\n    }\n    // Return with correct unit placement (or no unit if not specified)\n    if (!unitSymbol) return formattedValue;\n    return isUnitPrefix ? \"\".concat(unitSymbol).concat(formattedValue) : \"\".concat(formattedValue, \"\\xa0\").concat(unitSymbol);\n}\n// Helper function to format X-axis tick labels\nconst formatXAxisLabel = (value, timeFilter)=>{\n    // Check if the value is a date format (YYYY-MM-DD or similar)\n    const isDateFormat = /^\\d{4}-\\d{2}-\\d{2}/.test(value) || /^\\d{2}\\/\\d{2}\\/\\d{4}/.test(value) || /^\\d{1,2}-[A-Za-z]{3}-\\d{4}/.test(value);\n    if (isDateFormat) {\n        const date = new Date(value);\n        if (!isNaN(date.getTime())) {\n            // Format based on timeFilter\n            if (timeFilter === 'D' || timeFilter === 'W') {\n                return date.toLocaleDateString('en-US', {\n                    month: 'short',\n                    day: 'numeric'\n                });\n            } else if (timeFilter === 'M') {\n                return date.toLocaleDateString('en-US', {\n                    month: 'short'\n                });\n            } else if (timeFilter === 'Q') {\n                const quarter = Math.floor(date.getMonth() / 3) + 1;\n                return \"Q\".concat(quarter);\n            } else if (timeFilter === 'Y') {\n                return date.getFullYear().toString();\n            }\n            // Default date format if timeFilter is not specified\n            return date.toLocaleDateString('en-US', {\n                month: 'short',\n                day: 'numeric'\n            });\n        }\n    }\n    // For quarter format (Q1, Q2, etc.)\n    if (/^Q[1-4]\\s\\d{4}$/.test(value)) {\n        return value.substring(0, 2); // Just \"Q1\", \"Q2\", etc.\n    }\n    // For month-year format (Jan 2023)\n    if (/^[A-Za-z]{3}\\s\\d{4}$/.test(value)) {\n        return value.substring(0, 3); // Just \"Jan\", \"Feb\", etc.\n    }\n    // Don't shorten other values that are already short\n    if (value.length <= 5) {\n        return value;\n    }\n    // For other longer text, truncate with ellipsis\n    return \"\".concat(value.substring(0, 3), \"...\");\n};\nconst MultiSeriesLineBarChart = (param)=>{\n    let { chartConfig, data, width = 500, height = 300, isExpanded = false, onCloseExpanded, colorMap: externalColorMap, filterValues, yAxisUnit } = param;\n    var _this = undefined;\n    var _chartConfig_additionalOptions_filters, _chartConfig_additionalOptions, _chartConfig_additionalOptions_filters_timeFilter_options, _chartConfig_additionalOptions_filters1, _chartConfig_additionalOptions1, _chartConfig_additionalOptions_filters2, _chartConfig_additionalOptions2;\n    _s();\n    const chartRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const modalChartRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [legendItems, setLegendItems] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    // Brush state\n    const [isBrushActive, setIsBrushActive] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [brushDomain, setBrushDomain] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    // Filtered data based on brush\n    const [filteredData, setFilteredData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    // Modal-specific filtered data and brush state\n    const [modalFilteredData, setModalFilteredData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [isModalBrushActive, setIsModalBrushActive] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [modalBrushDomain, setModalBrushDomain] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    // Add state for filter values in modal\n    const [modalFilterValues, setModalFilterValues] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(filterValues || {});\n    // Add state to track client-side rendering\n    const [isClient, setIsClient] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Update tooltip state definition\n    const [tooltip, setTooltip] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        visible: false,\n        left: 0,\n        top: 0,\n        key: '',\n        items: []\n    });\n    // Extract mapping fields\n    const xField = chartConfig.dataMapping.xAxis;\n    const yField = chartConfig.dataMapping.yAxis;\n    // For type safety, ensure we use string values for indexing\n    const xKey = typeof xField === 'string' ? xField : xField[0];\n    // Helper function to force reset the brush visual state\n    const forceBrushVisualReset = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"MultiSeriesLineBarChart.useCallback[forceBrushVisualReset]\": function() {\n            let inModal = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;\n            setTimeout({\n                \"MultiSeriesLineBarChart.useCallback[forceBrushVisualReset]\": ()=>{\n                    let container = document;\n                    // For modal, only look within the modal container\n                    if (inModal) {\n                        const modalContainer = document.querySelector('.modal-backdrop');\n                        if (!modalContainer) return;\n                        container = modalContainer;\n                        console.log('Modal container found for brush reset:', modalContainer);\n                    }\n                    const brushElements = container.querySelectorAll('.visx-brush-selection');\n                    console.log(\"Found \".concat(brushElements.length, \" brush elements in \").concat(inModal ? 'modal' : 'main', \" view\"));\n                    if (brushElements.length > 0) {\n                        console.log(\"Forcing \".concat(inModal ? 'modal ' : '', \"brush visual reset\"));\n                        // Reset the brush width to full width\n                        brushElements.forEach({\n                            \"MultiSeriesLineBarChart.useCallback[forceBrushVisualReset]\": (el)=>{\n                                if (el instanceof SVGRectElement) {\n                                    const parentSVG = el.closest('svg');\n                                    if (parentSVG) {\n                                        // Find the actual width of the brush container\n                                        const brushGroup = parentSVG.querySelector('.visx-brush');\n                                        if (brushGroup) {\n                                            const brushWidth = brushGroup.getBoundingClientRect().width;\n                                            // Reset to full width with slight padding on both sides\n                                            el.setAttribute('width', String(brushWidth - 4));\n                                            el.setAttribute('x', '2');\n                                            console.log(\"Reset brush to width: \".concat(brushWidth - 4, \", x: 2\"));\n                                        }\n                                    }\n                                }\n                            }\n                        }[\"MultiSeriesLineBarChart.useCallback[forceBrushVisualReset]\"]);\n                    }\n                    // Additional attempt for modal - sometimes the brush elements are in an iframe or portal\n                    if (inModal) {\n                        // Try to find brush-related elements using more reliable selectors\n                        const svgElements = container.querySelectorAll('svg');\n                        svgElements.forEach({\n                            \"MultiSeriesLineBarChart.useCallback[forceBrushVisualReset]\": (svg)=>{\n                                const brushElements = svg.querySelectorAll('.visx-brush-selection');\n                                if (brushElements.length > 0) {\n                                    console.log(\"Found \".concat(brushElements.length, \" brush elements in a specific SVG\"));\n                                    brushElements.forEach({\n                                        \"MultiSeriesLineBarChart.useCallback[forceBrushVisualReset]\": (el)=>{\n                                            if (el instanceof SVGRectElement) {\n                                                const brushGroup = svg.querySelector('.visx-brush');\n                                                if (brushGroup) {\n                                                    const brushWidth = brushGroup.getBoundingClientRect().width;\n                                                    el.setAttribute('width', String(brushWidth - 4));\n                                                    el.setAttribute('x', '2');\n                                                    console.log(\"Reset specific SVG brush to width: \".concat(brushWidth - 4, \", x: 2\"));\n                                                }\n                                            }\n                                        }\n                                    }[\"MultiSeriesLineBarChart.useCallback[forceBrushVisualReset]\"]);\n                                }\n                            }\n                        }[\"MultiSeriesLineBarChart.useCallback[forceBrushVisualReset]\"]);\n                    }\n                }\n            }[\"MultiSeriesLineBarChart.useCallback[forceBrushVisualReset]\"], 100);\n        }\n    }[\"MultiSeriesLineBarChart.useCallback[forceBrushVisualReset]\"], []);\n    // Update modal filters when component receives new filter values\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"MultiSeriesLineBarChart.useEffect\": ()=>{\n            if (filterValues) {\n                setModalFilterValues(filterValues);\n                // When filter values change in modal, reset modal brush\n                if (isModalBrushActive && isExpanded) {\n                    console.log('Filter changed in modal, resetting brush to show full dataset');\n                    setModalBrushDomain(null);\n                    setIsModalBrushActive(true); // Keep active but reset domain\n                    setModalFilteredData(data); // Reset to full dataset\n                    // Force modal brush visual reset\n                    forceBrushVisualReset(true);\n                }\n            }\n        }\n    }[\"MultiSeriesLineBarChart.useEffect\"], [\n        filterValues,\n        isModalBrushActive,\n        isExpanded,\n        data,\n        forceBrushVisualReset\n    ]);\n    // Sync modal brush domain with main brush domain when modal opens\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"MultiSeriesLineBarChart.useEffect\": ()=>{\n            if (isExpanded) {\n                console.log('Modal opened, syncing brush domains');\n                // When modal opens, sync the brush domains\n                setModalBrushDomain(brushDomain);\n                setIsModalBrushActive(isBrushActive);\n                // Also sync filtered data\n                if (isBrushActive && filteredData.length > 0) {\n                    console.log('Syncing filtered data to modal:', filteredData.length, 'items');\n                    setModalFilteredData(filteredData);\n                }\n            }\n        }\n    }[\"MultiSeriesLineBarChart.useEffect\"], [\n        isExpanded,\n        brushDomain,\n        isBrushActive,\n        filteredData\n    ]);\n    // Update the direct filter change handler to remove the brush visual reset\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"MultiSeriesLineBarChart.useEffect\": ()=>{\n            console.log('filterValues changed directly from parent:', filterValues);\n            // Skip first render\n            if (!filterValues) return;\n            // Reset modal brush state if it's active and modal is expanded\n            if (isModalBrushActive && isExpanded) {\n                console.log('Directly resetting brush due to external filter change');\n                setModalBrushDomain(null);\n                setIsModalBrushActive(true); // Keep active but reset domain\n                setModalFilteredData(data); // Reset to full dataset\n                // Force modal brush visual reset\n                forceBrushVisualReset(true);\n            }\n            // Also reset normal brush state if it's active\n            if (isBrushActive) {\n                setBrushDomain(null);\n                setIsBrushActive(true); // Keep active but reset domain\n                setFilteredData(data); // Reset to full dataset\n                // Force brush visual reset\n                forceBrushVisualReset(false);\n            }\n            // Update the modal filter values to match\n            setModalFilterValues(filterValues);\n        }\n    }[\"MultiSeriesLineBarChart.useEffect\"], [\n        JSON.stringify(filterValues),\n        isModalBrushActive,\n        isBrushActive,\n        isExpanded,\n        data,\n        forceBrushVisualReset\n    ]);\n    // Update the modal filter change handler\n    const handleModalFilterChange = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"MultiSeriesLineBarChart.useCallback[handleModalFilterChange]\": (key, value)=>{\n            console.log(\"Modal filter changed: \".concat(key, \" = \").concat(value));\n            const updatedFilters = {\n                ...modalFilterValues,\n                [key]: value\n            };\n            // Update local state\n            setModalFilterValues(updatedFilters);\n            // If onFilterChange exists in chartConfig, call it with updated filters\n            if (chartConfig.onFilterChange) {\n                chartConfig.onFilterChange(updatedFilters);\n            }\n        }\n    }[\"MultiSeriesLineBarChart.useCallback[handleModalFilterChange]\"], [\n        modalFilterValues,\n        chartConfig\n    ]);\n    // Format value for tooltip\n    const formatValue = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"MultiSeriesLineBarChart.useCallback[formatValue]\": (value)=>{\n            return formatWithUnit(value);\n        }\n    }[\"MultiSeriesLineBarChart.useCallback[formatValue]\"], []);\n    // Format y-axis tick value with appropriate units\n    const formatTickValue = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"MultiSeriesLineBarChart.useCallback[formatTickValue]\": (value)=>{\n            if (value === 0) return '0';\n            if (value >= 1000000000) {\n                const formattedValue = (value / 1000000000).toFixed(1);\n                return formattedValue.endsWith('.0') ? \"\".concat(formattedValue.slice(0, -2), \"B\") : \"\".concat(formattedValue, \"B\");\n            } else if (value >= 1000000) {\n                const formattedValue = (value / 1000000).toFixed(1);\n                return formattedValue.endsWith('.0') ? \"\".concat(formattedValue.slice(0, -2), \"M\") : \"\".concat(formattedValue, \"M\");\n            } else if (value >= 1000) {\n                const formattedValue = (value / 1000).toFixed(1);\n                return formattedValue.endsWith('.0') ? \"\".concat(formattedValue.slice(0, -2), \"K\") : \"\".concat(formattedValue, \"K\");\n            } else {\n                return value.toFixed(0);\n            }\n        }\n    }[\"MultiSeriesLineBarChart.useCallback[formatTickValue]\"], []);\n    // Placeholder for refresh data functionality\n    const refreshData = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"MultiSeriesLineBarChart.useCallback[refreshData]\": ()=>{\n            // If onFilterChange exists in chartConfig, call it with current filters\n            if (chartConfig.onFilterChange) {\n                chartConfig.onFilterChange(filterValues || {});\n            }\n            setError(null);\n        }\n    }[\"MultiSeriesLineBarChart.useCallback[refreshData]\"], [\n        filterValues,\n        chartConfig\n    ]);\n    // Extract data for the chart\n    const { chartData, fields, fieldColors, fieldTypes } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"MultiSeriesLineBarChart.useMemo\": ()=>{\n            // Use appropriate filtered data depending on context\n            const currentData = isExpanded ? isModalBrushActive && modalFilteredData.length > 0 ? modalFilteredData : data : isBrushActive && filteredData.length > 0 ? filteredData : data;\n            if (!currentData || currentData.length === 0) {\n                return {\n                    chartData: [],\n                    fields: [],\n                    fieldColors: {},\n                    fieldTypes: {}\n                };\n            }\n            // Use external color map if available\n            const preferredColorMap = externalColorMap || {};\n            // Filter data first to remove any undefined x values\n            const processedData = currentData.filter({\n                \"MultiSeriesLineBarChart.useMemo.processedData\": (d)=>d[xKey] !== undefined && d[xKey] !== null\n            }[\"MultiSeriesLineBarChart.useMemo.processedData\"]);\n            // Sort by date if applicable\n            if (processedData.length > 0) {\n                // Detect if data contains dates\n                const isDateField = typeof processedData[0][xKey] === 'string' && (processedData[0][xKey].match(/^\\d{4}-\\d{2}-\\d{2}/) || /^\\w+\\s\\d{4}$/.test(processedData[0][xKey]) || /^\\d{4}$/.test(processedData[0][xKey]));\n                if (isDateField) {\n                    // Sort dates chronologically (oldest to newest)\n                    processedData.sort({\n                        \"MultiSeriesLineBarChart.useMemo\": (a, b)=>{\n                            const dateA = new Date(a[xKey]);\n                            const dateB = new Date(b[xKey]);\n                            return dateA.getTime() - dateB.getTime();\n                        }\n                    }[\"MultiSeriesLineBarChart.useMemo\"]);\n                }\n            }\n            // Get all field names that should appear in the chart\n            let allFields = [];\n            let fieldTypesMap = {};\n            if (Array.isArray(yField)) {\n                allFields = yField.map({\n                    \"MultiSeriesLineBarChart.useMemo\": (field)=>getYAxisField(field)\n                }[\"MultiSeriesLineBarChart.useMemo\"]);\n                // Create mapping of field types (bar or line)\n                yField.forEach({\n                    \"MultiSeriesLineBarChart.useMemo\": (field)=>{\n                        const fieldName = getYAxisField(field);\n                        fieldTypesMap[fieldName] = typeof field === 'string' ? 'bar' : field.type;\n                    }\n                }[\"MultiSeriesLineBarChart.useMemo\"]);\n            } else {\n                allFields = [\n                    getYAxisField(yField)\n                ];\n                fieldTypesMap[getYAxisField(yField)] = typeof yField === 'string' ? 'bar' : yField.type;\n            }\n            // Prepare color mapping for fields\n            const colorMapping = {};\n            allFields.forEach({\n                \"MultiSeriesLineBarChart.useMemo\": (field, index)=>{\n                    colorMapping[field] = preferredColorMap[field] || (0,_app_utils_chartColors__WEBPACK_IMPORTED_MODULE_2__.getColorByIndex)(index);\n                }\n            }[\"MultiSeriesLineBarChart.useMemo\"]);\n            return {\n                chartData: processedData,\n                fields: allFields,\n                fieldColors: colorMapping,\n                fieldTypes: fieldTypesMap\n            };\n        }\n    }[\"MultiSeriesLineBarChart.useMemo\"], [\n        data,\n        filteredData,\n        isBrushActive,\n        xKey,\n        yField,\n        externalColorMap,\n        isExpanded,\n        isModalBrushActive,\n        modalFilteredData\n    ]);\n    // Handle mouse leave for tooltip\n    const handleMouseLeave = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"MultiSeriesLineBarChart.useCallback[handleMouseLeave]\": ()=>{\n            if (tooltip.visible) {\n                setTooltip({\n                    \"MultiSeriesLineBarChart.useCallback[handleMouseLeave]\": (prev)=>({\n                            ...prev,\n                            visible: false\n                        })\n                }[\"MultiSeriesLineBarChart.useCallback[handleMouseLeave]\"]);\n            }\n        }\n    }[\"MultiSeriesLineBarChart.useCallback[handleMouseLeave]\"], [\n        tooltip.visible\n    ]);\n    // Handle mouse move for tooltips\n    const handleMouseMove = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"MultiSeriesLineBarChart.useCallback[handleMouseMove]\": function(e) {\n            let isModal = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n            var _containerRef_current;\n            const containerRef = isModal ? modalChartRef : chartRef;\n            const rect = (_containerRef_current = containerRef.current) === null || _containerRef_current === void 0 ? void 0 : _containerRef_current.getBoundingClientRect();\n            if (!rect) return;\n            // Get mouse position - use client coordinates for consistency\n            const mouseX = e.clientX - rect.left;\n            const mouseY = e.clientY - rect.top;\n            // Calculate available chart space\n            const margin = {\n                top: 10,\n                right: 15,\n                bottom: 30,\n                left: 40\n            };\n            const innerWidth = rect.width - margin.left - margin.right;\n            // Adjust mouseX to account for margin\n            const adjustedMouseX = mouseX - margin.left;\n            // Early exit if mouse is outside the chart area\n            if (adjustedMouseX < 0 || adjustedMouseX > innerWidth) {\n                if (tooltip.visible) {\n                    setTooltip({\n                        \"MultiSeriesLineBarChart.useCallback[handleMouseMove]\": (prev)=>({\n                                ...prev,\n                                visible: false\n                            })\n                    }[\"MultiSeriesLineBarChart.useCallback[handleMouseMove]\"]);\n                }\n                return;\n            }\n            // Calculate bar width based on the actual rendered data\n            const barWidth = innerWidth / chartData.length;\n            // Calculate the index of the bar under the mouse pointer\n            const barIndex = Math.floor(adjustedMouseX / barWidth);\n            // Validate the index\n            if (barIndex < 0 || barIndex >= chartData.length) {\n                if (tooltip.visible) {\n                    setTooltip({\n                        \"MultiSeriesLineBarChart.useCallback[handleMouseMove]\": (prev)=>({\n                                ...prev,\n                                visible: false\n                            })\n                    }[\"MultiSeriesLineBarChart.useCallback[handleMouseMove]\"]);\n                }\n                return;\n            }\n            // Get the data point at this index\n            const dataPoint = chartData[barIndex];\n            if (!dataPoint) {\n                if (tooltip.visible) {\n                    setTooltip({\n                        \"MultiSeriesLineBarChart.useCallback[handleMouseMove]\": (prev)=>({\n                                ...prev,\n                                visible: false\n                            })\n                    }[\"MultiSeriesLineBarChart.useCallback[handleMouseMove]\"]);\n                }\n                return;\n            }\n            const xValue = dataPoint[xKey];\n            // Calculate tooltip position\n            const tooltipLeft = mouseX;\n            const tooltipTop = Math.max(mouseY - 10, 10);\n            // Only update if showing a new x-value or hiding previous one\n            if (!tooltip.visible || tooltip.key !== xValue) {\n                // For all fields, show their values\n                const tooltipItems = fields.filter({\n                    \"MultiSeriesLineBarChart.useCallback[handleMouseMove].tooltipItems\": (field)=>{\n                        // Only include fields with non-zero values\n                        const value = Number(dataPoint[field]);\n                        return !isNaN(value) && value > 0;\n                    }\n                }[\"MultiSeriesLineBarChart.useCallback[handleMouseMove].tooltipItems\"]).map({\n                    \"MultiSeriesLineBarChart.useCallback[handleMouseMove].tooltipItems\": (field)=>{\n                        // Find the original YAxisConfig for this field to get the unit\n                        let fieldUnit = undefined;\n                        if (Array.isArray(yField)) {\n                            const fieldConfig = yField.find({\n                                \"MultiSeriesLineBarChart.useCallback[handleMouseMove].tooltipItems.fieldConfig\": (f)=>{\n                                    const fName = typeof f === 'string' ? f : f.field;\n                                    return fName === field;\n                                }\n                            }[\"MultiSeriesLineBarChart.useCallback[handleMouseMove].tooltipItems.fieldConfig\"]);\n                            fieldUnit = typeof fieldConfig === 'string' ? undefined : fieldConfig === null || fieldConfig === void 0 ? void 0 : fieldConfig.unit;\n                        }\n                        return {\n                            label: field,\n                            value: formatWithUnit(Number(dataPoint[field]) || 0, fieldUnit),\n                            color: fieldColors[field] || _app_utils_chartColors__WEBPACK_IMPORTED_MODULE_2__.blue,\n                            // Use different shape for bar vs line\n                            shape: fieldTypes[field] === 'line' ? 'circle' : 'square'\n                        };\n                    }\n                }[\"MultiSeriesLineBarChart.useCallback[handleMouseMove].tooltipItems\"]);\n                // If no values found, show placeholder\n                if (tooltipItems.length === 0 && fields.length > 0) {\n                    // Find the unit for the first field\n                    let firstFieldUnit = undefined;\n                    if (Array.isArray(yField) && fields.length > 0) {\n                        const firstFieldConfig = yField.find({\n                            \"MultiSeriesLineBarChart.useCallback[handleMouseMove].firstFieldConfig\": (f)=>{\n                                const fName = typeof f === 'string' ? f : f.field;\n                                return fName === fields[0];\n                            }\n                        }[\"MultiSeriesLineBarChart.useCallback[handleMouseMove].firstFieldConfig\"]);\n                        firstFieldUnit = typeof firstFieldConfig === 'string' ? undefined : firstFieldConfig === null || firstFieldConfig === void 0 ? void 0 : firstFieldConfig.unit;\n                    }\n                    tooltipItems.push({\n                        label: fields[0],\n                        value: formatWithUnit(0, firstFieldUnit),\n                        color: fieldColors[fields[0]] || _app_utils_chartColors__WEBPACK_IMPORTED_MODULE_2__.blue,\n                        shape: fieldTypes[fields[0]] === 'line' ? 'circle' : 'square'\n                    });\n                }\n                // Update the tooltip\n                setTooltip({\n                    visible: true,\n                    key: xValue,\n                    items: tooltipItems,\n                    left: tooltipLeft,\n                    top: tooltipTop\n                });\n            } else {\n                // If tooltip content isn't changing, just update position\n                setTooltip({\n                    \"MultiSeriesLineBarChart.useCallback[handleMouseMove]\": (prev)=>({\n                            ...prev,\n                            left: tooltipLeft,\n                            top: tooltipTop\n                        })\n                }[\"MultiSeriesLineBarChart.useCallback[handleMouseMove]\"]);\n            }\n        }\n    }[\"MultiSeriesLineBarChart.useCallback[handleMouseMove]\"], [\n        chartData,\n        fields,\n        xKey,\n        fieldColors,\n        fieldTypes,\n        formatWithUnit,\n        tooltip,\n        yField\n    ]);\n    // Process brush data\n    const brushData = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"MultiSeriesLineBarChart.useMemo[brushData]\": ()=>{\n            if (!data || data.length === 0) return [];\n            // Filter and ensure x values are valid\n            const processedData = data.filter({\n                \"MultiSeriesLineBarChart.useMemo[brushData].processedData\": (d)=>d[xKey] !== undefined && d[xKey] !== null\n            }[\"MultiSeriesLineBarChart.useMemo[brushData].processedData\"]);\n            // Create synthetic dates for brush\n            const baseDate = new Date();\n            baseDate.setHours(0, 0, 0, 0);\n            // Get the first field for brush data\n            const firstField = fields.length > 0 ? fields[0] : '';\n            // Create date points for the brush\n            return processedData.map({\n                \"MultiSeriesLineBarChart.useMemo[brushData]\": (d, i)=>{\n                    // Try to parse date from x value or use synthetic date\n                    let date;\n                    if (typeof d[xKey] === 'string' && (d[xKey].match(/^\\d{4}-\\d{2}-\\d{2}/) || /^\\d{2}\\/\\d{2}\\/\\d{4}/.test(d[xKey]) || /^[A-Za-z]{3}\\s\\d{4}$/.test(d[xKey]) || /^\\d{4}$/.test(d[xKey]))) {\n                        date = new Date(d[xKey]);\n                        if (isNaN(date.getTime())) {\n                            date = new Date(baseDate);\n                            date.setDate(baseDate.getDate() + i);\n                        }\n                    } else {\n                        date = new Date(baseDate);\n                        date.setDate(baseDate.getDate() + i);\n                    }\n                    return {\n                        date,\n                        value: Number(d[firstField]) || 0,\n                        originalData: d\n                    };\n                }\n            }[\"MultiSeriesLineBarChart.useMemo[brushData]\"]);\n        }\n    }[\"MultiSeriesLineBarChart.useMemo[brushData]\"], [\n        data,\n        xKey,\n        fields\n    ]);\n    // Handle brush change\n    const handleBrushChange = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"MultiSeriesLineBarChart.useCallback[handleBrushChange]\": (domain)=>{\n            if (!domain) {\n                if (isBrushActive) {\n                    setBrushDomain(null);\n                    setFilteredData([]);\n                }\n                return;\n            }\n            const { x0, x1 } = domain;\n            // Update brush domain\n            setBrushDomain([\n                new Date(x0),\n                new Date(x1)\n            ]);\n            // Filter data based on brush selection\n            const selectedItems = brushData.filter({\n                \"MultiSeriesLineBarChart.useCallback[handleBrushChange].selectedItems\": (item)=>item.date >= new Date(x0) && item.date <= new Date(x1)\n            }[\"MultiSeriesLineBarChart.useCallback[handleBrushChange].selectedItems\"]).map({\n                \"MultiSeriesLineBarChart.useCallback[handleBrushChange].selectedItems\": (item)=>item.originalData\n            }[\"MultiSeriesLineBarChart.useCallback[handleBrushChange].selectedItems\"]);\n            setFilteredData(selectedItems);\n            if (!isBrushActive) {\n                setIsBrushActive(true);\n            }\n        }\n    }[\"MultiSeriesLineBarChart.useCallback[handleBrushChange]\"], [\n        isBrushActive,\n        brushData\n    ]);\n    // Handle modal brush change\n    const handleModalBrushChange = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"MultiSeriesLineBarChart.useCallback[handleModalBrushChange]\": (domain)=>{\n            if (!domain) {\n                if (isModalBrushActive) {\n                    setModalBrushDomain(null);\n                    setModalFilteredData([]);\n                }\n                return;\n            }\n            const { x0, x1 } = domain;\n            // Update modal brush domain\n            setModalBrushDomain([\n                new Date(x0),\n                new Date(x1)\n            ]);\n            // Filter data based on brush selection\n            const selectedItems = brushData.filter({\n                \"MultiSeriesLineBarChart.useCallback[handleModalBrushChange].selectedItems\": (item)=>item.date >= new Date(x0) && item.date <= new Date(x1)\n            }[\"MultiSeriesLineBarChart.useCallback[handleModalBrushChange].selectedItems\"]).map({\n                \"MultiSeriesLineBarChart.useCallback[handleModalBrushChange].selectedItems\": (item)=>item.originalData\n            }[\"MultiSeriesLineBarChart.useCallback[handleModalBrushChange].selectedItems\"]);\n            setModalFilteredData(selectedItems);\n            if (!isModalBrushActive) {\n                setIsModalBrushActive(true);\n            }\n        }\n    }[\"MultiSeriesLineBarChart.useCallback[handleModalBrushChange]\"], [\n        isModalBrushActive,\n        brushData\n    ]);\n    // Update legend items when chart data changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"MultiSeriesLineBarChart.useEffect\": ()=>{\n            if (chartData.length > 0 && fields.length > 0) {\n                const newLegendItems = fields.map({\n                    \"MultiSeriesLineBarChart.useEffect.newLegendItems\": (field)=>({\n                            id: field,\n                            label: field,\n                            color: fieldColors[field] || _app_utils_chartColors__WEBPACK_IMPORTED_MODULE_2__.blue\n                        })\n                }[\"MultiSeriesLineBarChart.useEffect.newLegendItems\"]);\n                setLegendItems(newLegendItems);\n            }\n        }\n    }[\"MultiSeriesLineBarChart.useEffect\"], [\n        chartData,\n        fields,\n        fieldColors\n    ]);\n    // Set isClient to true when component mounts in browser\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"MultiSeriesLineBarChart.useEffect\": ()=>{\n            setIsClient(true);\n        }\n    }[\"MultiSeriesLineBarChart.useEffect\"], []);\n    // Render content function\n    const renderChartContent = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"MultiSeriesLineBarChart.useCallback[renderChartContent]\": function(chartWidth, chartHeight) {\n            let isModal = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;\n            // Show error state or no data\n            if (error || chartData.length === 0) {\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex flex-col justify-center items-center h-full\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-gray-400/80 text-xs mb-2\",\n                            children: error || 'No data available'\n                        }, void 0, false, {\n                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/MultiSeriesLineBarChart.tsx\",\n                            lineNumber: 699,\n                            columnNumber: 11\n                        }, _this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app_components_shared_buttons_ButtonSecondary__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                            onClick: refreshData,\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex items-center gap-1.5\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(RefreshIcon, {\n                                        className: \"w-3.5 h-3.5\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/MultiSeriesLineBarChart.tsx\",\n                                        lineNumber: 702,\n                                        columnNumber: 15\n                                    }, _this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        children: \"Refresh\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/MultiSeriesLineBarChart.tsx\",\n                                        lineNumber: 703,\n                                        columnNumber: 15\n                                    }, _this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/MultiSeriesLineBarChart.tsx\",\n                                lineNumber: 701,\n                                columnNumber: 13\n                            }, _this)\n                        }, void 0, false, {\n                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/MultiSeriesLineBarChart.tsx\",\n                            lineNumber: 700,\n                            columnNumber: 11\n                        }, _this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/MultiSeriesLineBarChart.tsx\",\n                    lineNumber: 698,\n                    columnNumber: 9\n                }, _this);\n            }\n            // Define margins for chart\n            const margin = {\n                top: 10,\n                right: 15,\n                bottom: 30,\n                left: 40\n            };\n            const innerWidth = chartWidth - margin.left - margin.right;\n            const innerHeight = chartHeight - margin.top - margin.bottom;\n            if (innerWidth <= 0 || innerHeight <= 0) return null;\n            // Create scales\n            const xScale = (0,_visx_scale__WEBPACK_IMPORTED_MODULE_11__[\"default\"])({\n                domain: chartData.map({\n                    \"MultiSeriesLineBarChart.useCallback[renderChartContent].xScale\": (d)=>d[xKey]\n                }[\"MultiSeriesLineBarChart.useCallback[renderChartContent].xScale\"]),\n                range: [\n                    0,\n                    innerWidth\n                ],\n                padding: 0.2\n            });\n            // Calculate max value for y-axis\n            const yMax = Math.max(...chartData.flatMap({\n                \"MultiSeriesLineBarChart.useCallback[renderChartContent].yMax\": (d)=>fields.map({\n                        \"MultiSeriesLineBarChart.useCallback[renderChartContent].yMax\": (field)=>Number(d[field]) || 0\n                    }[\"MultiSeriesLineBarChart.useCallback[renderChartContent].yMax\"])\n            }[\"MultiSeriesLineBarChart.useCallback[renderChartContent].yMax\"]), 1);\n            const yScale = (0,_visx_scale__WEBPACK_IMPORTED_MODULE_12__[\"default\"])({\n                domain: [\n                    0,\n                    yMax * 1.1\n                ],\n                range: [\n                    innerHeight,\n                    0\n                ],\n                nice: true,\n                clamp: true\n            });\n            // Create line data for series that should be rendered as lines\n            const lineDataByField = {};\n            // Initialize data structure for each field that should be a line\n            fields.forEach({\n                \"MultiSeriesLineBarChart.useCallback[renderChartContent]\": (field)=>{\n                    if (fieldTypes[field] === 'line') {\n                        lineDataByField[field] = [];\n                    }\n                }\n            }[\"MultiSeriesLineBarChart.useCallback[renderChartContent]\"]);\n            // Build line points\n            chartData.forEach({\n                \"MultiSeriesLineBarChart.useCallback[renderChartContent]\": (d)=>{\n                    fields.forEach({\n                        \"MultiSeriesLineBarChart.useCallback[renderChartContent]\": (field)=>{\n                            if (fieldTypes[field] === 'line') {\n                                const x = xScale(d[xKey]) || 0;\n                                const centerX = x + xScale.bandwidth() / 2; // Center of the bar\n                                const y = yScale(Number(d[field]) || 0);\n                                lineDataByField[field].push({\n                                    x: centerX,\n                                    y\n                                });\n                            }\n                        }\n                    }[\"MultiSeriesLineBarChart.useCallback[renderChartContent]\"]);\n                }\n            }[\"MultiSeriesLineBarChart.useCallback[renderChartContent]\"]);\n            // Sort line data by x position\n            Object.keys(lineDataByField).forEach({\n                \"MultiSeriesLineBarChart.useCallback[renderChartContent]\": (field)=>{\n                    lineDataByField[field].sort({\n                        \"MultiSeriesLineBarChart.useCallback[renderChartContent]\": (a, b)=>a.x - b.x\n                    }[\"MultiSeriesLineBarChart.useCallback[renderChartContent]\"]);\n                }\n            }[\"MultiSeriesLineBarChart.useCallback[renderChartContent]\"]);\n            // Calculate x-axis tick values - limit to 8 for date data\n            const xTickValues = ({\n                \"MultiSeriesLineBarChart.useCallback[renderChartContent].xTickValues\": ()=>{\n                    // Check if the data contains dates\n                    const isDateData = chartData.length > 0 && typeof chartData[0][xKey] === 'string' && (/^\\d{4}-\\d{2}-\\d{2}/.test(chartData[0][xKey]) || /^\\d{2}\\/\\d{2}\\/\\d{4}/.test(chartData[0][xKey]) || /^\\d{1,2}-[A-Za-z]{3}-\\d{4}/.test(chartData[0][xKey]) || /^[A-Za-z]{3}\\s\\d{4}$/.test(chartData[0][xKey]) || /^\\d{4}$/.test(chartData[0][xKey]));\n                    // For date data, limit to 8 ticks maximum\n                    if (isDateData && chartData.length > 8) {\n                        const tickInterval = Math.ceil(chartData.length / 8);\n                        return chartData.filter({\n                            \"MultiSeriesLineBarChart.useCallback[renderChartContent].xTickValues\": (_, i)=>i % tickInterval === 0\n                        }[\"MultiSeriesLineBarChart.useCallback[renderChartContent].xTickValues\"]).map({\n                            \"MultiSeriesLineBarChart.useCallback[renderChartContent].xTickValues\": (d)=>d[xKey]\n                        }[\"MultiSeriesLineBarChart.useCallback[renderChartContent].xTickValues\"]);\n                    }\n                    // For other data types, show all values\n                    return chartData.map({\n                        \"MultiSeriesLineBarChart.useCallback[renderChartContent].xTickValues\": (d)=>d[xKey]\n                    }[\"MultiSeriesLineBarChart.useCallback[renderChartContent].xTickValues\"]);\n                }\n            })[\"MultiSeriesLineBarChart.useCallback[renderChartContent].xTickValues\"]();\n            // Render the chart content\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"relative w-full h-full\",\n                onMouseMove: {\n                    \"MultiSeriesLineBarChart.useCallback[renderChartContent]\": (e)=>handleMouseMove(e, isModal)\n                }[\"MultiSeriesLineBarChart.useCallback[renderChartContent]\"],\n                onMouseLeave: handleMouseLeave,\n                ref: isModal ? modalChartRef : chartRef,\n                children: [\n                    tooltip.visible && tooltip.items && !isModal && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app_components_shared_ChartTooltip__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                        title: String(tooltip.key),\n                        items: tooltip.items,\n                        left: tooltip.left,\n                        top: tooltip.top,\n                        isModal: false,\n                        timeFilter: filterValues === null || filterValues === void 0 ? void 0 : filterValues.timeFilter,\n                        currencyFilter: filterValues === null || filterValues === void 0 ? void 0 : filterValues.currencyFilter\n                    }, void 0, false, {\n                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/MultiSeriesLineBarChart.tsx\",\n                        lineNumber: 800,\n                        columnNumber: 11\n                    }, _this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                        width: chartWidth,\n                        height: chartHeight,\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_visx_group__WEBPACK_IMPORTED_MODULE_13__[\"default\"], {\n                            left: margin.left,\n                            top: margin.top,\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_visx_grid__WEBPACK_IMPORTED_MODULE_14__[\"default\"], {\n                                    scale: yScale,\n                                    width: innerWidth,\n                                    stroke: \"#1f2937\",\n                                    strokeOpacity: 0.5,\n                                    strokeDasharray: \"2,3\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/MultiSeriesLineBarChart.tsx\",\n                                    lineNumber: 814,\n                                    columnNumber: 13\n                                }, _this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_visx_axis__WEBPACK_IMPORTED_MODULE_15__[\"default\"], {\n                                    scale: yScale,\n                                    stroke: \"#374151\",\n                                    strokeWidth: 0.5,\n                                    tickStroke: \"transparent\",\n                                    tickLength: 0,\n                                    hideZero: false,\n                                    numTicks: 5,\n                                    tickFormat: {\n                                        \"MultiSeriesLineBarChart.useCallback[renderChartContent]\": (value)=>formatTickValue(Number(value))\n                                    }[\"MultiSeriesLineBarChart.useCallback[renderChartContent]\"],\n                                    tickLabelProps: {\n                                        \"MultiSeriesLineBarChart.useCallback[renderChartContent]\": ()=>({\n                                                fill: '#6b7280',\n                                                fontSize: 11,\n                                                fontWeight: 300,\n                                                letterSpacing: '0.05em',\n                                                textAnchor: 'end',\n                                                dy: '0.33em',\n                                                dx: '-0.25em'\n                                            })\n                                    }[\"MultiSeriesLineBarChart.useCallback[renderChartContent]\"]\n                                }, void 0, false, {\n                                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/MultiSeriesLineBarChart.tsx\",\n                                    lineNumber: 823,\n                                    columnNumber: 13\n                                }, _this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_visx_axis__WEBPACK_IMPORTED_MODULE_16__[\"default\"], {\n                                    top: innerHeight,\n                                    scale: xScale,\n                                    stroke: \"#374151\",\n                                    strokeWidth: 0.5,\n                                    tickStroke: \"transparent\",\n                                    hideAxisLine: false,\n                                    tickLength: 0,\n                                    tickValues: xTickValues,\n                                    tickFormat: {\n                                        \"MultiSeriesLineBarChart.useCallback[renderChartContent]\": (value)=>{\n                                            // Format date labels based on timeFilter\n                                            if (typeof value === 'string') {\n                                                // For ISO dates (YYYY-MM-DD)\n                                                if (/^\\d{4}-\\d{2}-\\d{2}/.test(value)) {\n                                                    const date = new Date(value);\n                                                    if (!isNaN(date.getTime())) {\n                                                        // Format based on timeFilter if available\n                                                        if ((filterValues === null || filterValues === void 0 ? void 0 : filterValues.timeFilter) === 'D' || (filterValues === null || filterValues === void 0 ? void 0 : filterValues.timeFilter) === 'W') {\n                                                            return date.toLocaleDateString('en-US', {\n                                                                month: 'short',\n                                                                day: 'numeric'\n                                                            });\n                                                        } else if ((filterValues === null || filterValues === void 0 ? void 0 : filterValues.timeFilter) === 'M') {\n                                                            return date.toLocaleDateString('en-US', {\n                                                                month: 'short'\n                                                            });\n                                                        } else if ((filterValues === null || filterValues === void 0 ? void 0 : filterValues.timeFilter) === 'Q') {\n                                                            const quarter = Math.floor(date.getMonth() / 3) + 1;\n                                                            return \"Q\".concat(quarter);\n                                                        } else if ((filterValues === null || filterValues === void 0 ? void 0 : filterValues.timeFilter) === 'Y') {\n                                                            return date.getFullYear().toString();\n                                                        }\n                                                        // Default format if no timeFilter is specified\n                                                        return date.toLocaleDateString('en-US', {\n                                                            month: 'short',\n                                                            day: 'numeric'\n                                                        });\n                                                    }\n                                                }\n                                                // For other date formats, use the helper function\n                                                return formatXAxisLabel(value, filterValues === null || filterValues === void 0 ? void 0 : filterValues.timeFilter);\n                                            }\n                                            // For non-date values, format using our helper function\n                                            return formatXAxisLabel(String(value), filterValues === null || filterValues === void 0 ? void 0 : filterValues.timeFilter);\n                                        }\n                                    }[\"MultiSeriesLineBarChart.useCallback[renderChartContent]\"],\n                                    tickLabelProps: {\n                                        \"MultiSeriesLineBarChart.useCallback[renderChartContent]\": ()=>({\n                                                fill: '#6b7280',\n                                                fontSize: 11,\n                                                fontWeight: 300,\n                                                textAnchor: 'middle',\n                                                dy: '0.5em'\n                                            })\n                                    }[\"MultiSeriesLineBarChart.useCallback[renderChartContent]\"],\n                                    // Ensure first tick doesn't start before origin\n                                    left: 0\n                                }, void 0, false, {\n                                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/MultiSeriesLineBarChart.tsx\",\n                                    lineNumber: 844,\n                                    columnNumber: 13\n                                }, _this),\n                                chartData.map({\n                                    \"MultiSeriesLineBarChart.useCallback[renderChartContent]\": (d, i)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((react__WEBPACK_IMPORTED_MODULE_1___default().Fragment), {\n                                            children: fields.map({\n                                                \"MultiSeriesLineBarChart.useCallback[renderChartContent]\": (field, fieldIndex)=>{\n                                                    // Skip if this field should be rendered as a line\n                                                    if (fieldTypes[field] === 'line') return null;\n                                                    // Determine how many fields should be rendered as bars\n                                                    const barFields = fields.filter({\n                                                        \"MultiSeriesLineBarChart.useCallback[renderChartContent].barFields\": (f)=>fieldTypes[f] !== 'line'\n                                                    }[\"MultiSeriesLineBarChart.useCallback[renderChartContent].barFields\"]);\n                                                    const barWidth = xScale.bandwidth() / barFields.length;\n                                                    // Find this field's position in the barFields array\n                                                    const barFieldIndex = barFields.indexOf(field);\n                                                    // Calculate bar dimensions\n                                                    const value = Number(d[field]) || 0;\n                                                    const barHeight = innerHeight - yScale(value);\n                                                    const barX = (xScale(d[xKey]) || 0) + barFieldIndex * barWidth;\n                                                    const barY = innerHeight - barHeight;\n                                                    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_visx_shape__WEBPACK_IMPORTED_MODULE_17__[\"default\"], {\n                                                        x: barX,\n                                                        y: barY,\n                                                        width: barWidth,\n                                                        height: barHeight,\n                                                        fill: fieldColors[field],\n                                                        opacity: tooltip.visible && tooltip.key === d[xKey] ? 1 : 0.8,\n                                                        rx: 2\n                                                    }, \"bar-\".concat(i, \"-\").concat(field), false, {\n                                                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/MultiSeriesLineBarChart.tsx\",\n                                                        lineNumber: 917,\n                                                        columnNumber: 21\n                                                    }, _this);\n                                                }\n                                            }[\"MultiSeriesLineBarChart.useCallback[renderChartContent]\"])\n                                        }, \"bars-\".concat(i), false, {\n                                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/MultiSeriesLineBarChart.tsx\",\n                                            lineNumber: 898,\n                                            columnNumber: 15\n                                        }, _this)\n                                }[\"MultiSeriesLineBarChart.useCallback[renderChartContent]\"]),\n                                fields.map({\n                                    \"MultiSeriesLineBarChart.useCallback[renderChartContent]\": (field)=>{\n                                        // Only render fields configured as lines\n                                        if (fieldTypes[field] !== 'line') return null;\n                                        const lineData = lineDataByField[field];\n                                        if (!lineData || lineData.length === 0) return null;\n                                        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_visx_shape__WEBPACK_IMPORTED_MODULE_18__[\"default\"], {\n                                            data: lineData,\n                                            x: {\n                                                \"MultiSeriesLineBarChart.useCallback[renderChartContent]\": (d)=>d.x\n                                            }[\"MultiSeriesLineBarChart.useCallback[renderChartContent]\"],\n                                            y: {\n                                                \"MultiSeriesLineBarChart.useCallback[renderChartContent]\": (d)=>d.y\n                                            }[\"MultiSeriesLineBarChart.useCallback[renderChartContent]\"],\n                                            stroke: fieldColors[field],\n                                            strokeWidth: 2,\n                                            curve: _visx_curve__WEBPACK_IMPORTED_MODULE_19__[\"default\"]\n                                        }, \"line-\".concat(field), false, {\n                                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/MultiSeriesLineBarChart.tsx\",\n                                            lineNumber: 941,\n                                            columnNumber: 17\n                                        }, _this);\n                                    }\n                                }[\"MultiSeriesLineBarChart.useCallback[renderChartContent]\"])\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/MultiSeriesLineBarChart.tsx\",\n                            lineNumber: 812,\n                            columnNumber: 11\n                        }, _this)\n                    }, void 0, false, {\n                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/MultiSeriesLineBarChart.tsx\",\n                        lineNumber: 811,\n                        columnNumber: 9\n                    }, _this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/MultiSeriesLineBarChart.tsx\",\n                lineNumber: 792,\n                columnNumber: 7\n            }, _this);\n        }\n    }[\"MultiSeriesLineBarChart.useCallback[renderChartContent]\"], [\n        chartData,\n        fields,\n        xKey,\n        error,\n        refreshData,\n        handleMouseMove,\n        handleMouseLeave,\n        tooltip,\n        fieldColors,\n        fieldTypes,\n        formatTickValue,\n        modalChartRef\n    ]);\n    // Render the brush with proper shape reflecting bar values\n    const renderBrushArea = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"MultiSeriesLineBarChart.useCallback[renderBrushArea]\": function() {\n            let modalView = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;\n            if (!brushData || brushData.length === 0) return null;\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"h-[15%] w-full mt-2\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app_components_shared_BrushTimeScale__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                    data: brushData,\n                    activeBrushDomain: modalView ? modalBrushDomain : brushDomain,\n                    onBrushChange: modalView ? handleModalBrushChange : handleBrushChange,\n                    onClearBrush: {\n                        \"MultiSeriesLineBarChart.useCallback[renderBrushArea]\": ()=>{\n                            if (modalView) {\n                                setModalBrushDomain(null);\n                                setIsModalBrushActive(true); // Keep active but reset domain\n                                setModalFilteredData(data); // Reset to full dataset\n                            } else {\n                                setBrushDomain(null);\n                                setIsBrushActive(true); // Keep active but reset domain\n                                setFilteredData(data); // Reset to full dataset\n                            }\n                        }\n                    }[\"MultiSeriesLineBarChart.useCallback[renderBrushArea]\"],\n                    getDate: {\n                        \"MultiSeriesLineBarChart.useCallback[renderBrushArea]\": (d)=>d.date\n                    }[\"MultiSeriesLineBarChart.useCallback[renderBrushArea]\"],\n                    getValue: {\n                        \"MultiSeriesLineBarChart.useCallback[renderBrushArea]\": (d)=>d.value\n                    }[\"MultiSeriesLineBarChart.useCallback[renderBrushArea]\"],\n                    lineColor: \"#60a5fa\",\n                    margin: {\n                        top: 0,\n                        right: 15,\n                        bottom: modalView ? 10 : 20,\n                        left: 40\n                    },\n                    isModal: modalView,\n                    curveType: \"catmullRom\",\n                    strokeWidth: 2,\n                    filterValues: modalView ? modalFilterValues : filterValues\n                }, void 0, false, {\n                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/MultiSeriesLineBarChart.tsx\",\n                    lineNumber: 968,\n                    columnNumber: 9\n                }, _this)\n            }, void 0, false, {\n                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/MultiSeriesLineBarChart.tsx\",\n                lineNumber: 967,\n                columnNumber: 7\n            }, _this);\n        }\n    }[\"MultiSeriesLineBarChart.useCallback[renderBrushArea]\"], [\n        brushData,\n        modalBrushDomain,\n        brushDomain,\n        handleModalBrushChange,\n        handleBrushChange,\n        setModalBrushDomain,\n        setIsModalBrushActive,\n        setModalFilteredData,\n        setBrushDomain,\n        setIsBrushActive,\n        setFilteredData,\n        data,\n        modalFilterValues,\n        filterValues\n    ]);\n    // Render the chart with brush\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: isExpanded && isClient ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app_components_shared_Modal__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n            isOpen: isExpanded,\n            onClose: onCloseExpanded || (()=>{}),\n            title: chartConfig.title || \"Chart View\",\n            subtitle: chartConfig.subtitle,\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"w-full h-[80vh] relative overflow-visible\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"mb-4 flex justify-between items-center\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex items-center space-x-4\",\n                            children: [\n                                ((_chartConfig_additionalOptions = chartConfig.additionalOptions) === null || _chartConfig_additionalOptions === void 0 ? void 0 : (_chartConfig_additionalOptions_filters = _chartConfig_additionalOptions.filters) === null || _chartConfig_additionalOptions_filters === void 0 ? void 0 : _chartConfig_additionalOptions_filters.timeFilter) && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"flex items-center\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app_components_shared_filters_TimeFilter__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n                                        value: (modalFilterValues === null || modalFilterValues === void 0 ? void 0 : modalFilterValues.timeFilter) || chartConfig.additionalOptions.filters.timeFilter.activeValue || 'M',\n                                        onChange: (value)=>handleModalFilterChange('timeFilter', value),\n                                        options: (_chartConfig_additionalOptions_filters_timeFilter_options = chartConfig.additionalOptions.filters.timeFilter.options) === null || _chartConfig_additionalOptions_filters_timeFilter_options === void 0 ? void 0 : _chartConfig_additionalOptions_filters_timeFilter_options.map((opt)=>({\n                                                value: opt,\n                                                label: opt\n                                            }))\n                                    }, void 0, false, {\n                                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/MultiSeriesLineBarChart.tsx\",\n                                        lineNumber: 1018,\n                                        columnNumber: 21\n                                    }, undefined)\n                                }, void 0, false, {\n                                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/MultiSeriesLineBarChart.tsx\",\n                                    lineNumber: 1017,\n                                    columnNumber: 19\n                                }, undefined),\n                                ((_chartConfig_additionalOptions1 = chartConfig.additionalOptions) === null || _chartConfig_additionalOptions1 === void 0 ? void 0 : (_chartConfig_additionalOptions_filters1 = _chartConfig_additionalOptions1.filters) === null || _chartConfig_additionalOptions_filters1 === void 0 ? void 0 : _chartConfig_additionalOptions_filters1.currencyFilter) && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app_components_shared_filters_CurrencyFilter__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n                                    currency: (modalFilterValues === null || modalFilterValues === void 0 ? void 0 : modalFilterValues.currencyFilter) || chartConfig.additionalOptions.filters.currencyFilter.activeValue || 'USD',\n                                    onChange: (value)=>handleModalFilterChange('currencyFilter', value),\n                                    options: chartConfig.additionalOptions.filters.currencyFilter.options\n                                }, void 0, false, {\n                                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/MultiSeriesLineBarChart.tsx\",\n                                    lineNumber: 1031,\n                                    columnNumber: 19\n                                }, undefined),\n                                ((_chartConfig_additionalOptions2 = chartConfig.additionalOptions) === null || _chartConfig_additionalOptions2 === void 0 ? void 0 : (_chartConfig_additionalOptions_filters2 = _chartConfig_additionalOptions2.filters) === null || _chartConfig_additionalOptions_filters2 === void 0 ? void 0 : _chartConfig_additionalOptions_filters2.displayModeFilter) && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"flex items-center\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app_components_shared_filters_DisplayModeFilter__WEBPACK_IMPORTED_MODULE_10__[\"default\"], {\n                                        mode: (modalFilterValues === null || modalFilterValues === void 0 ? void 0 : modalFilterValues.displayMode) || chartConfig.additionalOptions.filters.displayModeFilter.activeValue || 'absolute',\n                                        onChange: (value)=>handleModalFilterChange('displayMode', value)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/MultiSeriesLineBarChart.tsx\",\n                                        lineNumber: 1042,\n                                        columnNumber: 21\n                                    }, undefined)\n                                }, void 0, false, {\n                                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/MultiSeriesLineBarChart.tsx\",\n                                    lineNumber: 1041,\n                                    columnNumber: 19\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/MultiSeriesLineBarChart.tsx\",\n                            lineNumber: 1014,\n                            columnNumber: 15\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/MultiSeriesLineBarChart.tsx\",\n                        lineNumber: 1013,\n                        columnNumber: 13\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"w-full h-px bg-gray-900 mb-4\"\n                    }, void 0, false, {\n                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/MultiSeriesLineBarChart.tsx\",\n                        lineNumber: 1052,\n                        columnNumber: 13\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex h-full\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"w-[90%] h-[90%] pr-3 border-r border-gray-900\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"flex flex-col h-full\",\n                                    children: [\n                                        tooltip.visible && tooltip.items && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"absolute z-50\",\n                                            style: {\n                                                pointerEvents: 'none',\n                                                top: tooltip.top,\n                                                left: tooltip.left\n                                            },\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app_components_shared_ChartTooltip__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                                                title: String(tooltip.key),\n                                                items: tooltip.items,\n                                                left: 0,\n                                                top: 0,\n                                                isModal: true,\n                                                timeFilter: modalFilterValues === null || modalFilterValues === void 0 ? void 0 : modalFilterValues.timeFilter,\n                                                currencyFilter: (modalFilterValues === null || modalFilterValues === void 0 ? void 0 : modalFilterValues.currencyFilter) || (filterValues === null || filterValues === void 0 ? void 0 : filterValues.currencyFilter)\n                                            }, void 0, false, {\n                                                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/MultiSeriesLineBarChart.tsx\",\n                                                lineNumber: 1066,\n                                                columnNumber: 23\n                                            }, undefined)\n                                        }, void 0, false, {\n                                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/MultiSeriesLineBarChart.tsx\",\n                                            lineNumber: 1061,\n                                            columnNumber: 21\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"h-[85%] w-full relative\",\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_visx_responsive__WEBPACK_IMPORTED_MODULE_20__[\"default\"], {\n                                                debounceTime: 10,\n                                                children: (param)=>{\n                                                    let { width: parentWidth, height: parentHeight } = param;\n                                                    return parentWidth > 0 && parentHeight > 0 ? renderChartContent(parentWidth, parentHeight, true) : null;\n                                                }\n                                            }, void 0, false, {\n                                                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/MultiSeriesLineBarChart.tsx\",\n                                                lineNumber: 1080,\n                                                columnNumber: 21\n                                            }, undefined)\n                                        }, void 0, false, {\n                                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/MultiSeriesLineBarChart.tsx\",\n                                            lineNumber: 1079,\n                                            columnNumber: 19\n                                        }, undefined),\n                                        brushData.length > 0 ? renderBrushArea(true) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"h-[15%] w-full flex items-center justify-center text-gray-500 text-sm\",\n                                            children: \"No brush data available\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/MultiSeriesLineBarChart.tsx\",\n                                            lineNumber: 1091,\n                                            columnNumber: 21\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/MultiSeriesLineBarChart.tsx\",\n                                    lineNumber: 1058,\n                                    columnNumber: 17\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/MultiSeriesLineBarChart.tsx\",\n                                lineNumber: 1057,\n                                columnNumber: 15\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"w-[10%] h-full pl-3 flex flex-col justify-start items-start\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"space-y-2 w-full overflow-y-auto max-h-[600px] [&::-webkit-scrollbar]:w-1.5  [&::-webkit-scrollbar-track]:bg-transparent  [&::-webkit-scrollbar-thumb]:bg-gray-700/40 [&::-webkit-scrollbar-thumb]:rounded-full [&::-webkit-scrollbar-thumb]:hover:bg-gray-600/60 scrollbar-thin scrollbar-track-transparent scrollbar-thumb-gray-700/40\",\n                                    children: legendItems.map((item)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app_components_shared_LegendItem__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n                                            label: item.label,\n                                            color: item.color,\n                                            shape: fieldTypes[item.id] === 'line' ? 'circle' : 'square'\n                                        }, item.id, false, {\n                                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/MultiSeriesLineBarChart.tsx\",\n                                            lineNumber: 1109,\n                                            columnNumber: 21\n                                        }, undefined))\n                                }, void 0, false, {\n                                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/MultiSeriesLineBarChart.tsx\",\n                                    lineNumber: 1101,\n                                    columnNumber: 17\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/MultiSeriesLineBarChart.tsx\",\n                                lineNumber: 1099,\n                                columnNumber: 15\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/MultiSeriesLineBarChart.tsx\",\n                        lineNumber: 1055,\n                        columnNumber: 13\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/MultiSeriesLineBarChart.tsx\",\n                lineNumber: 1011,\n                columnNumber: 11\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/MultiSeriesLineBarChart.tsx\",\n            lineNumber: 1005,\n            columnNumber: 9\n        }, undefined) : // Normal view with brush\n        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"w-full h-full relative\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"h-[85%] w-full\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_visx_responsive__WEBPACK_IMPORTED_MODULE_20__[\"default\"], {\n                        debounceTime: 10,\n                        children: (param)=>{\n                            let { width: parentWidth, height: parentHeight } = param;\n                            return parentWidth > 0 && parentHeight > 0 ? renderChartContent(parentWidth, parentHeight) : null;\n                        }\n                    }, void 0, false, {\n                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/MultiSeriesLineBarChart.tsx\",\n                        lineNumber: 1125,\n                        columnNumber: 13\n                    }, undefined)\n                }, void 0, false, {\n                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/MultiSeriesLineBarChart.tsx\",\n                    lineNumber: 1124,\n                    columnNumber: 11\n                }, undefined),\n                brushData.length > 0 ? renderBrushArea(false) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"h-[15%] w-full flex items-center justify-center text-gray-500 text-sm\",\n                    children: \"No brush data available\"\n                }, void 0, false, {\n                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/MultiSeriesLineBarChart.tsx\",\n                    lineNumber: 1135,\n                    columnNumber: 13\n                }, undefined)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/MultiSeriesLineBarChart.tsx\",\n            lineNumber: 1123,\n            columnNumber: 9\n        }, undefined)\n    }, void 0, false);\n};\n_s(MultiSeriesLineBarChart, \"WgP7EJ1NzsJAq0gAVBE/evAN6XM=\");\n_c1 = MultiSeriesLineBarChart;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (/*#__PURE__*/_c2 = react__WEBPACK_IMPORTED_MODULE_1___default().memo(MultiSeriesLineBarChart));\nvar _c, _c1, _c2;\n$RefreshReg$(_c, \"RefreshIcon\");\n$RefreshReg$(_c1, \"MultiSeriesLineBarChart\");\n$RefreshReg$(_c2, \"%default%\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/admin/components/charts/MultiSeriesLineBarChart.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/admin/components/charts/PieChart.tsx":
/*!**************************************************!*\
  !*** ./app/admin/components/charts/PieChart.tsx ***!
  \**************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _visx_responsive__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @visx/responsive */ \"(app-pages-browser)/./node_modules/@visx/responsive/esm/components/ParentSize.js\");\n/* harmony import */ var _visx_group__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @visx/group */ \"(app-pages-browser)/./node_modules/@visx/group/esm/Group.js\");\n/* harmony import */ var _visx_shape__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @visx/shape */ \"(app-pages-browser)/./node_modules/@visx/shape/esm/shapes/Pie.js\");\n/* harmony import */ var _visx_scale__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @visx/scale */ \"(app-pages-browser)/./node_modules/@visx/scale/esm/scales/ordinal.js\");\n/* harmony import */ var _app_utils_chartColors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/app/utils/chartColors */ \"(app-pages-browser)/./app/utils/chartColors.ts\");\n/* harmony import */ var _app_components_shared_ChartTooltip__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/app/components/shared/ChartTooltip */ \"(app-pages-browser)/./app/components/shared/ChartTooltip.tsx\");\n/* harmony import */ var _app_components_shared_buttons_ButtonSecondary__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/app/components/shared/buttons/ButtonSecondary */ \"(app-pages-browser)/./app/components/shared/buttons/ButtonSecondary.tsx\");\n/* harmony import */ var _app_components_shared_Modal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/app/components/shared/Modal */ \"(app-pages-browser)/./app/components/shared/Modal.tsx\");\n/* harmony import */ var _app_components_shared_LegendItem__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/app/components/shared/LegendItem */ \"(app-pages-browser)/./app/components/shared/LegendItem.tsx\");\n/* harmony import */ var _app_components_shared_filters_TimeFilter__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @/app/components/shared/filters/TimeFilter */ \"(app-pages-browser)/./app/components/shared/filters/TimeFilter.tsx\");\n/* harmony import */ var _app_components_shared_filters_CurrencyFilter__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @/app/components/shared/filters/CurrencyFilter */ \"(app-pages-browser)/./app/components/shared/filters/CurrencyFilter.tsx\");\n/* harmony import */ var _app_components_shared_filters_DisplayModeFilter__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @/app/components/shared/filters/DisplayModeFilter */ \"(app-pages-browser)/./app/components/shared/filters/DisplayModeFilter.tsx\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Define RefreshIcon component\nconst RefreshIcon = (param)=>{\n    let { className = \"w-4 h-4\" } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n        className: className,\n        fill: \"none\",\n        stroke: \"currentColor\",\n        viewBox: \"0 0 24 24\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n        }, void 0, false, {\n            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/PieChart.tsx\",\n            lineNumber: 27,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/PieChart.tsx\",\n        lineNumber: 20,\n        columnNumber: 5\n    }, undefined);\n};\n_c = RefreshIcon;\nconst PieChart = (param)=>{\n    let { chartConfig, data, width = 500, height = 300, isExpanded = false, onCloseExpanded, colorMap: externalColorMap, filterValues, yAxisUnit } = param;\n    var _this = undefined;\n    var _chartConfig_additionalOptions_filters, _chartConfig_additionalOptions, _chartConfig_additionalOptions_filters_timeFilter_options, _chartConfig_additionalOptions_filters1, _chartConfig_additionalOptions1, _chartConfig_additionalOptions_filters2, _chartConfig_additionalOptions2;\n    _s();\n    const chartRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const modalChartRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [legendItems, setLegendItems] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    // Add state to track client-side rendering\n    const [isClient, setIsClient] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Add state for modal filter values\n    const [modalFilterValues, setModalFilterValues] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(filterValues || {});\n    // Update tooltip state definition\n    const [tooltip, setTooltip] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        visible: false,\n        left: 0,\n        top: 0,\n        data: null\n    });\n    // Extract mapping fields\n    const labelField = chartConfig.dataMapping.xAxis;\n    const valueField = chartConfig.dataMapping.yAxis;\n    // For type safety, ensure we use string values for indexing\n    const xKey = typeof labelField === 'string' ? labelField : labelField[0];\n    const yField = typeof valueField === 'string' ? valueField : Array.isArray(valueField) ? typeof valueField[0] === 'string' ? valueField[0] : valueField[0].field : '';\n    // Extract unit if available from YAxisConfig or prop\n    const yUnit = typeof valueField === 'string' ? yAxisUnit : Array.isArray(valueField) && valueField.length > 0 && typeof valueField[0] !== 'string' ? valueField[0].unit : yAxisUnit;\n    // For data access, we need just the field name\n    const yKey = yField;\n    // Format value with appropriate units\n    const formatValue = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"PieChart.useCallback[formatValue]\": (value, unit)=>{\n            // Add null/undefined check\n            if (value === undefined || value === null) {\n                return '0.00';\n            }\n            // Get the unit symbol (don't use a default)\n            const unitSymbol = unit || '';\n            const isUnitPrefix = unitSymbol && unitSymbol !== '%' && unitSymbol !== 'SOL'; // Most units are prefixed, but some go after\n            // Format with appropriate scale\n            let formattedValue;\n            if (value >= 1000000000) {\n                formattedValue = \"\".concat((value / 1000000000).toFixed(2), \"B\");\n            } else if (value >= 1000000) {\n                formattedValue = \"\".concat((value / 1000000).toFixed(2), \"M\");\n            } else if (value >= 1000) {\n                formattedValue = \"\".concat((value / 1000).toFixed(2), \"K\");\n            } else {\n                formattedValue = value.toFixed(2);\n            }\n            // Return with correct unit placement (or no unit if not specified)\n            if (!unitSymbol) return formattedValue;\n            return isUnitPrefix ? \"\".concat(unitSymbol).concat(formattedValue) : \"\".concat(formattedValue, \"\\xa0\").concat(unitSymbol);\n        }\n    }[\"PieChart.useCallback[formatValue]\"], []);\n    // Transform raw data into pie chart format\n    const pieData = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"PieChart.useMemo[pieData]\": ()=>{\n            if (!data || data.length === 0 || !xKey || !yKey) {\n                return [];\n            }\n            // Calculate total value for percentage\n            const totalValue = data.reduce({\n                \"PieChart.useMemo[pieData].totalValue\": (sum, item)=>sum + (Number(item[yKey]) || 0)\n            }[\"PieChart.useMemo[pieData].totalValue\"], 0);\n            // Create pie data points with percentages\n            return data.map({\n                \"PieChart.useMemo[pieData]\": (item)=>({\n                        label: String(item[xKey]),\n                        value: Number(item[yKey]) || 0,\n                        percentage: totalValue > 0 ? (Number(item[yKey]) || 0) / totalValue * 100 : 0,\n                        originalData: item\n                    })\n            }[\"PieChart.useMemo[pieData]\"]).filter({\n                \"PieChart.useMemo[pieData]\": (item)=>item.value > 0\n            }[\"PieChart.useMemo[pieData]\"]) // Filter out zero values\n            .sort({\n                \"PieChart.useMemo[pieData]\": (a, b)=>b.value - a.value\n            }[\"PieChart.useMemo[pieData]\"]); // Sort by value (descending)\n        }\n    }[\"PieChart.useMemo[pieData]\"], [\n        data,\n        xKey,\n        yKey\n    ]);\n    // Create color scale based on data\n    const colorScale = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"PieChart.useMemo[colorScale]\": ()=>{\n            const dataLabels = pieData.map({\n                \"PieChart.useMemo[colorScale].dataLabels\": (d)=>d.label\n            }[\"PieChart.useMemo[colorScale].dataLabels\"]);\n            // Use external color map if available, otherwise generate from color palette\n            const colorValues = dataLabels.map({\n                \"PieChart.useMemo[colorScale].colorValues\": (label, index)=>(externalColorMap === null || externalColorMap === void 0 ? void 0 : externalColorMap[label]) || (0,_app_utils_chartColors__WEBPACK_IMPORTED_MODULE_2__.getColorByIndex)(index)\n            }[\"PieChart.useMemo[colorScale].colorValues\"]);\n            return (0,_visx_scale__WEBPACK_IMPORTED_MODULE_10__[\"default\"])({\n                domain: dataLabels,\n                range: colorValues\n            });\n        }\n    }[\"PieChart.useMemo[colorScale]\"], [\n        pieData,\n        externalColorMap\n    ]);\n    // Refresh data placeholder\n    const refreshData = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"PieChart.useCallback[refreshData]\": ()=>{\n            // If onFilterChange exists in chartConfig, call it with current filters\n            if (chartConfig.onFilterChange) {\n                chartConfig.onFilterChange(filterValues || {});\n            }\n            setError(null);\n        }\n    }[\"PieChart.useCallback[refreshData]\"], [\n        filterValues,\n        chartConfig\n    ]);\n    // Handle mouse leave for tooltip\n    const handleMouseLeave = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"PieChart.useCallback[handleMouseLeave]\": ()=>{\n            if (tooltip.visible) {\n                setTooltip({\n                    \"PieChart.useCallback[handleMouseLeave]\": (prev)=>({\n                            ...prev,\n                            visible: false\n                        })\n                }[\"PieChart.useCallback[handleMouseLeave]\"]);\n            }\n        }\n    }[\"PieChart.useCallback[handleMouseLeave]\"], [\n        tooltip.visible\n    ]);\n    // Set isClient to true when component mounts in browser\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"PieChart.useEffect\": ()=>{\n            setIsClient(true);\n        }\n    }[\"PieChart.useEffect\"], []);\n    // Update modal filters when component receives new filter values\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"PieChart.useEffect\": ()=>{\n            if (filterValues) {\n                setModalFilterValues(filterValues);\n            }\n        }\n    }[\"PieChart.useEffect\"], [\n        filterValues\n    ]);\n    // Update legend items when pie data changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"PieChart.useEffect\": ()=>{\n            if (pieData.length > 0) {\n                const newLegendItems = pieData.map({\n                    \"PieChart.useEffect.newLegendItems\": (item)=>({\n                            id: item.label,\n                            label: item.label,\n                            color: colorScale(item.label),\n                            value: item.percentage\n                        })\n                }[\"PieChart.useEffect.newLegendItems\"]);\n                setLegendItems(newLegendItems);\n            }\n        }\n    }[\"PieChart.useEffect\"], [\n        pieData,\n        colorScale\n    ]);\n    // Enhanced function to handle modal filter changes\n    const handleModalFilterChange = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"PieChart.useCallback[handleModalFilterChange]\": (key, value)=>{\n            console.log(\"Modal filter changed: \".concat(key, \" = \").concat(value));\n            const updatedFilters = {\n                ...modalFilterValues,\n                [key]: value\n            };\n            // Update local state\n            setModalFilterValues(updatedFilters);\n            // If onFilterChange exists in chartConfig, call it with updated filters\n            if (chartConfig.onFilterChange) {\n                chartConfig.onFilterChange(updatedFilters);\n            }\n        }\n    }[\"PieChart.useCallback[handleModalFilterChange]\"], [\n        modalFilterValues,\n        chartConfig\n    ]);\n    // Handle filter changes - for both modal and normal view\n    const handleFilterChange = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"PieChart.useCallback[handleFilterChange]\": (key, value)=>{\n            // For modal-specific behavior, use the enhanced handler\n            if (isExpanded) {\n                return handleModalFilterChange(key, value);\n            }\n            console.log(\"Filter changed: \".concat(key, \" = \").concat(value));\n            const updatedFilters = {\n                ...modalFilterValues,\n                [key]: value\n            };\n            // Update local state\n            setModalFilterValues(updatedFilters);\n            // If onFilterChange exists in chartConfig, call it with updated filters\n            if (chartConfig.onFilterChange) {\n                chartConfig.onFilterChange(updatedFilters);\n            }\n        }\n    }[\"PieChart.useCallback[handleFilterChange]\"], [\n        modalFilterValues,\n        chartConfig,\n        isExpanded,\n        handleModalFilterChange\n    ]);\n    // Handle tooltip display on hovering pie segments\n    const handleMouseMove = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"PieChart.useCallback[handleMouseMove]\": (e, dataPoint)=>{\n            const containerRef = e.currentTarget.closest('.chart-container');\n            if (!containerRef) return;\n            const rect = containerRef.getBoundingClientRect();\n            const x = e.clientX - rect.left;\n            const y = e.clientY - rect.top;\n            setTooltip({\n                visible: true,\n                data: dataPoint,\n                left: x,\n                top: y\n            });\n        }\n    }[\"PieChart.useCallback[handleMouseMove]\"], []);\n    // Helper function to format axis labels\n    const formatXAxisLabel = (value)=>{\n        // Check if the value is a date format (YYYY-MM-DD or similar)\n        const isDateFormat = /^\\d{4}-\\d{2}-\\d{2}/.test(value) || /^\\d{2}\\/\\d{2}\\/\\d{4}/.test(value) || /^\\d{1,2}-[A-Za-z]{3}-\\d{4}/.test(value);\n        // Don't shorten date formats, but shorten other values\n        if (!isDateFormat && value.length > 3) {\n            return \"\".concat(value.substring(0, 3), \"...\");\n        }\n        return value;\n    };\n    // Render chart content\n    const renderChartContent = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"PieChart.useCallback[renderChartContent]\": function(chartWidth, chartHeight) {\n            let isModal = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;\n            // Show error state or no data\n            if (error || pieData.length === 0) {\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex flex-col justify-center items-center h-full\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-gray-400/80 text-xs mb-2\",\n                            children: error || 'No data available'\n                        }, void 0, false, {\n                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/PieChart.tsx\",\n                            lineNumber: 292,\n                            columnNumber: 11\n                        }, _this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app_components_shared_buttons_ButtonSecondary__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                            onClick: refreshData,\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex items-center gap-1.5\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(RefreshIcon, {\n                                        className: \"w-3.5 h-3.5\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/PieChart.tsx\",\n                                        lineNumber: 295,\n                                        columnNumber: 15\n                                    }, _this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        children: \"Refresh\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/PieChart.tsx\",\n                                        lineNumber: 296,\n                                        columnNumber: 15\n                                    }, _this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/PieChart.tsx\",\n                                lineNumber: 294,\n                                columnNumber: 13\n                            }, _this)\n                        }, void 0, false, {\n                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/PieChart.tsx\",\n                            lineNumber: 293,\n                            columnNumber: 11\n                        }, _this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/PieChart.tsx\",\n                    lineNumber: 291,\n                    columnNumber: 9\n                }, _this);\n            }\n            // Define margins for chart\n            const margin = {\n                top: 10,\n                right: 15,\n                bottom: 10,\n                left: 15\n            };\n            const innerWidth = chartWidth - margin.left - margin.right;\n            const innerHeight = chartHeight - margin.top - margin.bottom;\n            if (innerWidth <= 0 || innerHeight <= 0) return null;\n            // Define pie dimensions\n            const radius = Math.min(innerWidth, innerHeight) / 2.5;\n            // Render the chart content\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"relative w-full h-full chart-container\",\n                onMouseLeave: handleMouseLeave,\n                ref: isModal ? modalChartRef : chartRef,\n                children: [\n                    tooltip.visible && tooltip.data && !isModal && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app_components_shared_ChartTooltip__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                        title: tooltip.data.label,\n                        items: [\n                            {\n                                label: 'Value',\n                                value: formatValue(tooltip.data.value, yUnit),\n                                color: colorScale(tooltip.data.label),\n                                shape: 'square'\n                            },\n                            {\n                                label: 'Percentage',\n                                value: \"\".concat(tooltip.data.percentage.toFixed(1), \"%\"),\n                                color: colorScale(tooltip.data.label),\n                                shape: 'square'\n                            }\n                        ],\n                        left: tooltip.left,\n                        top: tooltip.top,\n                        isModal: false,\n                        currencyFilter: filterValues === null || filterValues === void 0 ? void 0 : filterValues.currencyFilter\n                    }, void 0, false, {\n                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/PieChart.tsx\",\n                        lineNumber: 322,\n                        columnNumber: 11\n                    }, _this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                        width: chartWidth,\n                        height: chartHeight,\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_visx_group__WEBPACK_IMPORTED_MODULE_11__[\"default\"], {\n                            left: chartWidth / 2,\n                            top: chartHeight / 2,\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_visx_shape__WEBPACK_IMPORTED_MODULE_12__[\"default\"], {\n                                data: pieData,\n                                pieValue: {\n                                    \"PieChart.useCallback[renderChartContent]\": (d)=>d.value\n                                }[\"PieChart.useCallback[renderChartContent]\"],\n                                outerRadius: radius,\n                                innerRadius: radius * 0.6,\n                                cornerRadius: 3,\n                                padAngle: 0.005,\n                                children: {\n                                    \"PieChart.useCallback[renderChartContent]\": (pie)=>{\n                                        return pie.arcs.map({\n                                            \"PieChart.useCallback[renderChartContent]\": (arc, index)=>{\n                                                const dataPoint = arc.data;\n                                                const [centroidX, centroidY] = pie.path.centroid(arc);\n                                                const hasSpaceForLabel = dataPoint.percentage > 5;\n                                                const fillColor = colorScale(dataPoint.label);\n                                                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"g\", {\n                                                    onMouseMove: {\n                                                        \"PieChart.useCallback[renderChartContent]\": (e)=>{\n                                                            var _e_currentTarget_closest;\n                                                            const containerRect = (_e_currentTarget_closest = e.currentTarget.closest('svg')) === null || _e_currentTarget_closest === void 0 ? void 0 : _e_currentTarget_closest.getBoundingClientRect();\n                                                            if (!containerRect) return;\n                                                            const x = e.clientX - containerRect.left;\n                                                            const y = e.clientY - containerRect.top;\n                                                            setTooltip({\n                                                                visible: true,\n                                                                data: dataPoint,\n                                                                left: x,\n                                                                top: y\n                                                            });\n                                                        }\n                                                    }[\"PieChart.useCallback[renderChartContent]\"],\n                                                    onMouseLeave: {\n                                                        \"PieChart.useCallback[renderChartContent]\": ()=>setTooltip({\n                                                                \"PieChart.useCallback[renderChartContent]\": (prev)=>({\n                                                                        ...prev,\n                                                                        visible: false\n                                                                    })\n                                                            }[\"PieChart.useCallback[renderChartContent]\"])\n                                                    }[\"PieChart.useCallback[renderChartContent]\"],\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                            d: pie.path(arc) || '',\n                                                            fill: fillColor,\n                                                            stroke: \"#000\",\n                                                            strokeWidth: 0.5,\n                                                            strokeOpacity: 0.3\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/PieChart.tsx\",\n                                                            lineNumber: 381,\n                                                            columnNumber: 23\n                                                        }, _this),\n                                                        hasSpaceForLabel && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"text\", {\n                                                            fill: \"white\",\n                                                            x: centroidX,\n                                                            y: centroidY,\n                                                            dy: \".33em\",\n                                                            fontSize: 11,\n                                                            textAnchor: \"middle\",\n                                                            pointerEvents: \"none\",\n                                                            children: \"\".concat(dataPoint.percentage.toFixed(0), \"%\")\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/PieChart.tsx\",\n                                                            lineNumber: 389,\n                                                            columnNumber: 25\n                                                        }, _this)\n                                                    ]\n                                                }, \"arc-\".concat(dataPoint.label, \"-\").concat(index), true, {\n                                                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/PieChart.tsx\",\n                                                    lineNumber: 363,\n                                                    columnNumber: 21\n                                                }, _this);\n                                            }\n                                        }[\"PieChart.useCallback[renderChartContent]\"]);\n                                    }\n                                }[\"PieChart.useCallback[renderChartContent]\"]\n                            }, void 0, false, {\n                                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/PieChart.tsx\",\n                                lineNumber: 347,\n                                columnNumber: 13\n                            }, _this)\n                        }, void 0, false, {\n                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/PieChart.tsx\",\n                            lineNumber: 346,\n                            columnNumber: 11\n                        }, _this)\n                    }, void 0, false, {\n                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/PieChart.tsx\",\n                        lineNumber: 345,\n                        columnNumber: 9\n                    }, _this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/PieChart.tsx\",\n                lineNumber: 315,\n                columnNumber: 7\n            }, _this);\n        }\n    }[\"PieChart.useCallback[renderChartContent]\"], [\n        pieData,\n        error,\n        refreshData,\n        handleMouseLeave,\n        tooltip,\n        colorScale,\n        formatValue,\n        yUnit,\n        filterValues\n    ]);\n    // Render the chart with legends\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: isExpanded && isClient ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app_components_shared_Modal__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n            isOpen: isExpanded,\n            onClose: onCloseExpanded || (()=>{}),\n            title: chartConfig.title || \"Pie Chart\",\n            subtitle: chartConfig.subtitle,\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"w-full h-[80vh] relative overflow-visible\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"mb-4 flex justify-between items-center\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex items-center space-x-4\",\n                            children: [\n                                ((_chartConfig_additionalOptions = chartConfig.additionalOptions) === null || _chartConfig_additionalOptions === void 0 ? void 0 : (_chartConfig_additionalOptions_filters = _chartConfig_additionalOptions.filters) === null || _chartConfig_additionalOptions_filters === void 0 ? void 0 : _chartConfig_additionalOptions_filters.timeFilter) && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"flex items-center\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app_components_shared_filters_TimeFilter__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n                                        value: (modalFilterValues === null || modalFilterValues === void 0 ? void 0 : modalFilterValues.timeFilter) || chartConfig.additionalOptions.filters.timeFilter.activeValue || 'M',\n                                        onChange: (value)=>handleModalFilterChange('timeFilter', value),\n                                        options: (_chartConfig_additionalOptions_filters_timeFilter_options = chartConfig.additionalOptions.filters.timeFilter.options) === null || _chartConfig_additionalOptions_filters_timeFilter_options === void 0 ? void 0 : _chartConfig_additionalOptions_filters_timeFilter_options.map((opt)=>({\n                                                value: opt,\n                                                label: opt\n                                            }))\n                                    }, void 0, false, {\n                                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/PieChart.tsx\",\n                                        lineNumber: 433,\n                                        columnNumber: 21\n                                    }, undefined)\n                                }, void 0, false, {\n                                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/PieChart.tsx\",\n                                    lineNumber: 432,\n                                    columnNumber: 19\n                                }, undefined),\n                                ((_chartConfig_additionalOptions1 = chartConfig.additionalOptions) === null || _chartConfig_additionalOptions1 === void 0 ? void 0 : (_chartConfig_additionalOptions_filters1 = _chartConfig_additionalOptions1.filters) === null || _chartConfig_additionalOptions_filters1 === void 0 ? void 0 : _chartConfig_additionalOptions_filters1.currencyFilter) && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app_components_shared_filters_CurrencyFilter__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n                                    currency: (modalFilterValues === null || modalFilterValues === void 0 ? void 0 : modalFilterValues.currencyFilter) || chartConfig.additionalOptions.filters.currencyFilter.activeValue || 'USD',\n                                    onChange: (value)=>handleModalFilterChange('currencyFilter', value),\n                                    options: chartConfig.additionalOptions.filters.currencyFilter.options\n                                }, void 0, false, {\n                                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/PieChart.tsx\",\n                                    lineNumber: 446,\n                                    columnNumber: 19\n                                }, undefined),\n                                ((_chartConfig_additionalOptions2 = chartConfig.additionalOptions) === null || _chartConfig_additionalOptions2 === void 0 ? void 0 : (_chartConfig_additionalOptions_filters2 = _chartConfig_additionalOptions2.filters) === null || _chartConfig_additionalOptions_filters2 === void 0 ? void 0 : _chartConfig_additionalOptions_filters2.displayModeFilter) && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"flex items-center\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app_components_shared_filters_DisplayModeFilter__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n                                        mode: (modalFilterValues === null || modalFilterValues === void 0 ? void 0 : modalFilterValues.displayMode) || chartConfig.additionalOptions.filters.displayModeFilter.activeValue || 'absolute',\n                                        onChange: (value)=>handleModalFilterChange('displayMode', value)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/PieChart.tsx\",\n                                        lineNumber: 457,\n                                        columnNumber: 21\n                                    }, undefined)\n                                }, void 0, false, {\n                                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/PieChart.tsx\",\n                                    lineNumber: 456,\n                                    columnNumber: 19\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/PieChart.tsx\",\n                            lineNumber: 429,\n                            columnNumber: 15\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/PieChart.tsx\",\n                        lineNumber: 428,\n                        columnNumber: 13\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"w-full h-px bg-gray-900 mb-4\"\n                    }, void 0, false, {\n                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/PieChart.tsx\",\n                        lineNumber: 467,\n                        columnNumber: 13\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex h-full\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"w-[80%] h-[90%] pr-3 border-r border-gray-900\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"flex flex-col h-full\",\n                                    children: [\n                                        tooltip.visible && tooltip.data && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"absolute z-50\",\n                                            style: {\n                                                pointerEvents: 'none',\n                                                top: tooltip.top,\n                                                left: tooltip.left\n                                            },\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app_components_shared_ChartTooltip__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                                                title: tooltip.data.label,\n                                                items: [\n                                                    {\n                                                        label: 'Value',\n                                                        value: formatValue(tooltip.data.value, yUnit),\n                                                        color: colorScale(tooltip.data.label),\n                                                        shape: 'square'\n                                                    },\n                                                    {\n                                                        label: 'Percentage',\n                                                        value: \"\".concat(tooltip.data.percentage.toFixed(1), \"%\"),\n                                                        color: colorScale(tooltip.data.label),\n                                                        shape: 'square'\n                                                    }\n                                                ],\n                                                left: 0,\n                                                top: 0,\n                                                isModal: true,\n                                                currencyFilter: (modalFilterValues === null || modalFilterValues === void 0 ? void 0 : modalFilterValues.currencyFilter) || (filterValues === null || filterValues === void 0 ? void 0 : filterValues.currencyFilter)\n                                            }, void 0, false, {\n                                                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/PieChart.tsx\",\n                                                lineNumber: 481,\n                                                columnNumber: 23\n                                            }, undefined)\n                                        }, void 0, false, {\n                                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/PieChart.tsx\",\n                                            lineNumber: 476,\n                                            columnNumber: 21\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"h-full w-full relative\",\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_visx_responsive__WEBPACK_IMPORTED_MODULE_13__[\"default\"], {\n                                                debounceTime: 10,\n                                                children: (param)=>{\n                                                    let { width: parentWidth, height: parentHeight } = param;\n                                                    return parentWidth > 0 && parentHeight > 0 ? renderChartContent(parentWidth, parentHeight, true) : null;\n                                                }\n                                            }, void 0, false, {\n                                                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/PieChart.tsx\",\n                                                lineNumber: 507,\n                                                columnNumber: 21\n                                            }, undefined)\n                                        }, void 0, false, {\n                                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/PieChart.tsx\",\n                                            lineNumber: 506,\n                                            columnNumber: 19\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/PieChart.tsx\",\n                                    lineNumber: 473,\n                                    columnNumber: 17\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/PieChart.tsx\",\n                                lineNumber: 472,\n                                columnNumber: 15\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"w-[20%] h-full pl-3 flex flex-col justify-start items-start\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"space-y-2 w-full overflow-y-auto max-h-[600px] [&::-webkit-scrollbar]:w-1.5  [&::-webkit-scrollbar-track]:bg-transparent  [&::-webkit-scrollbar-thumb]:bg-gray-700/40 [&::-webkit-scrollbar-thumb]:rounded-full [&::-webkit-scrollbar-thumb]:hover:bg-gray-600/60 scrollbar-thin scrollbar-track-transparent scrollbar-thumb-gray-700/40\",\n                                    children: legendItems.map((item)=>{\n                                        var _item_value;\n                                        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app_components_shared_LegendItem__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                                            label: \"\".concat(item.label, \" (\").concat((_item_value = item.value) === null || _item_value === void 0 ? void 0 : _item_value.toFixed(1), \"%)\"),\n                                            color: item.color,\n                                            shape: \"square\"\n                                        }, item.id, false, {\n                                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/PieChart.tsx\",\n                                            lineNumber: 529,\n                                            columnNumber: 21\n                                        }, undefined);\n                                    })\n                                }, void 0, false, {\n                                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/PieChart.tsx\",\n                                    lineNumber: 521,\n                                    columnNumber: 17\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/PieChart.tsx\",\n                                lineNumber: 519,\n                                columnNumber: 15\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/PieChart.tsx\",\n                        lineNumber: 470,\n                        columnNumber: 13\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/PieChart.tsx\",\n                lineNumber: 426,\n                columnNumber: 11\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/PieChart.tsx\",\n            lineNumber: 420,\n            columnNumber: 9\n        }, undefined) : // Normal view\n        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"w-full h-full relative\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_visx_responsive__WEBPACK_IMPORTED_MODULE_13__[\"default\"], {\n                debounceTime: 10,\n                children: (param)=>{\n                    let { width: parentWidth, height: parentHeight } = param;\n                    return parentWidth > 0 && parentHeight > 0 ? renderChartContent(parentWidth, parentHeight) : null;\n                }\n            }, void 0, false, {\n                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/PieChart.tsx\",\n                lineNumber: 544,\n                columnNumber: 11\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/PieChart.tsx\",\n            lineNumber: 543,\n            columnNumber: 9\n        }, undefined)\n    }, void 0, false);\n};\n_s(PieChart, \"Qjnz/8CiNzWV/EuPRMaZ6tLMgYI=\");\n_c1 = PieChart;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (/*#__PURE__*/_c2 = react__WEBPACK_IMPORTED_MODULE_1___default().memo(PieChart));\nvar _c, _c1, _c2;\n$RefreshReg$(_c, \"RefreshIcon\");\n$RefreshReg$(_c1, \"PieChart\");\n$RefreshReg$(_c2, \"%default%\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/admin/components/charts/PieChart.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/admin/components/charts/SimpleBarChart.tsx":
/*!********************************************************!*\
  !*** ./app/admin/components/charts/SimpleBarChart.tsx ***!
  \********************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _visx_responsive__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @visx/responsive */ \"(app-pages-browser)/./node_modules/@visx/responsive/esm/components/ParentSize.js\");\n/* harmony import */ var _visx_group__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @visx/group */ \"(app-pages-browser)/./node_modules/@visx/group/esm/Group.js\");\n/* harmony import */ var _visx_grid__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @visx/grid */ \"(app-pages-browser)/./node_modules/@visx/grid/esm/grids/GridRows.js\");\n/* harmony import */ var _visx_scale__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @visx/scale */ \"(app-pages-browser)/./node_modules/@visx/scale/esm/scales/band.js\");\n/* harmony import */ var _visx_scale__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @visx/scale */ \"(app-pages-browser)/./node_modules/@visx/scale/esm/scales/linear.js\");\n/* harmony import */ var _visx_axis__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @visx/axis */ \"(app-pages-browser)/./node_modules/@visx/axis/esm/axis/AxisBottom.js\");\n/* harmony import */ var _visx_axis__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @visx/axis */ \"(app-pages-browser)/./node_modules/@visx/axis/esm/axis/AxisLeft.js\");\n/* harmony import */ var _visx_shape__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @visx/shape */ \"(app-pages-browser)/./node_modules/@visx/shape/esm/shapes/Bar.js\");\n/* harmony import */ var _app_utils_chartColors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/app/utils/chartColors */ \"(app-pages-browser)/./app/utils/chartColors.ts\");\n/* harmony import */ var _app_components_shared_ChartTooltip__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/app/components/shared/ChartTooltip */ \"(app-pages-browser)/./app/components/shared/ChartTooltip.tsx\");\n/* harmony import */ var _app_components_shared_buttons_ButtonSecondary__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/app/components/shared/buttons/ButtonSecondary */ \"(app-pages-browser)/./app/components/shared/buttons/ButtonSecondary.tsx\");\n/* harmony import */ var _app_components_shared_LegendItem__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/app/components/shared/LegendItem */ \"(app-pages-browser)/./app/components/shared/LegendItem.tsx\");\n/* harmony import */ var _app_components_shared_BrushTimeScale__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/app/components/shared/BrushTimeScale */ \"(app-pages-browser)/./app/components/shared/BrushTimeScale.tsx\");\n/* harmony import */ var _app_components_shared_Modal__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @/app/components/shared/Modal */ \"(app-pages-browser)/./app/components/shared/Modal.tsx\");\n/* harmony import */ var _app_components_shared_filters_TimeFilter__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @/app/components/shared/filters/TimeFilter */ \"(app-pages-browser)/./app/components/shared/filters/TimeFilter.tsx\");\n/* harmony import */ var _app_components_shared_filters_CurrencyFilter__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @/app/components/shared/filters/CurrencyFilter */ \"(app-pages-browser)/./app/components/shared/filters/CurrencyFilter.tsx\");\n/* harmony import */ var _app_components_shared_filters_DisplayModeFilter__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @/app/components/shared/filters/DisplayModeFilter */ \"(app-pages-browser)/./app/components/shared/filters/DisplayModeFilter.tsx\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Define RefreshIcon component\nconst RefreshIcon = (param)=>{\n    let { className = \"w-4 h-4\" } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n        className: className,\n        fill: \"none\",\n        stroke: \"currentColor\",\n        viewBox: \"0 0 24 24\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n        }, void 0, false, {\n            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/SimpleBarChart.tsx\",\n            lineNumber: 30,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/SimpleBarChart.tsx\",\n        lineNumber: 23,\n        columnNumber: 5\n    }, undefined);\n};\n_c = RefreshIcon;\nconst SimpleBarChart = (param)=>{\n    let { chartConfig, data, width = 500, height = 300, isExpanded = false, onCloseExpanded, colorMap: externalColorMap, filterValues, yAxisUnit } = param;\n    var _this = undefined;\n    _s();\n    const chartRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const modalChartRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [legendItems, setLegendItems] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    // Brush state\n    const [isBrushActive, setIsBrushActive] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [brushDomain, setBrushDomain] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    // Filtered data based on brush\n    const [filteredData, setFilteredData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    // Modal-specific filtered data\n    const [modalFilteredData, setModalFilteredData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    // Update tooltip state definition\n    const [tooltip, setTooltip] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        visible: false,\n        left: 0,\n        top: 0,\n        key: '',\n        items: []\n    });\n    // Modal brush state\n    const [isModalBrushActive, setIsModalBrushActive] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [modalBrushDomain, setModalBrushDomain] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    // Add state for filter values in modal\n    const [modalFilterValues, setModalFilterValues] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(filterValues || {});\n    // Add state to track client-side rendering\n    const [isClient, setIsClient] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Extract mapping fields\n    const xField = chartConfig.dataMapping.xAxis;\n    const yField = chartConfig.dataMapping.yAxis;\n    // For type safety, ensure we use string values for indexing\n    const xKey = typeof xField === 'string' ? xField : xField[0];\n    // Helper function to get field from YAxisConfig or use string directly\n    const getYAxisField = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"SimpleBarChart.useCallback[getYAxisField]\": (field)=>{\n            return typeof field === 'string' ? field : field.field;\n        }\n    }[\"SimpleBarChart.useCallback[getYAxisField]\"], []);\n    // Determine if we have multiple Y-axis fields\n    const isMultiSeries = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"SimpleBarChart.useMemo[isMultiSeries]\": ()=>Array.isArray(yField) && yField.length > 1\n    }[\"SimpleBarChart.useMemo[isMultiSeries]\"], [\n        yField\n    ]);\n    // Get array of y-fields\n    const yFields = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"SimpleBarChart.useMemo[yFields]\": ()=>{\n            if (typeof yField === 'string') {\n                return [\n                    yField\n                ];\n            } else if (Array.isArray(yField)) {\n                return yField.map({\n                    \"SimpleBarChart.useMemo[yFields]\": (f)=>getYAxisField(f)\n                }[\"SimpleBarChart.useMemo[yFields]\"]);\n            }\n            return [];\n        }\n    }[\"SimpleBarChart.useMemo[yFields]\"], [\n        yField,\n        getYAxisField\n    ]);\n    // Ensure yKey is always a string (first y-field for backwards compatibility)\n    const yKey = yFields[0];\n    // Format value for tooltip\n    const formatValue = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"SimpleBarChart.useCallback[formatValue]\": (value, unit)=>{\n            // Add null/undefined check\n            if (value === undefined || value === null) {\n                return '0.00';\n            }\n            // Get the unit symbol (don't use a default)\n            const unitSymbol = unit || '';\n            const isUnitPrefix = unitSymbol && unitSymbol !== '%' && unitSymbol !== 'SOL'; // Most units are prefixed, but some go after\n            // Format with appropriate scale\n            let formattedValue;\n            if (value >= 1000000000) {\n                formattedValue = \"\".concat((value / 1000000000).toFixed(2), \"B\");\n            } else if (value >= 1000000) {\n                formattedValue = \"\".concat((value / 1000000).toFixed(2), \"M\");\n            } else if (value >= 1000) {\n                formattedValue = \"\".concat((value / 1000).toFixed(2), \"K\");\n            } else {\n                formattedValue = value.toFixed(2);\n            }\n            // Return with correct unit placement (or no unit if not specified)\n            if (!unitSymbol) return formattedValue;\n            return isUnitPrefix ? \"\".concat(unitSymbol).concat(formattedValue) : \"\".concat(formattedValue, \"\\xa0\").concat(unitSymbol);\n        }\n    }[\"SimpleBarChart.useCallback[formatValue]\"], []);\n    // Format y-axis tick value with appropriate units\n    const formatTickValue = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"SimpleBarChart.useCallback[formatTickValue]\": (value)=>{\n            if (value === 0) return '0';\n            if (value >= 1000000000) {\n                const formattedValue = (value / 1000000000).toFixed(1);\n                return formattedValue.endsWith('.0') ? \"\".concat(formattedValue.slice(0, -2), \"B\") : \"\".concat(formattedValue, \"B\");\n            } else if (value >= 1000000) {\n                const formattedValue = (value / 1000000).toFixed(1);\n                return formattedValue.endsWith('.0') ? \"\".concat(formattedValue.slice(0, -2), \"M\") : \"\".concat(formattedValue, \"M\");\n            } else if (value >= 1000) {\n                const formattedValue = (value / 1000).toFixed(1);\n                return formattedValue.endsWith('.0') ? \"\".concat(formattedValue.slice(0, -2), \"K\") : \"\".concat(formattedValue, \"K\");\n            } else {\n                return value.toFixed(0);\n            }\n        }\n    }[\"SimpleBarChart.useCallback[formatTickValue]\"], []);\n    // Update modal filters when component receives new filter values\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"SimpleBarChart.useEffect\": ()=>{\n            if (filterValues) {\n                setModalFilterValues(filterValues);\n            }\n        }\n    }[\"SimpleBarChart.useEffect\"], [\n        filterValues\n    ]);\n    // Set isClient to true when component mounts in browser\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"SimpleBarChart.useEffect\": ()=>{\n            setIsClient(true);\n        }\n    }[\"SimpleBarChart.useEffect\"], []);\n    // Placeholder for refresh data functionality\n    const refreshData = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"SimpleBarChart.useCallback[refreshData]\": ()=>{\n            // If onFilterChange exists in chartConfig, call it with current filters\n            if (chartConfig.onFilterChange) {\n                chartConfig.onFilterChange(filterValues || {});\n            }\n            setError(null);\n        }\n    }[\"SimpleBarChart.useCallback[refreshData]\"], [\n        filterValues,\n        chartConfig\n    ]);\n    // Process data for the chart - use filtered data when available\n    const { chartData, barColor } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"SimpleBarChart.useMemo\": ()=>{\n            // Use appropriate filtered data depending on context\n            const currentData = isExpanded && isModalBrushActive && modalFilteredData.length > 0 ? modalFilteredData : !isExpanded && isBrushActive && filteredData.length > 0 ? filteredData : data;\n            if (isExpanded) {\n                console.log('Modal chart data source:', isModalBrushActive && modalFilteredData.length > 0 ? 'modal filtered data' : 'full data', 'Count:', currentData.length);\n            }\n            // If no data is available, return empty defaults\n            if (!currentData || currentData.length === 0) {\n                return {\n                    chartData: [],\n                    barColor: _app_utils_chartColors__WEBPACK_IMPORTED_MODULE_2__.blue\n                };\n            }\n            // Use external color map if available\n            const preferredColorMap = externalColorMap || {};\n            // For simple bar chart, use consistent color unless explicitly configured\n            const shouldUseConsistentColor = !chartConfig.useDistinctColors;\n            // Filter data first\n            const processedData = currentData.filter({\n                \"SimpleBarChart.useMemo.processedData\": (d)=>d[xKey] !== undefined && d[xKey] !== null\n            }[\"SimpleBarChart.useMemo.processedData\"]);\n            // Sort by date if applicable\n            if (processedData.length > 0) {\n                // Detect if data contains dates\n                const isDateField = typeof processedData[0][xKey] === 'string' && (processedData[0][xKey].match(/^\\d{4}-\\d{2}-\\d{2}/) || /^\\w+\\s\\d{4}$/.test(processedData[0][xKey]) || /^\\d{4}$/.test(processedData[0][xKey]));\n                if (isDateField) {\n                    // Sort dates chronologically (oldest to newest)\n                    processedData.sort({\n                        \"SimpleBarChart.useMemo\": (a, b)=>{\n                            const dateA = new Date(a[xKey]);\n                            const dateB = new Date(b[xKey]);\n                            return dateA.getTime() - dateB.getTime();\n                        }\n                    }[\"SimpleBarChart.useMemo\"]);\n                }\n            }\n            // If multi-series, handle differently than single y-field\n            if (isMultiSeries) {\n                // Create color map for each y-field\n                const colorMap = {};\n                yFields.forEach({\n                    \"SimpleBarChart.useMemo\": (field, i)=>{\n                        colorMap[field] = preferredColorMap[field] || (0,_app_utils_chartColors__WEBPACK_IMPORTED_MODULE_2__.getColorByIndex)(i);\n                    }\n                }[\"SimpleBarChart.useMemo\"]);\n                // Group by x-axis values to prevent duplicate x values\n                const groupedData = {};\n                processedData.forEach({\n                    \"SimpleBarChart.useMemo\": (item)=>{\n                        const xValue = String(item[xKey]);\n                        if (!groupedData[xValue]) {\n                            // First time seeing this x value, create a base object\n                            groupedData[xValue] = {\n                                [xKey]: item[xKey]\n                            };\n                            // Copy all y field values\n                            yFields.forEach({\n                                \"SimpleBarChart.useMemo\": (field)=>{\n                                    groupedData[xValue][field] = item[field] !== undefined ? item[field] : 0;\n                                }\n                            }[\"SimpleBarChart.useMemo\"]);\n                        } else {\n                            // Update fields if they have higher values (for aggregating duplicates)\n                            yFields.forEach({\n                                \"SimpleBarChart.useMemo\": (field)=>{\n                                    if (item[field] !== undefined && (groupedData[xValue][field] === undefined || Number(item[field]) > Number(groupedData[xValue][field]))) {\n                                        groupedData[xValue][field] = item[field];\n                                    }\n                                }\n                            }[\"SimpleBarChart.useMemo\"]);\n                        }\n                    }\n                }[\"SimpleBarChart.useMemo\"]);\n                // Convert back to array\n                const uniqueProcessedData = Object.values(groupedData);\n                return {\n                    chartData: uniqueProcessedData,\n                    barColor: colorMap\n                };\n            } else {\n                // Single y-field, original logic\n                // Group by x-axis values to prevent duplicate bars\n                const groupedData = {};\n                processedData.forEach({\n                    \"SimpleBarChart.useMemo\": (item)=>{\n                        const xValue = String(item[xKey]);\n                        // If this x-value is already in the grouped data, update it\n                        if (groupedData[xValue]) {\n                            // By default, take the highest value to address the double bar issue\n                            if ((Number(item[yKey]) || 0) > (Number(groupedData[xValue][yKey]) || 0)) {\n                                groupedData[xValue] = item;\n                            }\n                        } else {\n                            // First time seeing this x value\n                            groupedData[xValue] = {\n                                ...item\n                            };\n                        }\n                    }\n                }[\"SimpleBarChart.useMemo\"]);\n                // Convert back to array\n                const uniqueProcessedData = Object.values(groupedData);\n                console.log(\"Processed \".concat(processedData.length, \" items into \").concat(uniqueProcessedData.length, \" unique data points\"));\n                // Use a consistent color unless distinctColors is requested\n                if (shouldUseConsistentColor) {\n                    return {\n                        chartData: uniqueProcessedData,\n                        barColor: preferredColorMap[yKey] || _app_utils_chartColors__WEBPACK_IMPORTED_MODULE_2__.blue\n                    };\n                } else {\n                    // Create color map for each bar if distinct colors requested\n                    const colorMap = {};\n                    uniqueProcessedData.forEach({\n                        \"SimpleBarChart.useMemo\": (d, i)=>{\n                            const xValue = String(d[xKey]);\n                            colorMap[xValue] = preferredColorMap[xValue] || (0,_app_utils_chartColors__WEBPACK_IMPORTED_MODULE_2__.getColorByIndex)(i % _app_utils_chartColors__WEBPACK_IMPORTED_MODULE_2__.allColorsArray.length);\n                        }\n                    }[\"SimpleBarChart.useMemo\"]);\n                    return {\n                        chartData: uniqueProcessedData,\n                        barColor: colorMap\n                    };\n                }\n            }\n        }\n    }[\"SimpleBarChart.useMemo\"], [\n        data,\n        filteredData,\n        modalFilteredData,\n        isBrushActive,\n        isModalBrushActive,\n        xKey,\n        yKey,\n        chartConfig,\n        isMultiSeries,\n        yFields,\n        externalColorMap,\n        isExpanded\n    ]);\n    // Handle mouse leave\n    const handleMouseLeave = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"SimpleBarChart.useCallback[handleMouseLeave]\": ()=>{\n            if (tooltip.visible) {\n                setTooltip({\n                    \"SimpleBarChart.useCallback[handleMouseLeave]\": (prev)=>({\n                            ...prev,\n                            visible: false\n                        })\n                }[\"SimpleBarChart.useCallback[handleMouseLeave]\"]);\n            }\n        }\n    }[\"SimpleBarChart.useCallback[handleMouseLeave]\"], [\n        tooltip.visible\n    ]);\n    // Handle mouse move for tooltips\n    const handleMouseMove = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"SimpleBarChart.useCallback[handleMouseMove]\": function(e) {\n            let isModal = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n            var _containerRef_current;\n            const containerRef = isModal ? modalChartRef : chartRef;\n            const rect = (_containerRef_current = containerRef.current) === null || _containerRef_current === void 0 ? void 0 : _containerRef_current.getBoundingClientRect();\n            if (!rect) return;\n            // Get mouse position - use client coordinates for consistency\n            const mouseX = e.clientX - rect.left;\n            const mouseY = e.clientY - rect.top;\n            // Use current data based on brush state\n            const currentData = isModal ? isModalBrushActive && modalFilteredData.length > 0 ? modalFilteredData : data : isBrushActive && filteredData.length > 0 ? filteredData : data;\n            // Check if we have data to work with\n            if (currentData.length === 0) return;\n            // Calculate available chart space\n            const margin = {\n                top: 10,\n                right: 15,\n                bottom: 30,\n                left: 40\n            };\n            const innerWidth = rect.width - margin.left - margin.right;\n            // Adjust mouseX to account for margin\n            const adjustedMouseX = mouseX - margin.left;\n            // Early exit if mouse is outside the chart area\n            if (adjustedMouseX < 0 || adjustedMouseX > innerWidth) {\n                if (tooltip.visible) {\n                    setTooltip({\n                        \"SimpleBarChart.useCallback[handleMouseMove]\": (prev)=>({\n                                ...prev,\n                                visible: false\n                            })\n                    }[\"SimpleBarChart.useCallback[handleMouseMove]\"]);\n                }\n                return;\n            }\n            // Get the actual rendered data\n            const effectiveData = isMultiSeries ? chartData : chartData;\n            // Calculate bar width based on the actual rendered data\n            const barWidth = innerWidth / effectiveData.length;\n            // Calculate the index of the bar under the mouse pointer\n            const barIndex = Math.floor(adjustedMouseX / barWidth);\n            // Validate the index\n            if (barIndex < 0 || barIndex >= effectiveData.length) {\n                if (tooltip.visible) {\n                    setTooltip({\n                        \"SimpleBarChart.useCallback[handleMouseMove]\": (prev)=>({\n                                ...prev,\n                                visible: false\n                            })\n                    }[\"SimpleBarChart.useCallback[handleMouseMove]\"]);\n                }\n                return;\n            }\n            // Get the data point at this index\n            const dataPoint = effectiveData[barIndex];\n            if (!dataPoint) {\n                if (tooltip.visible) {\n                    setTooltip({\n                        \"SimpleBarChart.useCallback[handleMouseMove]\": (prev)=>({\n                                ...prev,\n                                visible: false\n                            })\n                    }[\"SimpleBarChart.useCallback[handleMouseMove]\"]);\n                }\n                return;\n            }\n            const xValue = dataPoint[xKey];\n            // Calculate tooltip position - always follow mouse in both normal and modal views\n            const tooltipLeft = mouseX;\n            const tooltipTop = Math.max(mouseY - 10, 10);\n            // Only update if showing a new x-value or hiding previous one\n            if (!tooltip.visible || tooltip.key !== xValue) {\n                let tooltipItems = [];\n                if (isMultiSeries) {\n                    // For multi-series, show non-zero values for all y fields\n                    tooltipItems = yFields.filter({\n                        \"SimpleBarChart.useCallback[handleMouseMove]\": (field)=>{\n                            const value = Number(dataPoint[field]);\n                            return !isNaN(value) && value > 0;\n                        }\n                    }[\"SimpleBarChart.useCallback[handleMouseMove]\"]).map({\n                        \"SimpleBarChart.useCallback[handleMouseMove]\": (field)=>({\n                                label: field,\n                                value: formatValue(Number(dataPoint[field]) || 0, getYAxisUnit(yField, yAxisUnit)),\n                                color: typeof barColor === 'string' ? barColor : barColor[field] || _app_utils_chartColors__WEBPACK_IMPORTED_MODULE_2__.blue,\n                                shape: 'square'\n                            })\n                    }[\"SimpleBarChart.useCallback[handleMouseMove]\"]).sort({\n                        \"SimpleBarChart.useCallback[handleMouseMove]\": (a, b)=>{\n                            // Sort by value (descending)\n                            const aVal = typeof a.value === 'string' ? parseFloat(a.value.replace(/[^0-9.-]+/g, '')) : a.value;\n                            const bVal = typeof b.value === 'string' ? parseFloat(b.value.replace(/[^0-9.-]+/g, '')) : b.value;\n                            return bVal - aVal;\n                        }\n                    }[\"SimpleBarChart.useCallback[handleMouseMove]\"]);\n                    // If no items passed the filter, show the first field with a 0 value\n                    if (tooltipItems.length === 0 && yFields.length > 0) {\n                        tooltipItems = [\n                            {\n                                label: yFields[0],\n                                value: '$0.00',\n                                color: typeof barColor === 'string' ? barColor : barColor[yFields[0]] || _app_utils_chartColors__WEBPACK_IMPORTED_MODULE_2__.blue,\n                                shape: 'square'\n                            }\n                        ];\n                    }\n                } else {\n                    // For simple bar chart, just show the single value\n                    tooltipItems = [\n                        {\n                            label: yKey,\n                            value: formatValue(dataPoint[yKey], getYAxisUnit(yField, yAxisUnit)),\n                            color: typeof barColor === 'string' ? barColor : barColor[dataPoint[xKey]] || _app_utils_chartColors__WEBPACK_IMPORTED_MODULE_2__.blue,\n                            shape: 'square'\n                        }\n                    ];\n                }\n                // Update the tooltip\n                setTooltip({\n                    visible: true,\n                    key: xValue,\n                    items: tooltipItems,\n                    left: tooltipLeft,\n                    top: tooltipTop\n                });\n            } else {\n                // If tooltip content isn't changing, just update position\n                setTooltip({\n                    \"SimpleBarChart.useCallback[handleMouseMove]\": (prev)=>({\n                            ...prev,\n                            left: tooltipLeft,\n                            top: tooltipTop\n                        })\n                }[\"SimpleBarChart.useCallback[handleMouseMove]\"]);\n            }\n        }\n    }[\"SimpleBarChart.useCallback[handleMouseMove]\"], [\n        data,\n        filteredData,\n        modalFilteredData,\n        isBrushActive,\n        isModalBrushActive,\n        chartData,\n        xKey,\n        yKey,\n        yFields,\n        barColor,\n        formatValue,\n        tooltip.visible,\n        tooltip.key,\n        isMultiSeries,\n        yAxisUnit\n    ]);\n    // Process data for brush component\n    const brushData = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"SimpleBarChart.useMemo[brushData]\": ()=>{\n            if (!data || data.length === 0) return [];\n            console.log('Creating brush data with', data.length, 'items');\n            // First, apply the same sorting/filtering as the chart data\n            let processedData = [\n                ...data\n            ].filter({\n                \"SimpleBarChart.useMemo[brushData].processedData\": (d)=>d[xKey] !== undefined && d[xKey] !== null\n            }[\"SimpleBarChart.useMemo[brushData].processedData\"]);\n            // Sort by date if applicable\n            if (processedData.length > 0) {\n                // Detect if data contains dates\n                const isDateField = typeof processedData[0][xKey] === 'string' && (processedData[0][xKey].match(/^\\d{4}-\\d{2}-\\d{2}/) || /^\\d{2}\\/\\d{2}\\/\\d{4}/.test(processedData[0][xKey]) || /^[A-Za-z]{3}\\s\\d{4}$/.test(processedData[0][xKey]) || /^\\d{4}$/.test(processedData[0][xKey]));\n                if (isDateField) {\n                    // Sort dates chronologically (oldest to newest)\n                    processedData.sort({\n                        \"SimpleBarChart.useMemo[brushData]\": (a, b)=>{\n                            const dateA = new Date(a[xKey]);\n                            const dateB = new Date(b[xKey]);\n                            return dateA.getTime() - dateB.getTime();\n                        }\n                    }[\"SimpleBarChart.useMemo[brushData]\"]);\n                }\n            }\n            // Create synthetic dates if needed\n            const baseDate = new Date();\n            baseDate.setHours(0, 0, 0, 0);\n            // Check if we're dealing with a simple bar chart without filters\n            const isSimpleChartWithoutFilters = !filterValues || Object.keys(filterValues).length === 0;\n            // For simple chart without filters, use more direct approach to ensure continuous line\n            if (isSimpleChartWithoutFilters) {\n                console.log('Processing simple chart without filters');\n                // Group by x-axis values to prevent duplicates\n                const groupedData = {};\n                processedData.forEach({\n                    \"SimpleBarChart.useMemo[brushData]\": (item)=>{\n                        const xValue = String(item[xKey]);\n                        if (groupedData[xValue]) {\n                            // Keep the highest value\n                            if ((Number(item[yKey]) || 0) > (Number(groupedData[xValue][yKey]) || 0)) {\n                                groupedData[xValue] = item;\n                            }\n                        } else {\n                            groupedData[xValue] = item;\n                        }\n                    }\n                }[\"SimpleBarChart.useMemo[brushData]\"]);\n                // Convert back to array\n                const uniqueData = Object.values(groupedData);\n                console.log(\"Processed \".concat(processedData.length, \" brush items into \").concat(uniqueData.length, \" unique data points\"));\n                // Create a series of evenly spaced date points for consistency\n                const brushDataPoints = uniqueData.map({\n                    \"SimpleBarChart.useMemo[brushData].brushDataPoints\": (d, i)=>{\n                        let dateObj;\n                        // Try to parse the date from the x-axis field\n                        if (typeof d[xKey] === 'string' && (d[xKey].match(/^\\d{4}-\\d{2}-\\d{2}/) || /^\\d{2}\\/\\d{2}\\/\\d{4}/.test(d[xKey]) || /^[A-Za-z]{3}\\s\\d{4}$/.test(d[xKey]) || /^\\d{4}$/.test(d[xKey]))) {\n                            // This is a date string, parse it\n                            dateObj = new Date(d[xKey]);\n                            // Check if the date is valid\n                            if (isNaN(dateObj.getTime())) {\n                                // Invalid date, use synthetic date based on index\n                                dateObj = new Date(baseDate);\n                                dateObj.setDate(baseDate.getDate() + i);\n                            }\n                        } else if (d[xKey] instanceof Date) {\n                            // Already a Date object\n                            dateObj = d[xKey];\n                        } else {\n                            // Non-date value, use synthetic date based on index\n                            dateObj = new Date(baseDate);\n                            dateObj.setDate(baseDate.getDate() + i);\n                        }\n                        // Convert value to number and ensure it's valid\n                        const numValue = Number(d[yKey]);\n                        const value = isNaN(numValue) ? 0 : numValue;\n                        return {\n                            date: dateObj,\n                            value: value,\n                            idx: i,\n                            originalIndex: i,\n                            originalData: d\n                        };\n                    }\n                }[\"SimpleBarChart.useMemo[brushData].brushDataPoints\"]);\n                console.log('Created brush data points for simple chart:', brushDataPoints.length);\n                return brushDataPoints;\n            }\n            // Standard processing for charts with filters\n            // Important: Create a multi-point pattern for the brush line that follows bar heights\n            // The BrushTimeScale component uses indexes for x-axis and value for y-axis\n            const brushDataPoints = processedData.map({\n                \"SimpleBarChart.useMemo[brushData].brushDataPoints\": (d, i)=>{\n                    let dateObj;\n                    // Try to parse the date from the x-axis field\n                    if (typeof d[xKey] === 'string' && (d[xKey].match(/^\\d{4}-\\d{2}-\\d{2}/) || /^\\d{2}\\/\\d{2}\\/\\d{4}/.test(d[xKey]) || /^[A-Za-z]{3}\\s\\d{4}$/.test(d[xKey]) || /^\\d{4}$/.test(d[xKey]))) {\n                        // This is a date string, parse it\n                        dateObj = new Date(d[xKey]);\n                        // Check if the date is valid\n                        if (isNaN(dateObj.getTime())) {\n                            // Invalid date, use synthetic date based on index\n                            dateObj = new Date(baseDate);\n                            dateObj.setDate(baseDate.getDate() + i);\n                        }\n                    } else if (d[xKey] instanceof Date) {\n                        // Already a Date object\n                        dateObj = d[xKey];\n                    } else {\n                        // Non-date value, use synthetic date based on index\n                        dateObj = new Date(baseDate);\n                        dateObj.setDate(baseDate.getDate() + i);\n                    }\n                    // For general case, still handle null/undefined values\n                    let yValue = Number(d[yKey]);\n                    if (yValue === null || yValue === undefined || isNaN(yValue)) {\n                        yValue = 0;\n                    }\n                    return {\n                        date: dateObj,\n                        value: yValue,\n                        idx: i,\n                        originalIndex: i,\n                        originalData: d\n                    };\n                }\n            }[\"SimpleBarChart.useMemo[brushData].brushDataPoints\"]);\n            console.log('Created brush data points:', brushDataPoints.length);\n            return brushDataPoints;\n        }\n    }[\"SimpleBarChart.useMemo[brushData]\"], [\n        data,\n        xKey,\n        yKey,\n        filterValues\n    ]);\n    // Handle brush change\n    const handleBrushChange = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"SimpleBarChart.useCallback[handleBrushChange]\": (domain)=>{\n            if (!domain) {\n                if (isBrushActive) {\n                    setBrushDomain(null);\n                    setIsBrushActive(false);\n                    setFilteredData([]); // Reset filtered data\n                }\n                return;\n            }\n            const { x0, x1 } = domain;\n            console.log('Brush change:', new Date(x0), 'to', new Date(x1));\n            // Update brush domain\n            setBrushDomain([\n                new Date(x0),\n                new Date(x1)\n            ]);\n            // Get the selected brushData items\n            const selectedBrushItems = brushData.filter({\n                \"SimpleBarChart.useCallback[handleBrushChange].selectedBrushItems\": (item)=>{\n                    return item.date >= new Date(x0) && item.date <= new Date(x1);\n                }\n            }[\"SimpleBarChart.useCallback[handleBrushChange].selectedBrushItems\"]);\n            console.log('Selected brush items:', selectedBrushItems.length);\n            // Map back to original data using originalData directly\n            const selectedDataObjects = selectedBrushItems.map({\n                \"SimpleBarChart.useCallback[handleBrushChange].selectedDataObjects\": (item)=>item.originalData\n            }[\"SimpleBarChart.useCallback[handleBrushChange].selectedDataObjects\"]);\n            console.log('Filtered data after brush:', selectedDataObjects.length);\n            setFilteredData(selectedDataObjects);\n            if (!isBrushActive) {\n                setIsBrushActive(true);\n            }\n        }\n    }[\"SimpleBarChart.useCallback[handleBrushChange]\"], [\n        isBrushActive,\n        brushData\n    ]);\n    // Handle modal brush change\n    const handleModalBrushChange = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"SimpleBarChart.useCallback[handleModalBrushChange]\": (domain)=>{\n            if (!domain) {\n                if (isModalBrushActive) {\n                    setModalBrushDomain(null);\n                    setIsModalBrushActive(false);\n                    setModalFilteredData([]); // Reset modal filtered data\n                }\n                return;\n            }\n            const { x0, x1 } = domain;\n            console.log('Modal brush change:', new Date(x0), 'to', new Date(x1));\n            // Update modal brush domain\n            setModalBrushDomain([\n                new Date(x0),\n                new Date(x1)\n            ]);\n            // Get the selected brushData items\n            const selectedBrushItems = brushData.filter({\n                \"SimpleBarChart.useCallback[handleModalBrushChange].selectedBrushItems\": (item)=>{\n                    return item.date >= new Date(x0) && item.date <= new Date(x1);\n                }\n            }[\"SimpleBarChart.useCallback[handleModalBrushChange].selectedBrushItems\"]);\n            console.log('Selected modal brush items:', selectedBrushItems.length);\n            // Map back to original data using originalData\n            // We use the actual data objects rather than indices to ensure the modal view shows correct data\n            const selectedDataObjects = selectedBrushItems.map({\n                \"SimpleBarChart.useCallback[handleModalBrushChange].selectedDataObjects\": (item)=>item.originalData\n            }[\"SimpleBarChart.useCallback[handleModalBrushChange].selectedDataObjects\"]);\n            console.log('Filtered data after modal brush:', selectedDataObjects.length);\n            setModalFilteredData(selectedDataObjects);\n            if (!isModalBrushActive) {\n                setIsModalBrushActive(true);\n            }\n        }\n    }[\"SimpleBarChart.useCallback[handleModalBrushChange]\"], [\n        isModalBrushActive,\n        brushData\n    ]);\n    // Sync modal brush domain with main brush domain when modal opens\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"SimpleBarChart.useEffect\": ()=>{\n            if (isExpanded) {\n                console.log('Modal opened, syncing brush domains');\n                // When modal opens, sync the brush domains\n                setModalBrushDomain(brushDomain);\n                setIsModalBrushActive(isBrushActive);\n                // Also sync filtered data\n                if (isBrushActive && filteredData.length > 0) {\n                    console.log('Syncing filtered data to modal:', filteredData.length, 'items');\n                    setModalFilteredData(filteredData);\n                }\n            }\n        }\n    }[\"SimpleBarChart.useEffect\"], [\n        isExpanded,\n        brushDomain,\n        isBrushActive,\n        filteredData\n    ]);\n    // Update memoized values for max chart value to use in brush\n    const maxValue = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"SimpleBarChart.useMemo[maxValue]\": ()=>{\n            if (!chartData || chartData.length === 0) return 1;\n            const values = chartData.map({\n                \"SimpleBarChart.useMemo[maxValue].values\": (d)=>Number(d[yKey]) || 0\n            }[\"SimpleBarChart.useMemo[maxValue].values\"]);\n            return Math.max(...values, 1);\n        }\n    }[\"SimpleBarChart.useMemo[maxValue]\"], [\n        chartData,\n        yKey\n    ]);\n    // Render chart content\n    const renderChartContent = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"SimpleBarChart.useCallback[renderChartContent]\": function(chartWidth, chartHeight) {\n            let isModal = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;\n            // Show error state with refresh button\n            if (error || chartData.length === 0) {\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex flex-col justify-center items-center h-full\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-gray-400/80 text-xs mb-2\",\n                            children: error || 'No data available'\n                        }, void 0, false, {\n                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/SimpleBarChart.tsx\",\n                            lineNumber: 743,\n                            columnNumber: 11\n                        }, _this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app_components_shared_buttons_ButtonSecondary__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                            onClick: refreshData,\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex items-center gap-1.5\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(RefreshIcon, {\n                                        className: \"w-3.5 h-3.5\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/SimpleBarChart.tsx\",\n                                        lineNumber: 746,\n                                        columnNumber: 15\n                                    }, _this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        children: \"Refresh\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/SimpleBarChart.tsx\",\n                                        lineNumber: 747,\n                                        columnNumber: 15\n                                    }, _this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/SimpleBarChart.tsx\",\n                                lineNumber: 745,\n                                columnNumber: 13\n                            }, _this)\n                        }, void 0, false, {\n                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/SimpleBarChart.tsx\",\n                            lineNumber: 744,\n                            columnNumber: 11\n                        }, _this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/SimpleBarChart.tsx\",\n                    lineNumber: 742,\n                    columnNumber: 9\n                }, _this);\n            }\n            // Define margins for chart\n            const margin = {\n                top: 10,\n                right: 15,\n                bottom: 30,\n                left: 40\n            };\n            const innerWidth = chartWidth - margin.left - margin.right;\n            const innerHeight = chartHeight - margin.top - margin.bottom;\n            if (innerWidth <= 0 || innerHeight <= 0) return null;\n            // Create scales\n            const xScale = (0,_visx_scale__WEBPACK_IMPORTED_MODULE_11__[\"default\"])({\n                domain: chartData.map({\n                    \"SimpleBarChart.useCallback[renderChartContent].xScale\": (d)=>d[xKey]\n                }[\"SimpleBarChart.useCallback[renderChartContent].xScale\"]),\n                range: [\n                    0,\n                    innerWidth\n                ],\n                padding: 0.2\n            });\n            // Calculate the max value for the y-axis\n            const yMax = isMultiSeries ? Math.max(...chartData.flatMap({\n                \"SimpleBarChart.useCallback[renderChartContent]\": (d)=>yFields.map({\n                        \"SimpleBarChart.useCallback[renderChartContent]\": (field)=>Number(d[field]) || 0\n                    }[\"SimpleBarChart.useCallback[renderChartContent]\"])\n            }[\"SimpleBarChart.useCallback[renderChartContent]\"]), 1) : Math.max(...chartData.map({\n                \"SimpleBarChart.useCallback[renderChartContent]\": (d)=>Number(d[yKey]) || 0\n            }[\"SimpleBarChart.useCallback[renderChartContent]\"]), 1);\n            const yScale = (0,_visx_scale__WEBPACK_IMPORTED_MODULE_12__[\"default\"])({\n                domain: [\n                    0,\n                    yMax * 1.1\n                ],\n                range: [\n                    innerHeight,\n                    0\n                ],\n                nice: true,\n                clamp: true\n            });\n            // Use all X-axis values for tick labels, but limit date ticks to 8 max\n            const xTickValues = ({\n                \"SimpleBarChart.useCallback[renderChartContent].xTickValues\": ()=>{\n                    // Check if the data contains dates\n                    const isDateData = chartData.length > 0 && typeof chartData[0][xKey] === 'string' && (/^\\d{4}-\\d{2}-\\d{2}/.test(chartData[0][xKey]) || /^\\d{2}\\/\\d{2}\\/\\d{4}/.test(chartData[0][xKey]) || /^\\d{1,2}-[A-Za-z]{3}-\\d{4}/.test(chartData[0][xKey]) || /^[A-Za-z]{3}\\s\\d{4}$/.test(chartData[0][xKey]) || /^\\d{4}$/.test(chartData[0][xKey]));\n                    // For date data, limit to 8 ticks maximum\n                    if (isDateData && chartData.length > 8) {\n                        const tickInterval = Math.ceil(chartData.length / 8);\n                        return chartData.filter({\n                            \"SimpleBarChart.useCallback[renderChartContent].xTickValues\": (_, i)=>i % tickInterval === 0\n                        }[\"SimpleBarChart.useCallback[renderChartContent].xTickValues\"]).map({\n                            \"SimpleBarChart.useCallback[renderChartContent].xTickValues\": (d)=>d[xKey]\n                        }[\"SimpleBarChart.useCallback[renderChartContent].xTickValues\"]);\n                    }\n                    // For other data types, show all values\n                    return chartData.map({\n                        \"SimpleBarChart.useCallback[renderChartContent].xTickValues\": (d)=>d[xKey]\n                    }[\"SimpleBarChart.useCallback[renderChartContent].xTickValues\"]);\n                }\n            })[\"SimpleBarChart.useCallback[renderChartContent].xTickValues\"]();\n            // Render the chart content\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"relative w-full h-full\",\n                onMouseMove: {\n                    \"SimpleBarChart.useCallback[renderChartContent]\": (e)=>handleMouseMove(e, isModal)\n                }[\"SimpleBarChart.useCallback[renderChartContent]\"],\n                onMouseLeave: handleMouseLeave,\n                ref: isModal ? modalChartRef : chartRef,\n                children: [\n                    tooltip.visible && tooltip.items && !isModal && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app_components_shared_ChartTooltip__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                        title: String(tooltip.key),\n                        items: tooltip.items,\n                        left: tooltip.left,\n                        top: tooltip.top,\n                        isModal: false,\n                        timeFilter: filterValues === null || filterValues === void 0 ? void 0 : filterValues.timeFilter,\n                        currencyFilter: filterValues === null || filterValues === void 0 ? void 0 : filterValues.currencyFilter\n                    }, void 0, false, {\n                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/SimpleBarChart.tsx\",\n                        lineNumber: 818,\n                        columnNumber: 11\n                    }, _this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                        width: chartWidth,\n                        height: chartHeight,\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_visx_group__WEBPACK_IMPORTED_MODULE_13__[\"default\"], {\n                            left: margin.left,\n                            top: margin.top,\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_visx_grid__WEBPACK_IMPORTED_MODULE_14__[\"default\"], {\n                                    scale: yScale,\n                                    width: innerWidth,\n                                    stroke: \"#1f2937\",\n                                    strokeOpacity: 0.5,\n                                    strokeDasharray: \"2,3\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/SimpleBarChart.tsx\",\n                                    lineNumber: 832,\n                                    columnNumber: 13\n                                }, _this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_visx_axis__WEBPACK_IMPORTED_MODULE_15__[\"default\"], {\n                                    top: innerHeight,\n                                    scale: xScale,\n                                    stroke: \"#374151\",\n                                    strokeWidth: 0.5,\n                                    tickStroke: \"transparent\",\n                                    hideAxisLine: false,\n                                    tickLength: 0,\n                                    tickValues: xTickValues,\n                                    tickFormat: {\n                                        \"SimpleBarChart.useCallback[renderChartContent]\": (value)=>{\n                                            // Format date labels for readability\n                                            if (typeof value === 'string') {\n                                                // For ISO dates (YYYY-MM-DD)\n                                                if (/^\\d{4}-\\d{2}-\\d{2}/.test(value)) {\n                                                    const date = new Date(value);\n                                                    if (!isNaN(date.getTime())) {\n                                                        // Format based on timeFilter if available\n                                                        if ((filterValues === null || filterValues === void 0 ? void 0 : filterValues.timeFilter) === 'D' || (filterValues === null || filterValues === void 0 ? void 0 : filterValues.timeFilter) === 'W') {\n                                                            return date.toLocaleDateString('en-US', {\n                                                                month: 'short',\n                                                                day: 'numeric'\n                                                            });\n                                                        } else if ((filterValues === null || filterValues === void 0 ? void 0 : filterValues.timeFilter) === 'M') {\n                                                            return date.toLocaleDateString('en-US', {\n                                                                month: 'short'\n                                                            });\n                                                        } else if ((filterValues === null || filterValues === void 0 ? void 0 : filterValues.timeFilter) === 'Q') {\n                                                            const quarter = Math.floor(date.getMonth() / 3) + 1;\n                                                            return \"Q\".concat(quarter);\n                                                        } else if ((filterValues === null || filterValues === void 0 ? void 0 : filterValues.timeFilter) === 'Y') {\n                                                            return date.getFullYear().toString();\n                                                        }\n                                                        // Default format if no timeFilter is specified\n                                                        return date.toLocaleDateString('en-US', {\n                                                            month: 'short',\n                                                            day: 'numeric'\n                                                        });\n                                                    }\n                                                }\n                                                // For US dates (MM/DD/YYYY)\n                                                if (/^\\d{2}\\/\\d{2}\\/\\d{4}/.test(value)) {\n                                                    const date = new Date(value);\n                                                    if (!isNaN(date.getTime())) {\n                                                        // Use same formatting logic as above\n                                                        return formatXAxisLabel(value, filterValues);\n                                                    }\n                                                }\n                                                // For quarterly format (Q1 2023)\n                                                if (/^Q[1-4]\\s\\d{4}$/.test(value)) {\n                                                    return value.substring(0, 2); // Just \"Q1\", \"Q2\", etc.\n                                                }\n                                                // For month-year format (Jan 2023)\n                                                if (/^[A-Za-z]{3}\\s\\d{4}$/.test(value)) {\n                                                    return value.substring(0, 3); // Just \"Jan\", \"Feb\", etc.\n                                                }\n                                            }\n                                            // For non-date values, format using our helper function\n                                            return formatXAxisLabel(String(value), filterValues);\n                                        }\n                                    }[\"SimpleBarChart.useCallback[renderChartContent]\"],\n                                    tickLabelProps: {\n                                        \"SimpleBarChart.useCallback[renderChartContent]\": ()=>({\n                                                fill: '#6b7280',\n                                                fontSize: 11,\n                                                fontWeight: 300,\n                                                textAnchor: 'middle',\n                                                dy: '0.5em'\n                                            })\n                                    }[\"SimpleBarChart.useCallback[renderChartContent]\"],\n                                    // Ensure first tick doesn't start before origin\n                                    left: 0\n                                }, void 0, false, {\n                                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/SimpleBarChart.tsx\",\n                                    lineNumber: 841,\n                                    columnNumber: 13\n                                }, _this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_visx_axis__WEBPACK_IMPORTED_MODULE_16__[\"default\"], {\n                                    scale: yScale,\n                                    stroke: \"#374151\",\n                                    strokeWidth: 0.5,\n                                    tickStroke: \"transparent\",\n                                    tickLength: 0,\n                                    hideZero: false,\n                                    numTicks: 5,\n                                    tickFormat: {\n                                        \"SimpleBarChart.useCallback[renderChartContent]\": (value)=>formatTickValue(Number(value))\n                                    }[\"SimpleBarChart.useCallback[renderChartContent]\"],\n                                    tickLabelProps: {\n                                        \"SimpleBarChart.useCallback[renderChartContent]\": ()=>({\n                                                fill: '#6b7280',\n                                                fontSize: 11,\n                                                fontWeight: 300,\n                                                letterSpacing: '0.05em',\n                                                textAnchor: 'end',\n                                                dy: '0.33em',\n                                                dx: '-0.25em'\n                                            })\n                                    }[\"SimpleBarChart.useCallback[renderChartContent]\"]\n                                }, void 0, false, {\n                                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/SimpleBarChart.tsx\",\n                                    lineNumber: 910,\n                                    columnNumber: 13\n                                }, _this),\n                                isMultiSeries ? // For multi-series, render bars side by side\n                                chartData.map({\n                                    \"SimpleBarChart.useCallback[renderChartContent]\": (d)=>{\n                                        const x = xScale(d[xKey]) || 0;\n                                        const barWidth = xScale.bandwidth() / yFields.length; // Divide bar width by number of fields\n                                        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((react__WEBPACK_IMPORTED_MODULE_1___default().Fragment), {\n                                            children: yFields.map({\n                                                \"SimpleBarChart.useCallback[renderChartContent]\": (field, i)=>{\n                                                    const value = Number(d[field]) || 0;\n                                                    const barHeight = innerHeight - yScale(value);\n                                                    // Position each field's bar side by side\n                                                    const barX = x + i * barWidth;\n                                                    const barY = innerHeight - barHeight;\n                                                    // Get color for this field\n                                                    const color = typeof barColor === 'object' ? barColor[field] || _app_utils_chartColors__WEBPACK_IMPORTED_MODULE_2__.blue : barColor;\n                                                    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_visx_shape__WEBPACK_IMPORTED_MODULE_17__[\"default\"], {\n                                                        x: barX,\n                                                        y: barY,\n                                                        width: barWidth,\n                                                        height: barHeight,\n                                                        fill: color,\n                                                        opacity: tooltip.visible && tooltip.key === d[xKey] ? 1 : 0.8,\n                                                        rx: 2\n                                                    }, \"bar-\".concat(d[xKey], \"-\").concat(field), false, {\n                                                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/SimpleBarChart.tsx\",\n                                                        lineNumber: 950,\n                                                        columnNumber: 25\n                                                    }, _this);\n                                                }\n                                            }[\"SimpleBarChart.useCallback[renderChartContent]\"])\n                                        }, \"multi-\".concat(d[xKey]), false, {\n                                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/SimpleBarChart.tsx\",\n                                            lineNumber: 938,\n                                            columnNumber: 19\n                                        }, _this);\n                                    }\n                                }[\"SimpleBarChart.useCallback[renderChartContent]\"]) : // For single y-field, render regular bars\n                                chartData.map({\n                                    \"SimpleBarChart.useCallback[renderChartContent]\": (d, i)=>{\n                                        const barX = xScale(d[xKey]) || 0;\n                                        const barWidth = xScale.bandwidth();\n                                        const barHeight = innerHeight - yScale(Number(d[yKey]) || 0);\n                                        const barY = innerHeight - barHeight;\n                                        // Determine bar color based on config\n                                        const color = typeof barColor === 'string' ? barColor : barColor[d[xKey]] || _app_utils_chartColors__WEBPACK_IMPORTED_MODULE_2__.blue;\n                                        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_visx_shape__WEBPACK_IMPORTED_MODULE_17__[\"default\"], {\n                                            x: barX,\n                                            y: barY,\n                                            width: barWidth,\n                                            height: barHeight,\n                                            fill: color,\n                                            opacity: tooltip.visible && tooltip.key === d[xKey] ? 1 : 0.8,\n                                            rx: 2\n                                        }, \"bar-\".concat(i), false, {\n                                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/SimpleBarChart.tsx\",\n                                            lineNumber: 979,\n                                            columnNumber: 19\n                                        }, _this);\n                                    }\n                                }[\"SimpleBarChart.useCallback[renderChartContent]\"])\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/SimpleBarChart.tsx\",\n                            lineNumber: 830,\n                            columnNumber: 11\n                        }, _this)\n                    }, void 0, false, {\n                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/SimpleBarChart.tsx\",\n                        lineNumber: 829,\n                        columnNumber: 9\n                    }, _this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/SimpleBarChart.tsx\",\n                lineNumber: 810,\n                columnNumber: 7\n            }, _this);\n        }\n    }[\"SimpleBarChart.useCallback[renderChartContent]\"], [\n        chartData,\n        xKey,\n        yKey,\n        yFields,\n        barColor,\n        formatTickValue,\n        error,\n        refreshData,\n        tooltip,\n        handleMouseMove,\n        handleMouseLeave,\n        isMultiSeries,\n        filterValues\n    ]);\n    // Update legend items \n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"SimpleBarChart.useEffect\": ()=>{\n            if (chartData.length > 0) {\n                if (isMultiSeries) {\n                    // For multi-series, create a legend item for each y-field\n                    const items = yFields.map({\n                        \"SimpleBarChart.useEffect.items\": (field)=>({\n                                id: field,\n                                label: field,\n                                color: typeof barColor === 'string' ? barColor : barColor[field] || _app_utils_chartColors__WEBPACK_IMPORTED_MODULE_2__.blue\n                            })\n                    }[\"SimpleBarChart.useEffect.items\"]);\n                    setLegendItems(items);\n                } else {\n                    // Single y-field\n                    setLegendItems([\n                        {\n                            id: yKey,\n                            label: yKey,\n                            color: typeof barColor === 'string' ? barColor : _app_utils_chartColors__WEBPACK_IMPORTED_MODULE_2__.blue\n                        }\n                    ]);\n                }\n            }\n        }\n    }[\"SimpleBarChart.useEffect\"], [\n        chartData,\n        yKey,\n        barColor,\n        isMultiSeries,\n        yFields\n    ]);\n    // Render the brush with proper shape reflecting bar values\n    const renderBrushArea = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"SimpleBarChart.useCallback[renderBrushArea]\": function() {\n            let modalView = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;\n            if (!brushData || brushData.length === 0) return null;\n            // For simple chart without filters, we need to customize the brush path\n            const isSimpleChartWithoutFilters = !filterValues || Object.keys(filterValues).length === 0;\n            // Calculate padding to prevent line from extending beyond brush area\n            // Add a small negative padding to keep the line just inside the brush bounds\n            const padding = isSimpleChartWithoutFilters ? -0.5 : 0;\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"h-[18%] w-full mt-2\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app_components_shared_BrushTimeScale__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                    data: brushData,\n                    activeBrushDomain: modalView ? modalBrushDomain : brushDomain,\n                    onBrushChange: modalView ? handleModalBrushChange : handleBrushChange,\n                    onClearBrush: {\n                        \"SimpleBarChart.useCallback[renderBrushArea]\": ()=>{\n                            if (modalView) {\n                                setModalBrushDomain(null);\n                                setIsModalBrushActive(false);\n                                setModalFilteredData([]);\n                            } else {\n                                setBrushDomain(null);\n                                setIsBrushActive(false);\n                                setFilteredData([]);\n                            }\n                        }\n                    }[\"SimpleBarChart.useCallback[renderBrushArea]\"],\n                    getDate: {\n                        \"SimpleBarChart.useCallback[renderBrushArea]\": (d)=>d.date\n                    }[\"SimpleBarChart.useCallback[renderBrushArea]\"],\n                    getValue: {\n                        \"SimpleBarChart.useCallback[renderBrushArea]\": (d)=>{\n                            // For simple charts without filters, ensure we reflect the bar heights\n                            if (isSimpleChartWithoutFilters) {\n                                const idx = d.originalIndex;\n                                if (chartData[idx]) {\n                                    // Use actual value from chart data for better visual representation\n                                    const val = Number(chartData[idx][yKey]) || 0;\n                                    // Ensure the line doesn't touch the base by applying a minimum value\n                                    // This makes the line more visible even for small values\n                                    return Math.max(val, maxValue * 0.05);\n                                }\n                            }\n                            return d.value;\n                        }\n                    }[\"SimpleBarChart.useCallback[renderBrushArea]\"],\n                    lineColor: isSimpleChartWithoutFilters ? \"#3b82f6\" : \"#60a5fa\",\n                    margin: {\n                        top: 10,\n                        right: 15 + padding,\n                        bottom: modalView ? 10 : 20,\n                        left: 40 + padding\n                    },\n                    isModal: modalView,\n                    // Use appropriate curve type based on the chart configuration\n                    curveType: isMultiSeries ? \"catmullRom\" : isSimpleChartWithoutFilters ? \"linear\" : \"monotoneX\",\n                    strokeWidth: isMultiSeries ? 2 : 1.5,\n                    filterValues: modalView ? modalFilterValues : filterValues\n                }, void 0, false, {\n                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/SimpleBarChart.tsx\",\n                    lineNumber: 1034,\n                    columnNumber: 9\n                }, _this)\n            }, void 0, false, {\n                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/SimpleBarChart.tsx\",\n                lineNumber: 1033,\n                columnNumber: 7\n            }, _this);\n        }\n    }[\"SimpleBarChart.useCallback[renderBrushArea]\"], [\n        brushData,\n        modalBrushDomain,\n        brushDomain,\n        handleModalBrushChange,\n        handleBrushChange,\n        setModalBrushDomain,\n        setIsModalBrushActive,\n        setModalFilteredData,\n        setBrushDomain,\n        setIsBrushActive,\n        setFilteredData,\n        chartData,\n        yKey,\n        filterValues,\n        maxValue,\n        isMultiSeries,\n        modalFilterValues\n    ]);\n    // Add back the handleFilterChange function\n    const handleFilterChange = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"SimpleBarChart.useCallback[handleFilterChange]\": (key, value)=>{\n            const updatedFilters = {\n                ...modalFilterValues,\n                [key]: value\n            };\n            // Update local state\n            setModalFilterValues(updatedFilters);\n            // If onFilterChange exists in chartConfig, call it with updated filters\n            if (chartConfig.onFilterChange) {\n                chartConfig.onFilterChange(updatedFilters);\n            }\n        }\n    }[\"SimpleBarChart.useCallback[handleFilterChange]\"], [\n        modalFilterValues,\n        chartConfig\n    ]);\n    // When rendering the chart in expanded mode, use the Modal component\n    if (isExpanded) {\n        var _chartConfig_additionalOptions_filters, _chartConfig_additionalOptions, _chartConfig_additionalOptions_filters_timeFilter_options, _chartConfig_additionalOptions_filters1, _chartConfig_additionalOptions1, _chartConfig_additionalOptions_filters2, _chartConfig_additionalOptions2;\n        // Only render Modal on client-side to prevent hydration errors\n        if (!isClient) {\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"w-full h-full flex items-center justify-center\",\n                children: \"Loading expanded view...\"\n            }, void 0, false, {\n                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/SimpleBarChart.tsx\",\n                lineNumber: 1099,\n                columnNumber: 14\n            }, undefined);\n        }\n        // Render expanded view inside Modal\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app_components_shared_Modal__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n            isOpen: isExpanded,\n            onClose: onCloseExpanded || (()=>{}),\n            title: chartConfig.title || \"Chart View\",\n            subtitle: chartConfig.subtitle,\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"w-full h-[80vh] relative overflow-visible\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"mb-4 flex justify-between items-center\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex items-center space-x-4\",\n                            children: [\n                                ((_chartConfig_additionalOptions = chartConfig.additionalOptions) === null || _chartConfig_additionalOptions === void 0 ? void 0 : (_chartConfig_additionalOptions_filters = _chartConfig_additionalOptions.filters) === null || _chartConfig_additionalOptions_filters === void 0 ? void 0 : _chartConfig_additionalOptions_filters.timeFilter) && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"flex items-center\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app_components_shared_filters_TimeFilter__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n                                        value: (modalFilterValues === null || modalFilterValues === void 0 ? void 0 : modalFilterValues.timeFilter) || chartConfig.additionalOptions.filters.timeFilter.activeValue || 'M',\n                                        onChange: (value)=>handleFilterChange('timeFilter', value),\n                                        options: (_chartConfig_additionalOptions_filters_timeFilter_options = chartConfig.additionalOptions.filters.timeFilter.options) === null || _chartConfig_additionalOptions_filters_timeFilter_options === void 0 ? void 0 : _chartConfig_additionalOptions_filters_timeFilter_options.map((opt)=>({\n                                                value: opt,\n                                                label: opt\n                                            }))\n                                    }, void 0, false, {\n                                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/SimpleBarChart.tsx\",\n                                        lineNumber: 1117,\n                                        columnNumber: 19\n                                    }, undefined)\n                                }, void 0, false, {\n                                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/SimpleBarChart.tsx\",\n                                    lineNumber: 1116,\n                                    columnNumber: 17\n                                }, undefined),\n                                ((_chartConfig_additionalOptions1 = chartConfig.additionalOptions) === null || _chartConfig_additionalOptions1 === void 0 ? void 0 : (_chartConfig_additionalOptions_filters1 = _chartConfig_additionalOptions1.filters) === null || _chartConfig_additionalOptions_filters1 === void 0 ? void 0 : _chartConfig_additionalOptions_filters1.currencyFilter) && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app_components_shared_filters_CurrencyFilter__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n                                    currency: (modalFilterValues === null || modalFilterValues === void 0 ? void 0 : modalFilterValues.currencyFilter) || chartConfig.additionalOptions.filters.currencyFilter.activeValue || 'USD',\n                                    onChange: (value)=>handleFilterChange('currencyFilter', value),\n                                    options: chartConfig.additionalOptions.filters.currencyFilter.options\n                                }, void 0, false, {\n                                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/SimpleBarChart.tsx\",\n                                    lineNumber: 1130,\n                                    columnNumber: 17\n                                }, undefined),\n                                ((_chartConfig_additionalOptions2 = chartConfig.additionalOptions) === null || _chartConfig_additionalOptions2 === void 0 ? void 0 : (_chartConfig_additionalOptions_filters2 = _chartConfig_additionalOptions2.filters) === null || _chartConfig_additionalOptions_filters2 === void 0 ? void 0 : _chartConfig_additionalOptions_filters2.displayModeFilter) && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"flex items-center\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app_components_shared_filters_DisplayModeFilter__WEBPACK_IMPORTED_MODULE_10__[\"default\"], {\n                                        mode: (modalFilterValues === null || modalFilterValues === void 0 ? void 0 : modalFilterValues.displayMode) || chartConfig.additionalOptions.filters.displayModeFilter.activeValue || 'absolute',\n                                        onChange: (value)=>handleFilterChange('displayMode', value)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/SimpleBarChart.tsx\",\n                                        lineNumber: 1141,\n                                        columnNumber: 19\n                                    }, undefined)\n                                }, void 0, false, {\n                                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/SimpleBarChart.tsx\",\n                                    lineNumber: 1140,\n                                    columnNumber: 17\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/SimpleBarChart.tsx\",\n                            lineNumber: 1113,\n                            columnNumber: 13\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/SimpleBarChart.tsx\",\n                        lineNumber: 1112,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"w-full h-px bg-gray-900 mb-4\"\n                    }, void 0, false, {\n                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/SimpleBarChart.tsx\",\n                        lineNumber: 1151,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex h-full\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"w-[90%] h-[90%] pr-3 border-r border-gray-900\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"flex flex-col h-full\",\n                                    children: [\n                                        tooltip.visible && tooltip.items && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"absolute z-50\",\n                                            style: {\n                                                pointerEvents: 'none',\n                                                top: tooltip.top,\n                                                left: tooltip.left\n                                            },\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app_components_shared_ChartTooltip__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                                                title: String(tooltip.key),\n                                                items: tooltip.items,\n                                                left: 0,\n                                                top: 0,\n                                                isModal: true,\n                                                timeFilter: (modalFilterValues === null || modalFilterValues === void 0 ? void 0 : modalFilterValues.timeFilter) || (filterValues === null || filterValues === void 0 ? void 0 : filterValues.timeFilter),\n                                                currencyFilter: (modalFilterValues === null || modalFilterValues === void 0 ? void 0 : modalFilterValues.currencyFilter) || (filterValues === null || filterValues === void 0 ? void 0 : filterValues.currencyFilter)\n                                            }, void 0, false, {\n                                                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/SimpleBarChart.tsx\",\n                                                lineNumber: 1165,\n                                                columnNumber: 21\n                                            }, undefined)\n                                        }, void 0, false, {\n                                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/SimpleBarChart.tsx\",\n                                            lineNumber: 1160,\n                                            columnNumber: 19\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"h-[85%] w-full relative\",\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_visx_responsive__WEBPACK_IMPORTED_MODULE_18__[\"default\"], {\n                                                debounceTime: 10,\n                                                children: (param)=>{\n                                                    let { width: parentWidth, height: parentHeight } = param;\n                                                    return parentWidth > 0 && parentHeight > 0 ? renderChartContent(parentWidth, parentHeight, true) : null;\n                                                }\n                                            }, void 0, false, {\n                                                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/SimpleBarChart.tsx\",\n                                                lineNumber: 1179,\n                                                columnNumber: 19\n                                            }, undefined)\n                                        }, void 0, false, {\n                                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/SimpleBarChart.tsx\",\n                                            lineNumber: 1178,\n                                            columnNumber: 17\n                                        }, undefined),\n                                        brushData.length > 0 ? renderBrushArea(true) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"h-[15%] w-full flex items-center justify-center text-gray-500 text-sm\",\n                                            children: \"No brush data available\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/SimpleBarChart.tsx\",\n                                            lineNumber: 1190,\n                                            columnNumber: 19\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/SimpleBarChart.tsx\",\n                                    lineNumber: 1157,\n                                    columnNumber: 15\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/SimpleBarChart.tsx\",\n                                lineNumber: 1156,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"w-[10%] h-full pl-3 flex flex-col justify-start items-start\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"space-y-2 w-full overflow-y-auto max-h-[600px] [&::-webkit-scrollbar]:w-1.5  [&::-webkit-scrollbar-track]:bg-transparent  [&::-webkit-scrollbar-thumb]:bg-gray-700/40 [&::-webkit-scrollbar-thumb]:rounded-full [&::-webkit-scrollbar-thumb]:hover:bg-gray-600/60 scrollbar-thin scrollbar-track-transparent scrollbar-thumb-gray-700/40\",\n                                    children: legendItems.map((item)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app_components_shared_LegendItem__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                                            label: item.label,\n                                            color: item.color,\n                                            shape: \"square\",\n                                            tooltipText: item.value ? formatValue(item.value) : undefined\n                                        }, item.id, false, {\n                                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/SimpleBarChart.tsx\",\n                                            lineNumber: 1208,\n                                            columnNumber: 19\n                                        }, undefined))\n                                }, void 0, false, {\n                                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/SimpleBarChart.tsx\",\n                                    lineNumber: 1200,\n                                    columnNumber: 15\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/SimpleBarChart.tsx\",\n                                lineNumber: 1198,\n                                columnNumber: 13\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/SimpleBarChart.tsx\",\n                        lineNumber: 1154,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/SimpleBarChart.tsx\",\n                lineNumber: 1110,\n                columnNumber: 9\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/SimpleBarChart.tsx\",\n            lineNumber: 1104,\n            columnNumber: 7\n        }, undefined);\n    }\n    // Render normal view with brush\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"w-full h-full relative\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"h-[85%] w-full\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_visx_responsive__WEBPACK_IMPORTED_MODULE_18__[\"default\"], {\n                    debounceTime: 10,\n                    children: (param)=>{\n                        let { width: parentWidth, height: parentHeight } = param;\n                        return parentWidth > 0 && parentHeight > 0 ? renderChartContent(parentWidth, parentHeight) : null;\n                    }\n                }, void 0, false, {\n                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/SimpleBarChart.tsx\",\n                    lineNumber: 1228,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/SimpleBarChart.tsx\",\n                lineNumber: 1227,\n                columnNumber: 7\n            }, undefined),\n            brushData.length > 0 ? renderBrushArea(false) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"h-[15%] w-full mt-2 flex items-center justify-center text-gray-500 text-sm\",\n                children: \"No brush data available\"\n            }, void 0, false, {\n                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/SimpleBarChart.tsx\",\n                lineNumber: 1238,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/SimpleBarChart.tsx\",\n        lineNumber: 1226,\n        columnNumber: 5\n    }, undefined);\n};\n_s(SimpleBarChart, \"aQKhJ7L40J+zxpcCYM9XZowUueg=\");\n_c1 = SimpleBarChart;\n// Helper function to get unit from YAxisConfig or component prop\nfunction getYAxisUnit(field, defaultUnit) {\n    if (typeof field === 'string') {\n        return defaultUnit;\n    } else if (Array.isArray(field)) {\n        if (field.length === 0) return defaultUnit;\n        return typeof field[0] === 'string' ? defaultUnit : field[0].unit || defaultUnit;\n    } else {\n        return field.unit || defaultUnit;\n    }\n}\n// Helper function to format X-axis tick labels\nconst formatXAxisLabel = (value, filterValues)=>{\n    // Check if the value is a date format (YYYY-MM-DD or similar)\n    const isDateFormat = /^\\d{4}-\\d{2}-\\d{2}/.test(value) || /^\\d{2}\\/\\d{2}\\/\\d{4}/.test(value) || /^\\d{1,2}-[A-Za-z]{3}-\\d{4}/.test(value);\n    if (isDateFormat) {\n        const date = new Date(value);\n        if (!isNaN(date.getTime())) {\n            // Format based on timeFilter\n            if ((filterValues === null || filterValues === void 0 ? void 0 : filterValues.timeFilter) === 'D' || (filterValues === null || filterValues === void 0 ? void 0 : filterValues.timeFilter) === 'W') {\n                return date.toLocaleDateString('en-US', {\n                    month: 'short',\n                    day: 'numeric'\n                });\n            } else if ((filterValues === null || filterValues === void 0 ? void 0 : filterValues.timeFilter) === 'M') {\n                return date.toLocaleDateString('en-US', {\n                    month: 'short'\n                });\n            } else if ((filterValues === null || filterValues === void 0 ? void 0 : filterValues.timeFilter) === 'Q') {\n                const quarter = Math.floor(date.getMonth() / 3) + 1;\n                return \"Q\".concat(quarter);\n            } else if ((filterValues === null || filterValues === void 0 ? void 0 : filterValues.timeFilter) === 'Y') {\n                return date.getFullYear().toString();\n            }\n            // Default format if timeFilter is not specified\n            return date.toLocaleDateString('en-US', {\n                month: 'short',\n                day: 'numeric'\n            });\n        }\n    }\n    // For quarter format (Q1, Q2, etc.)\n    if (/^Q[1-4]\\s\\d{4}$/.test(value)) {\n        return value.substring(0, 2); // Just \"Q1\", \"Q2\", etc.\n    }\n    // For month-year format (Jan 2023)\n    if (/^[A-Za-z]{3}\\s\\d{4}$/.test(value)) {\n        return value.substring(0, 3); // Just \"Jan\", \"Feb\", etc.\n    }\n    // Don't shorten other values that are already short\n    if (value.length <= 5) {\n        return value;\n    }\n    // For other longer text, truncate with ellipsis\n    return \"\".concat(value.substring(0, 3), \"...\");\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (/*#__PURE__*/_c2 = react__WEBPACK_IMPORTED_MODULE_1___default().memo(SimpleBarChart));\nvar _c, _c1, _c2;\n$RefreshReg$(_c, \"RefreshIcon\");\n$RefreshReg$(_c1, \"SimpleBarChart\");\n$RefreshReg$(_c2, \"%default%\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/admin/components/charts/SimpleBarChart.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/admin/components/charts/StackedBarChart.tsx":
/*!*********************************************************!*\
  !*** ./app/admin/components/charts/StackedBarChart.tsx ***!
  \*********************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _visx_responsive__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @visx/responsive */ \"(app-pages-browser)/./node_modules/@visx/responsive/esm/components/ParentSize.js\");\n/* harmony import */ var _visx_group__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @visx/group */ \"(app-pages-browser)/./node_modules/@visx/group/esm/Group.js\");\n/* harmony import */ var _visx_grid__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @visx/grid */ \"(app-pages-browser)/./node_modules/@visx/grid/esm/grids/GridRows.js\");\n/* harmony import */ var _visx_scale__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @visx/scale */ \"(app-pages-browser)/./node_modules/@visx/scale/esm/scales/band.js\");\n/* harmony import */ var _visx_scale__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @visx/scale */ \"(app-pages-browser)/./node_modules/@visx/scale/esm/scales/linear.js\");\n/* harmony import */ var _visx_scale__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @visx/scale */ \"(app-pages-browser)/./node_modules/@visx/scale/esm/scales/ordinal.js\");\n/* harmony import */ var _visx_axis__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @visx/axis */ \"(app-pages-browser)/./node_modules/@visx/axis/esm/axis/AxisBottom.js\");\n/* harmony import */ var _visx_axis__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @visx/axis */ \"(app-pages-browser)/./node_modules/@visx/axis/esm/axis/AxisLeft.js\");\n/* harmony import */ var _visx_shape__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @visx/shape */ \"(app-pages-browser)/./node_modules/@visx/shape/esm/shapes/Bar.js\");\n/* harmony import */ var _app_utils_chartColors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/app/utils/chartColors */ \"(app-pages-browser)/./app/utils/chartColors.ts\");\n/* harmony import */ var _app_components_shared_ChartTooltip__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/app/components/shared/ChartTooltip */ \"(app-pages-browser)/./app/components/shared/ChartTooltip.tsx\");\n/* harmony import */ var _app_components_shared_buttons_ButtonSecondary__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/app/components/shared/buttons/ButtonSecondary */ \"(app-pages-browser)/./app/components/shared/buttons/ButtonSecondary.tsx\");\n/* harmony import */ var _app_components_shared_LegendItem__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/app/components/shared/LegendItem */ \"(app-pages-browser)/./app/components/shared/LegendItem.tsx\");\n/* harmony import */ var _app_components_shared_BrushTimeScale__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/app/components/shared/BrushTimeScale */ \"(app-pages-browser)/./app/components/shared/BrushTimeScale.tsx\");\n/* harmony import */ var _app_components_shared_Modal__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @/app/components/shared/Modal */ \"(app-pages-browser)/./app/components/shared/Modal.tsx\");\n/* harmony import */ var _app_components_shared_filters_TimeFilter__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @/app/components/shared/filters/TimeFilter */ \"(app-pages-browser)/./app/components/shared/filters/TimeFilter.tsx\");\n/* harmony import */ var _app_components_shared_filters_CurrencyFilter__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @/app/components/shared/filters/CurrencyFilter */ \"(app-pages-browser)/./app/components/shared/filters/CurrencyFilter.tsx\");\n/* harmony import */ var _app_components_shared_filters_DisplayModeFilter__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @/app/components/shared/filters/DisplayModeFilter */ \"(app-pages-browser)/./app/components/shared/filters/DisplayModeFilter.tsx\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Define RefreshIcon component\nconst RefreshIcon = (param)=>{\n    let { className = \"w-4 h-4\" } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n        className: className,\n        fill: \"none\",\n        stroke: \"currentColor\",\n        viewBox: \"0 0 24 24\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n        }, void 0, false, {\n            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/StackedBarChart.tsx\",\n            lineNumber: 30,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/StackedBarChart.tsx\",\n        lineNumber: 23,\n        columnNumber: 5\n    }, undefined);\n};\n_c = RefreshIcon;\nconst StackedBarChart = (param)=>{\n    let { chartConfig, data, width = 500, height = 300, isExpanded = false, onCloseExpanded, colorMap: externalColorMap, filterValues, yAxisUnit } = param;\n    var _this = undefined;\n    _s();\n    const chartRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const modalChartRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [legendItems, setLegendItems] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    // Brush state\n    const [isBrushActive, setIsBrushActive] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [brushDomain, setBrushDomain] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    // Filtered data based on brush\n    const [filteredData, setFilteredData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    // Modal-specific filtered data\n    const [modalFilteredData, setModalFilteredData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    // Update tooltip state definition\n    const [tooltip, setTooltip] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        visible: false,\n        left: 0,\n        top: 0,\n        key: '',\n        items: []\n    });\n    // Modal brush state\n    const [isModalBrushActive, setIsModalBrushActive] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [modalBrushDomain, setModalBrushDomain] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    // Add state for filter values in modal\n    const [modalFilterValues, setModalFilterValues] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(filterValues || {});\n    // Add state to track client-side rendering\n    const [isClient, setIsClient] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Add display mode to state\n    const [displayMode, setDisplayMode] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('absolute');\n    // Extract mapping fields\n    const xField = chartConfig.dataMapping.xAxis;\n    const yField = chartConfig.dataMapping.yAxis;\n    const groupByField = chartConfig.dataMapping.groupBy || '';\n    // For type safety, ensure we use string values for indexing\n    const xKey = typeof xField === 'string' ? xField : xField[0];\n    // Helper function to get field from YAxisConfig or use string directly\n    const getYAxisField = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"StackedBarChart.useCallback[getYAxisField]\": (field)=>{\n            return typeof field === 'string' ? field : field.field;\n        }\n    }[\"StackedBarChart.useCallback[getYAxisField]\"], []);\n    // Get actual y-field name to use for data extraction\n    const yKey = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"StackedBarChart.useMemo[yKey]\": ()=>{\n            if (typeof yField === 'string') {\n                return yField;\n            } else if (Array.isArray(yField) && yField.length > 0) {\n                // Get the first y-field if it's an array\n                return getYAxisField(yField[0]);\n            }\n            return '';\n        }\n    }[\"StackedBarChart.useMemo[yKey]\"], [\n        yField,\n        getYAxisField\n    ]);\n    // Get all y-field names when stacked chart with multiple y fields\n    const allYFields = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"StackedBarChart.useMemo[allYFields]\": ()=>{\n            if (typeof yField === 'string') {\n                return [\n                    yField\n                ];\n            } else if (Array.isArray(yField)) {\n                return yField.map({\n                    \"StackedBarChart.useMemo[allYFields]\": (field)=>getYAxisField(field)\n                }[\"StackedBarChart.useMemo[allYFields]\"]);\n            }\n            return [];\n        }\n    }[\"StackedBarChart.useMemo[allYFields]\"], [\n        yField,\n        getYAxisField\n    ]);\n    // Set isClient to true when component mounts in browser\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"StackedBarChart.useEffect\": ()=>{\n            setIsClient(true);\n        }\n    }[\"StackedBarChart.useEffect\"], []);\n    // Format value for tooltip\n    const formatValue = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"StackedBarChart.useCallback[formatValue]\": (value, unit)=>{\n            // Add null/undefined check\n            if (value === undefined || value === null) {\n                return '0.00';\n            }\n            // Handle percentage mode\n            if (displayMode === 'percent') {\n                return \"\".concat(value.toFixed(1), \"%\");\n            }\n            // Get the unit symbol (use component prop as fallback)\n            const unitSymbol = unit || yAxisUnit || '';\n            const isUnitPrefix = unitSymbol && unitSymbol !== '%' && unitSymbol !== 'SOL'; // Most units are prefixed, but some go after\n            // Format with appropriate scale\n            let formattedValue;\n            if (value >= 1000000000) {\n                formattedValue = \"\".concat((value / 1000000000).toFixed(2), \"B\");\n            } else if (value >= 1000000) {\n                formattedValue = \"\".concat((value / 1000000).toFixed(2), \"M\");\n            } else if (value >= 1000) {\n                formattedValue = \"\".concat((value / 1000).toFixed(2), \"K\");\n            } else {\n                formattedValue = value.toFixed(2);\n            }\n            // Return with correct unit placement (or no unit if not specified)\n            if (!unitSymbol) return formattedValue;\n            return isUnitPrefix ? \"\".concat(unitSymbol).concat(formattedValue) : \"\".concat(formattedValue, \"\\xa0\").concat(unitSymbol);\n        }\n    }[\"StackedBarChart.useCallback[formatValue]\"], [\n        yAxisUnit,\n        displayMode\n    ]);\n    // Format y-axis tick value with appropriate units\n    const formatTickValue = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"StackedBarChart.useCallback[formatTickValue]\": (value)=>{\n            if (displayMode === 'percent') {\n                return \"\".concat(value.toFixed(0), \"%\");\n            }\n            if (value === 0) return '0';\n            if (value >= 1000000000) {\n                const formattedValue = (value / 1000000000).toFixed(1);\n                return formattedValue.endsWith('.0') ? \"\".concat(formattedValue.slice(0, -2), \"B\") : \"\".concat(formattedValue, \"B\");\n            } else if (value >= 1000000) {\n                const formattedValue = (value / 1000000).toFixed(1);\n                return formattedValue.endsWith('.0') ? \"\".concat(formattedValue.slice(0, -2), \"M\") : \"\".concat(formattedValue, \"M\");\n            } else if (value >= 1000) {\n                const formattedValue = (value / 1000).toFixed(1);\n                return formattedValue.endsWith('.0') ? \"\".concat(formattedValue.slice(0, -2), \"K\") : \"\".concat(formattedValue, \"K\");\n            } else {\n                return value.toFixed(0);\n            }\n        }\n    }[\"StackedBarChart.useCallback[formatTickValue]\"], [\n        displayMode\n    ]);\n    // Update modal filters when component receives new filter values\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"StackedBarChart.useEffect\": ()=>{\n            if (filterValues) {\n                setModalFilterValues(filterValues);\n                // Extract display mode from filter values if available\n                if (filterValues['displayMode']) {\n                    setDisplayMode(filterValues['displayMode']);\n                }\n            }\n        }\n    }[\"StackedBarChart.useEffect\"], [\n        filterValues\n    ]);\n    // Enhanced filter change handler for modal\n    const handleModalFilterChange = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"StackedBarChart.useCallback[handleModalFilterChange]\": (key, value)=>{\n            console.log(\"Modal filter changed: \".concat(key, \" = \").concat(value));\n            // Update display mode state if that's what changed\n            if (key === 'displayMode') {\n                setDisplayMode(value);\n            }\n            const updatedFilters = {\n                ...modalFilterValues,\n                [key]: value\n            };\n            // Update local state\n            setModalFilterValues(updatedFilters);\n            // If onFilterChange exists in chartConfig, call it with updated filters\n            if (chartConfig.onFilterChange) {\n                chartConfig.onFilterChange(updatedFilters);\n            }\n        }\n    }[\"StackedBarChart.useCallback[handleModalFilterChange]\"], [\n        modalFilterValues,\n        chartConfig\n    ]);\n    // Handle filter changes - for both modal and normal view\n    const handleFilterChange = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"StackedBarChart.useCallback[handleFilterChange]\": (key, value)=>{\n            // For modal-specific behavior, use the enhanced handler\n            if (isExpanded) {\n                return handleModalFilterChange(key, value);\n            }\n            console.log(\"Filter changed: \".concat(key, \" = \").concat(value));\n            // Update display mode state if that's what changed\n            if (key === 'displayMode') {\n                setDisplayMode(value);\n            }\n            const updatedFilters = {\n                ...modalFilterValues,\n                [key]: value\n            };\n            // Update local state\n            setModalFilterValues(updatedFilters);\n            // If onFilterChange exists in chartConfig, call it with updated filters\n            if (chartConfig.onFilterChange) {\n                chartConfig.onFilterChange(updatedFilters);\n            }\n        }\n    }[\"StackedBarChart.useCallback[handleFilterChange]\"], [\n        modalFilterValues,\n        chartConfig,\n        isExpanded,\n        handleModalFilterChange\n    ]);\n    // Placeholder for refresh data functionality\n    const refreshData = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"StackedBarChart.useCallback[refreshData]\": ()=>{\n            // If onFilterChange exists in chartConfig, call it with current filters\n            if (chartConfig.onFilterChange) {\n                chartConfig.onFilterChange(filterValues || {});\n            }\n            setError(null);\n        }\n    }[\"StackedBarChart.useCallback[refreshData]\"], [\n        filterValues,\n        chartConfig\n    ]);\n    // Process data for the chart - use filtered data when available\n    const { chartData, keys, groupColors } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"StackedBarChart.useMemo\": ()=>{\n            // Use appropriate filtered data depending on context\n            const currentData = isExpanded && isModalBrushActive && modalFilteredData.length > 0 ? modalFilteredData : !isExpanded && isBrushActive && filteredData.length > 0 ? filteredData : data;\n            if (isExpanded) {\n                console.log('Modal chart data source:', isModalBrushActive && modalFilteredData.length > 0 ? 'modal filtered data' : 'full data', 'Count:', currentData.length);\n            }\n            // If no data is available, return empty defaults\n            if (!currentData || currentData.length === 0) {\n                return {\n                    chartData: [],\n                    keys: [],\n                    groupColors: {}\n                };\n            }\n            // Use external color map if available\n            const preferredColorMap = externalColorMap || {};\n            // Filter data first\n            const processedData = currentData.filter({\n                \"StackedBarChart.useMemo.processedData\": (d)=>d[xKey] !== undefined && d[xKey] !== null\n            }[\"StackedBarChart.useMemo.processedData\"]);\n            // Sort by date if applicable\n            if (processedData.length > 0) {\n                // Detect if data contains dates\n                const isDateField = typeof processedData[0][xKey] === 'string' && (processedData[0][xKey].match(/^\\d{4}-\\d{2}-\\d{2}/) || /^\\w+\\s\\d{4}$/.test(processedData[0][xKey]) || /^\\d{4}$/.test(processedData[0][xKey]));\n                if (isDateField) {\n                    // Sort dates chronologically (oldest to newest)\n                    processedData.sort({\n                        \"StackedBarChart.useMemo\": (a, b)=>{\n                            const dateA = new Date(a[xKey]);\n                            const dateB = new Date(b[xKey]);\n                            return dateA.getTime() - dateB.getTime();\n                        }\n                    }[\"StackedBarChart.useMemo\"]);\n                }\n            }\n            // Check if we have multiple Y-axis fields with stacked mode\n            const isMultiYFieldsStacked = Array.isArray(yField) && yField.length > 1 && chartConfig.isStacked;\n            // If we have multiple Y fields and stacked mode is enabled\n            if (isMultiYFieldsStacked) {\n                console.log('Processing multi-y-field stacked chart');\n                // Get all y-fields as keys for stacking\n                const stackKeys = Array.isArray(yField) ? yField.map({\n                    \"StackedBarChart.useMemo\": (field)=>typeof field === 'string' ? field : field.field\n                }[\"StackedBarChart.useMemo\"]) : [\n                    yKey\n                ];\n                // Group by x-axis values to prevent duplicate x values\n                const groupedData = {};\n                processedData.forEach({\n                    \"StackedBarChart.useMemo\": (item)=>{\n                        const xValue = String(item[xKey]);\n                        if (!groupedData[xValue]) {\n                            // Initialize with x value and all stack keys with 0\n                            groupedData[xValue] = {\n                                [xKey]: item[xKey]\n                            };\n                            // Initialize all stack keys with 0\n                            stackKeys.forEach({\n                                \"StackedBarChart.useMemo\": (key)=>{\n                                    groupedData[xValue][key] = 0;\n                                }\n                            }[\"StackedBarChart.useMemo\"]);\n                        }\n                        // Update values for all y-fields that exist in this item\n                        stackKeys.forEach({\n                            \"StackedBarChart.useMemo\": (key)=>{\n                                if (item[key] !== undefined && item[key] !== null) {\n                                    const value = Number(item[key]) || 0;\n                                    groupedData[xValue][key] = (groupedData[xValue][key] || 0) + value;\n                                }\n                            }\n                        }[\"StackedBarChart.useMemo\"]);\n                    }\n                }[\"StackedBarChart.useMemo\"]);\n                // For percentage mode, we need to convert values to percentages\n                if (displayMode === 'percent') {\n                    Object.keys(groupedData).forEach({\n                        \"StackedBarChart.useMemo\": (xValue)=>{\n                            // Calculate the total for this x value\n                            const total = stackKeys.reduce({\n                                \"StackedBarChart.useMemo.total\": (sum, key)=>sum + (groupedData[xValue][key] || 0)\n                            }[\"StackedBarChart.useMemo.total\"], 0);\n                            if (total > 0) {\n                                // Convert each value to percentage\n                                stackKeys.forEach({\n                                    \"StackedBarChart.useMemo\": (key)=>{\n                                        groupedData[xValue][key] = groupedData[xValue][key] / total * 100;\n                                    }\n                                }[\"StackedBarChart.useMemo\"]);\n                            }\n                        }\n                    }[\"StackedBarChart.useMemo\"]);\n                }\n                // Create color map for each y-field\n                const colorsByField = {};\n                stackKeys.forEach({\n                    \"StackedBarChart.useMemo\": (field, i)=>{\n                        colorsByField[field] = preferredColorMap[field] || (0,_app_utils_chartColors__WEBPACK_IMPORTED_MODULE_2__.getColorByIndex)(i % _app_utils_chartColors__WEBPACK_IMPORTED_MODULE_2__.allColorsArray.length);\n                    }\n                }[\"StackedBarChart.useMemo\"]);\n                return {\n                    chartData: Object.values(groupedData),\n                    keys: stackKeys,\n                    groupColors: colorsByField\n                };\n            }\n            // Standard processing for group-by stacking (original logic)\n            // Group by x-axis values to prevent duplicate bars\n            const groupedData = {};\n            const groupedValues = {};\n            const allGroups = new Set();\n            // First pass: collect all unique groups and x values\n            processedData.forEach({\n                \"StackedBarChart.useMemo\": (item)=>{\n                    const xValue = String(item[xKey]);\n                    const groupValue = String(item[groupByField]);\n                    // Track all unique group values\n                    allGroups.add(groupValue);\n                    // Initialize the grouped data structure for this x value\n                    if (!groupedData[xValue]) {\n                        groupedData[xValue] = {\n                            [xKey]: item[xKey]\n                        };\n                        groupedValues[xValue] = {};\n                    }\n                    // Sum values for the same x value and group\n                    const currentValue = Number(item[yKey]) || 0;\n                    groupedValues[xValue][groupValue] = (groupedValues[xValue][groupValue] || 0) + currentValue;\n                }\n            }[\"StackedBarChart.useMemo\"]);\n            // Second pass: build the final data structure\n            Object.keys(groupedData).forEach({\n                \"StackedBarChart.useMemo\": (xValue)=>{\n                    // Make sure each group has a value (even if zero)\n                    allGroups.forEach({\n                        \"StackedBarChart.useMemo\": (group)=>{\n                            groupedData[xValue][group] = groupedValues[xValue][group] || 0;\n                        }\n                    }[\"StackedBarChart.useMemo\"]);\n                }\n            }[\"StackedBarChart.useMemo\"]);\n            // For percentage mode, convert values to percentages\n            if (displayMode === 'percent') {\n                Object.keys(groupedData).forEach({\n                    \"StackedBarChart.useMemo\": (xValue)=>{\n                        // Calculate the total for this x value\n                        const total = Array.from(allGroups).reduce({\n                            \"StackedBarChart.useMemo.total\": (sum, group)=>sum + (groupedData[xValue][group] || 0)\n                        }[\"StackedBarChart.useMemo.total\"], 0);\n                        if (total > 0) {\n                            // Convert each value to percentage\n                            allGroups.forEach({\n                                \"StackedBarChart.useMemo\": (group)=>{\n                                    groupedData[xValue][group] = groupedData[xValue][group] / total * 100;\n                                }\n                            }[\"StackedBarChart.useMemo\"]);\n                        }\n                    }\n                }[\"StackedBarChart.useMemo\"]);\n            }\n            // Convert to array\n            const uniqueProcessedData = Object.values(groupedData);\n            // Get all unique group values as keys for the stack\n            const stackKeys = Array.from(allGroups);\n            console.log(\"Found \".concat(stackKeys.length, \" groups for stacking:\"), stackKeys);\n            // Create color map for each group\n            const colorsByGroup = {};\n            stackKeys.forEach({\n                \"StackedBarChart.useMemo\": (group, i)=>{\n                    colorsByGroup[group] = preferredColorMap[group] || (0,_app_utils_chartColors__WEBPACK_IMPORTED_MODULE_2__.getColorByIndex)(i % _app_utils_chartColors__WEBPACK_IMPORTED_MODULE_2__.allColorsArray.length);\n                }\n            }[\"StackedBarChart.useMemo\"]);\n            return {\n                chartData: uniqueProcessedData,\n                keys: stackKeys,\n                groupColors: colorsByGroup\n            };\n        }\n    }[\"StackedBarChart.useMemo\"], [\n        data,\n        filteredData,\n        modalFilteredData,\n        isBrushActive,\n        isModalBrushActive,\n        xKey,\n        yKey,\n        yField,\n        groupByField,\n        externalColorMap,\n        isExpanded,\n        chartConfig,\n        displayMode\n    ]);\n    // Handle mouse move for tooltips\n    const handleMouseMove = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"StackedBarChart.useCallback[handleMouseMove]\": function(e) {\n            let isModal = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n            var _containerRef_current;\n            const containerRef = isModal ? modalChartRef : chartRef;\n            const rect = (_containerRef_current = containerRef.current) === null || _containerRef_current === void 0 ? void 0 : _containerRef_current.getBoundingClientRect();\n            if (!rect) return;\n            // Get mouse position - use client coordinates for consistency\n            const mouseX = e.clientX - rect.left;\n            const mouseY = e.clientY - rect.top;\n            // Use current data based on brush state\n            const currentData = isModal ? isModalBrushActive && modalFilteredData.length > 0 ? modalFilteredData : data : isBrushActive && filteredData.length > 0 ? filteredData : data;\n            // Check if we have data to work with\n            if (currentData.length === 0 || !keys || keys.length === 0) return;\n            // Calculate available chart space\n            const margin = {\n                top: 10,\n                right: 15,\n                bottom: 30,\n                left: 40\n            };\n            const innerWidth = rect.width - margin.left - margin.right;\n            // Adjust mouseX to account for margin\n            const adjustedMouseX = mouseX - margin.left;\n            // Early exit if mouse is outside the chart area\n            if (adjustedMouseX < 0 || adjustedMouseX > innerWidth) {\n                if (tooltip.visible) {\n                    setTooltip({\n                        \"StackedBarChart.useCallback[handleMouseMove]\": (prev)=>({\n                                ...prev,\n                                visible: false\n                            })\n                    }[\"StackedBarChart.useCallback[handleMouseMove]\"]);\n                }\n                return;\n            }\n            // Calculate bar width and find closest bar\n            const barWidth = innerWidth / chartData.length;\n            const barIndex = Math.floor(adjustedMouseX / barWidth);\n            // Validate the index\n            if (barIndex < 0 || barIndex >= chartData.length) {\n                if (tooltip.visible) {\n                    setTooltip({\n                        \"StackedBarChart.useCallback[handleMouseMove]\": (prev)=>({\n                                ...prev,\n                                visible: false\n                            })\n                    }[\"StackedBarChart.useCallback[handleMouseMove]\"]);\n                }\n                return;\n            }\n            // Get the data point at this index\n            const dataPoint = chartData[barIndex];\n            if (!dataPoint) {\n                if (tooltip.visible) {\n                    setTooltip({\n                        \"StackedBarChart.useCallback[handleMouseMove]\": (prev)=>({\n                                ...prev,\n                                visible: false\n                            })\n                    }[\"StackedBarChart.useCallback[handleMouseMove]\"]);\n                }\n                return;\n            }\n            const xValue = dataPoint[xKey];\n            // Calculate tooltip position - always follow mouse in both normal and modal views\n            const tooltipLeft = mouseX;\n            const tooltipTop = Math.max(mouseY - 10, 10);\n            // Only update if showing a new x-value or hiding previous one\n            if (!tooltip.visible || tooltip.key !== xValue) {\n                // Check if we're using multi-y-field stacking (each y-field is a stack key)\n                const isMultiYFieldsStacked = Array.isArray(yField) && yField.length > 1 && chartConfig.isStacked;\n                // Create tooltip items for all non-zero values in the stack\n                const tooltipItems = keys.filter({\n                    \"StackedBarChart.useCallback[handleMouseMove].tooltipItems\": (key)=>Number(dataPoint[key]) > 0\n                }[\"StackedBarChart.useCallback[handleMouseMove].tooltipItems\"]) // Only include groups/fields with values\n                .map({\n                    \"StackedBarChart.useCallback[handleMouseMove].tooltipItems\": (key)=>({\n                            label: key,\n                            value: formatValue(Number(dataPoint[key]) || 0),\n                            color: groupColors[key] || _app_utils_chartColors__WEBPACK_IMPORTED_MODULE_2__.blue,\n                            shape: 'square'\n                        })\n                }[\"StackedBarChart.useCallback[handleMouseMove].tooltipItems\"]);\n                // Sort tooltip items by value (descending)\n                tooltipItems.sort({\n                    \"StackedBarChart.useCallback[handleMouseMove]\": (a, b)=>{\n                        const aVal = typeof a.value === 'number' ? a.value : Number(String(a.value).replace(/[^0-9.-]+/g, ''));\n                        const bVal = typeof b.value === 'number' ? b.value : Number(String(b.value).replace(/[^0-9.-]+/g, ''));\n                        return bVal - aVal;\n                    }\n                }[\"StackedBarChart.useCallback[handleMouseMove]\"]);\n                // Update the tooltip\n                setTooltip({\n                    visible: true,\n                    key: xValue,\n                    items: tooltipItems,\n                    left: tooltipLeft,\n                    top: tooltipTop\n                });\n            } else {\n                // If tooltip content isn't changing, just update position\n                setTooltip({\n                    \"StackedBarChart.useCallback[handleMouseMove]\": (prev)=>({\n                            ...prev,\n                            left: tooltipLeft,\n                            top: tooltipTop\n                        })\n                }[\"StackedBarChart.useCallback[handleMouseMove]\"]);\n            }\n        }\n    }[\"StackedBarChart.useCallback[handleMouseMove]\"], [\n        data,\n        filteredData,\n        modalFilteredData,\n        isBrushActive,\n        isModalBrushActive,\n        xKey,\n        yField,\n        chartConfig,\n        keys,\n        groupColors,\n        chartData,\n        formatValue,\n        tooltip.visible,\n        tooltip.key,\n        tooltip.items\n    ]);\n    // Handle mouse leave\n    const handleMouseLeave = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"StackedBarChart.useCallback[handleMouseLeave]\": ()=>{\n            if (tooltip.visible) {\n                setTooltip({\n                    \"StackedBarChart.useCallback[handleMouseLeave]\": (prev)=>({\n                            ...prev,\n                            visible: false\n                        })\n                }[\"StackedBarChart.useCallback[handleMouseLeave]\"]);\n            }\n        }\n    }[\"StackedBarChart.useCallback[handleMouseLeave]\"], [\n        tooltip.visible\n    ]);\n    // Helper function to format X-axis tick labels\n    const formatXAxisLabel = (value)=>{\n        // Check if the value is a date format (YYYY-MM-DD or similar)\n        const isDateFormat = /^\\d{4}-\\d{2}-\\d{2}/.test(value) || /^\\d{2}\\/\\d{2}\\/\\d{4}/.test(value) || /^\\d{1,2}-[A-Za-z]{3}-\\d{4}/.test(value);\n        if (isDateFormat) {\n            const date = new Date(value);\n            if (!isNaN(date.getTime())) {\n                // Format based on timeFilter\n                if ((filterValues === null || filterValues === void 0 ? void 0 : filterValues.timeFilter) === 'D' || (filterValues === null || filterValues === void 0 ? void 0 : filterValues.timeFilter) === 'W') {\n                    return date.toLocaleDateString('en-US', {\n                        month: 'short',\n                        day: 'numeric'\n                    });\n                } else if ((filterValues === null || filterValues === void 0 ? void 0 : filterValues.timeFilter) === 'M') {\n                    return date.toLocaleDateString('en-US', {\n                        month: 'short'\n                    });\n                } else if ((filterValues === null || filterValues === void 0 ? void 0 : filterValues.timeFilter) === 'Q') {\n                    const quarter = Math.floor(date.getMonth() / 3) + 1;\n                    return \"Q\".concat(quarter);\n                } else if ((filterValues === null || filterValues === void 0 ? void 0 : filterValues.timeFilter) === 'Y') {\n                    return date.getFullYear().toString();\n                }\n                // Default format if no timeFilter is specified\n                return date.toLocaleDateString('en-US', {\n                    month: 'short',\n                    day: 'numeric'\n                });\n            }\n        }\n        // For quarter format (Q1, Q2, etc.)\n        if (/^Q[1-4]\\s\\d{4}$/.test(value)) {\n            return value.substring(0, 2); // Just \"Q1\", \"Q2\", etc.\n        }\n        // For month-year format (Jan 2023)\n        if (/^[A-Za-z]{3}\\s\\d{4}$/.test(value)) {\n            return value.substring(0, 3); // Just \"Jan\", \"Feb\", etc.\n        }\n        // Don't shorten other values that are already short\n        if (value.length <= 5) {\n            return value;\n        }\n        // For other longer text, truncate with ellipsis\n        return \"\".concat(value.substring(0, 3), \"...\");\n    };\n    // Render chart content\n    const renderChartContent = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"StackedBarChart.useCallback[renderChartContent]\": function(chartWidth, chartHeight) {\n            let isModal = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;\n            // Show error state or no data\n            if (error || chartData.length === 0 || !keys || keys.length === 0) {\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex flex-col justify-center items-center h-full\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-gray-400/80 text-xs mb-2\",\n                            children: error || 'No data available'\n                        }, void 0, false, {\n                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/StackedBarChart.tsx\",\n                            lineNumber: 632,\n                            columnNumber: 11\n                        }, _this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app_components_shared_buttons_ButtonSecondary__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                            onClick: refreshData,\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex items-center gap-1.5\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(RefreshIcon, {\n                                        className: \"w-3.5 h-3.5\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/StackedBarChart.tsx\",\n                                        lineNumber: 635,\n                                        columnNumber: 15\n                                    }, _this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        children: \"Refresh\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/StackedBarChart.tsx\",\n                                        lineNumber: 636,\n                                        columnNumber: 15\n                                    }, _this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/StackedBarChart.tsx\",\n                                lineNumber: 634,\n                                columnNumber: 13\n                            }, _this)\n                        }, void 0, false, {\n                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/StackedBarChart.tsx\",\n                            lineNumber: 633,\n                            columnNumber: 11\n                        }, _this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/StackedBarChart.tsx\",\n                    lineNumber: 631,\n                    columnNumber: 9\n                }, _this);\n            }\n            // Define margins for chart\n            const margin = {\n                top: 10,\n                right: 15,\n                bottom: 30,\n                left: 40\n            };\n            const innerWidth = chartWidth - margin.left - margin.right;\n            const innerHeight = chartHeight - margin.top - margin.bottom;\n            if (innerWidth <= 0 || innerHeight <= 0) return null;\n            // Create scales\n            const xScale = (0,_visx_scale__WEBPACK_IMPORTED_MODULE_11__[\"default\"])({\n                domain: chartData.map({\n                    \"StackedBarChart.useCallback[renderChartContent].xScale\": (d)=>d[xKey]\n                }[\"StackedBarChart.useCallback[renderChartContent].xScale\"]),\n                range: [\n                    0,\n                    innerWidth\n                ],\n                padding: 0.2\n            });\n            // Calculate the max value for the y-axis (sum of stacked values)\n            const yMax = Math.max(...chartData.map({\n                \"StackedBarChart.useCallback[renderChartContent].yMax\": (d)=>{\n                    // Sum all values in the stack\n                    return keys.reduce({\n                        \"StackedBarChart.useCallback[renderChartContent].yMax\": (total, key)=>total + (Number(d[key]) || 0)\n                    }[\"StackedBarChart.useCallback[renderChartContent].yMax\"], 0);\n                }\n            }[\"StackedBarChart.useCallback[renderChartContent].yMax\"]), 1 // Ensure minimum of 1 to avoid scaling issues\n            );\n            const yScale = (0,_visx_scale__WEBPACK_IMPORTED_MODULE_12__[\"default\"])({\n                domain: [\n                    0,\n                    displayMode === 'percent' ? 100 : yMax * 1.1\n                ],\n                range: [\n                    innerHeight,\n                    0\n                ],\n                nice: true,\n                clamp: true\n            });\n            // Color scale for groups\n            const colorScale = (0,_visx_scale__WEBPACK_IMPORTED_MODULE_13__[\"default\"])({\n                domain: keys,\n                range: keys.map({\n                    \"StackedBarChart.useCallback[renderChartContent].colorScale\": (key)=>groupColors[key] || _app_utils_chartColors__WEBPACK_IMPORTED_MODULE_2__.blue\n                }[\"StackedBarChart.useCallback[renderChartContent].colorScale\"])\n            });\n            // Use all X-axis values for tick labels, but limit date ticks to 8 max\n            const xTickValues = ({\n                \"StackedBarChart.useCallback[renderChartContent].xTickValues\": ()=>{\n                    // Check if the data contains dates\n                    const isDateData = chartData.length > 0 && typeof chartData[0][xKey] === 'string' && (/^\\d{4}-\\d{2}-\\d{2}/.test(chartData[0][xKey]) || /^\\d{2}\\/\\d{2}\\/\\d{4}/.test(chartData[0][xKey]) || /^\\d{1,2}-[A-Za-z]{3}-\\d{4}/.test(chartData[0][xKey]) || /^[A-Za-z]{3}\\s\\d{4}$/.test(chartData[0][xKey]) || /^\\d{4}$/.test(chartData[0][xKey]));\n                    // For date data, limit to 8 ticks maximum\n                    if (isDateData && chartData.length > 8) {\n                        const tickInterval = Math.ceil(chartData.length / 8);\n                        return chartData.filter({\n                            \"StackedBarChart.useCallback[renderChartContent].xTickValues\": (_, i)=>i % tickInterval === 0\n                        }[\"StackedBarChart.useCallback[renderChartContent].xTickValues\"]).map({\n                            \"StackedBarChart.useCallback[renderChartContent].xTickValues\": (d)=>d[xKey]\n                        }[\"StackedBarChart.useCallback[renderChartContent].xTickValues\"]);\n                    }\n                    // For other data types, show all values\n                    return chartData.map({\n                        \"StackedBarChart.useCallback[renderChartContent].xTickValues\": (d)=>d[xKey]\n                    }[\"StackedBarChart.useCallback[renderChartContent].xTickValues\"]);\n                }\n            })[\"StackedBarChart.useCallback[renderChartContent].xTickValues\"]();\n            // Render the chart content\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"relative w-full h-full\",\n                onMouseMove: {\n                    \"StackedBarChart.useCallback[renderChartContent]\": (e)=>handleMouseMove(e, isModal)\n                }[\"StackedBarChart.useCallback[renderChartContent]\"],\n                onMouseLeave: handleMouseLeave,\n                ref: isModal ? modalChartRef : chartRef,\n                children: [\n                    tooltip.visible && tooltip.items && !isModal && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app_components_shared_ChartTooltip__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                        title: String(tooltip.key),\n                        items: tooltip.items,\n                        left: tooltip.left,\n                        top: tooltip.top,\n                        isModal: false,\n                        timeFilter: filterValues === null || filterValues === void 0 ? void 0 : filterValues.timeFilter,\n                        currencyFilter: filterValues === null || filterValues === void 0 ? void 0 : filterValues.currencyFilter\n                    }, void 0, false, {\n                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/StackedBarChart.tsx\",\n                        lineNumber: 712,\n                        columnNumber: 11\n                    }, _this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                        width: chartWidth,\n                        height: chartHeight,\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_visx_group__WEBPACK_IMPORTED_MODULE_14__[\"default\"], {\n                            left: margin.left,\n                            top: margin.top,\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_visx_grid__WEBPACK_IMPORTED_MODULE_15__[\"default\"], {\n                                    scale: yScale,\n                                    width: innerWidth,\n                                    stroke: \"#1f2937\",\n                                    strokeOpacity: 0.5,\n                                    strokeDasharray: \"2,3\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/StackedBarChart.tsx\",\n                                    lineNumber: 726,\n                                    columnNumber: 13\n                                }, _this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_visx_axis__WEBPACK_IMPORTED_MODULE_16__[\"default\"], {\n                                    top: innerHeight,\n                                    scale: xScale,\n                                    stroke: \"#374151\",\n                                    strokeWidth: 0.5,\n                                    tickStroke: \"transparent\",\n                                    hideAxisLine: false,\n                                    tickLength: 0,\n                                    tickValues: xTickValues,\n                                    tickFormat: {\n                                        \"StackedBarChart.useCallback[renderChartContent]\": (value)=>{\n                                            // Format date labels based on timeFilter\n                                            if (typeof value === 'string') {\n                                                // For ISO dates (YYYY-MM-DD)\n                                                if (/^\\d{4}-\\d{2}-\\d{2}/.test(value)) {\n                                                    const date = new Date(value);\n                                                    if (!isNaN(date.getTime())) {\n                                                        // Format based on timeFilter if available\n                                                        if ((filterValues === null || filterValues === void 0 ? void 0 : filterValues.timeFilter) === 'D' || (filterValues === null || filterValues === void 0 ? void 0 : filterValues.timeFilter) === 'W') {\n                                                            return date.toLocaleDateString('en-US', {\n                                                                month: 'short',\n                                                                day: 'numeric'\n                                                            });\n                                                        } else if ((filterValues === null || filterValues === void 0 ? void 0 : filterValues.timeFilter) === 'M') {\n                                                            return date.toLocaleDateString('en-US', {\n                                                                month: 'short'\n                                                            });\n                                                        } else if ((filterValues === null || filterValues === void 0 ? void 0 : filterValues.timeFilter) === 'Q') {\n                                                            const quarter = Math.floor(date.getMonth() / 3) + 1;\n                                                            return \"Q\".concat(quarter);\n                                                        } else if ((filterValues === null || filterValues === void 0 ? void 0 : filterValues.timeFilter) === 'Y') {\n                                                            return date.getFullYear().toString();\n                                                        }\n                                                        // Default format if no timeFilter is specified\n                                                        return date.toLocaleDateString('en-US', {\n                                                            month: 'short',\n                                                            day: 'numeric'\n                                                        });\n                                                    }\n                                                }\n                                                // For other date formats, use the helper function\n                                                return formatXAxisLabel(value);\n                                            }\n                                            // For non-date values, format using our helper function\n                                            return formatXAxisLabel(String(value));\n                                        }\n                                    }[\"StackedBarChart.useCallback[renderChartContent]\"],\n                                    tickLabelProps: {\n                                        \"StackedBarChart.useCallback[renderChartContent]\": ()=>({\n                                                fill: '#6b7280',\n                                                fontSize: 11,\n                                                fontWeight: 300,\n                                                textAnchor: 'middle',\n                                                dy: '0.5em'\n                                            })\n                                    }[\"StackedBarChart.useCallback[renderChartContent]\"],\n                                    // Ensure first tick doesn't start before origin\n                                    left: 0\n                                }, void 0, false, {\n                                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/StackedBarChart.tsx\",\n                                    lineNumber: 735,\n                                    columnNumber: 13\n                                }, _this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_visx_axis__WEBPACK_IMPORTED_MODULE_17__[\"default\"], {\n                                    scale: yScale,\n                                    stroke: \"#374151\",\n                                    strokeWidth: 0.5,\n                                    tickStroke: \"transparent\",\n                                    tickLength: 0,\n                                    hideZero: false,\n                                    numTicks: 5,\n                                    tickFormat: {\n                                        \"StackedBarChart.useCallback[renderChartContent]\": (value)=>formatTickValue(Number(value))\n                                    }[\"StackedBarChart.useCallback[renderChartContent]\"],\n                                    tickLabelProps: {\n                                        \"StackedBarChart.useCallback[renderChartContent]\": ()=>({\n                                                fill: '#6b7280',\n                                                fontSize: 11,\n                                                fontWeight: 300,\n                                                letterSpacing: '0.05em',\n                                                textAnchor: 'end',\n                                                dy: '0.33em',\n                                                dx: '-0.25em'\n                                            })\n                                    }[\"StackedBarChart.useCallback[renderChartContent]\"]\n                                }, void 0, false, {\n                                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/StackedBarChart.tsx\",\n                                    lineNumber: 788,\n                                    columnNumber: 13\n                                }, _this),\n                                chartData.map({\n                                    \"StackedBarChart.useCallback[renderChartContent]\": (d, i)=>{\n                                        const x = xScale(d[xKey]) || 0;\n                                        // Create stack for this data point\n                                        let barY = innerHeight;\n                                        const stackedBars = [];\n                                        // Generate bars for each key (group), sorted by value\n                                        keys.filter({\n                                            \"StackedBarChart.useCallback[renderChartContent]\": (key)=>Number(d[key]) > 0\n                                        }[\"StackedBarChart.useCallback[renderChartContent]\"]).sort({\n                                            \"StackedBarChart.useCallback[renderChartContent]\": (a, b)=>Number(d[a]) - Number(d[b])\n                                        }[\"StackedBarChart.useCallback[renderChartContent]\"]) // Sort ascending for proper stacking\n                                        .forEach({\n                                            \"StackedBarChart.useCallback[renderChartContent]\": (key)=>{\n                                                const value = Number(d[key]) || 0;\n                                                const barHeight = innerHeight - yScale(value);\n                                                barY -= barHeight;\n                                                stackedBars.push(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_visx_shape__WEBPACK_IMPORTED_MODULE_18__[\"default\"], {\n                                                    x: x,\n                                                    y: barY,\n                                                    width: xScale.bandwidth(),\n                                                    height: barHeight,\n                                                    fill: groupColors[key],\n                                                    opacity: tooltip.visible && tooltip.key === d[xKey] ? 1 : 0.8,\n                                                    rx: 2\n                                                }, \"bar-\".concat(i, \"-\").concat(key), false, {\n                                                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/StackedBarChart.tsx\",\n                                                    lineNumber: 826,\n                                                    columnNumber: 21\n                                                }, _this));\n                                            }\n                                        }[\"StackedBarChart.useCallback[renderChartContent]\"]);\n                                        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_visx_group__WEBPACK_IMPORTED_MODULE_14__[\"default\"], {\n                                            children: stackedBars\n                                        }, \"stack-\".concat(i), false, {\n                                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/StackedBarChart.tsx\",\n                                            lineNumber: 840,\n                                            columnNumber: 17\n                                        }, _this);\n                                    }\n                                }[\"StackedBarChart.useCallback[renderChartContent]\"])\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/StackedBarChart.tsx\",\n                            lineNumber: 724,\n                            columnNumber: 11\n                        }, _this)\n                    }, void 0, false, {\n                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/StackedBarChart.tsx\",\n                        lineNumber: 723,\n                        columnNumber: 9\n                    }, _this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/StackedBarChart.tsx\",\n                lineNumber: 704,\n                columnNumber: 7\n            }, _this);\n        }\n    }[\"StackedBarChart.useCallback[renderChartContent]\"], [\n        chartData,\n        keys,\n        xKey,\n        error,\n        formatTickValue,\n        handleMouseMove,\n        handleMouseLeave,\n        groupColors,\n        refreshData,\n        tooltip.visible,\n        tooltip.key,\n        tooltip.items\n    ]);\n    // Update legend items \n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"StackedBarChart.useEffect\": ()=>{\n            if (chartData.length > 0 && keys.length > 0) {\n                const newLegendItems = keys.map({\n                    \"StackedBarChart.useEffect.newLegendItems\": (key)=>({\n                            id: key,\n                            label: key,\n                            color: groupColors[key] || _app_utils_chartColors__WEBPACK_IMPORTED_MODULE_2__.blue\n                        })\n                }[\"StackedBarChart.useEffect.newLegendItems\"]);\n                setLegendItems(newLegendItems);\n            }\n        }\n    }[\"StackedBarChart.useEffect\"], [\n        chartData,\n        keys,\n        groupColors\n    ]);\n    // Process data for brush component\n    const brushData = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"StackedBarChart.useMemo[brushData]\": ()=>{\n            if (!data || data.length === 0) return [];\n            console.log('Creating brush data with', data.length, 'items');\n            // First, apply the same sorting/filtering as the chart data\n            let processedData = [\n                ...data\n            ].filter({\n                \"StackedBarChart.useMemo[brushData].processedData\": (d)=>d[xKey] !== undefined && d[xKey] !== null\n            }[\"StackedBarChart.useMemo[brushData].processedData\"]);\n            // Sort by date if applicable\n            if (processedData.length > 0) {\n                // Detect if data contains dates\n                const isDateField = typeof processedData[0][xKey] === 'string' && (processedData[0][xKey].match(/^\\d{4}-\\d{2}-\\d{2}/) || /^\\d{2}\\/\\d{2}\\/\\d{4}/.test(processedData[0][xKey]) || /^[A-Za-z]{3}\\s\\d{4}$/.test(processedData[0][xKey]) || /^\\d{4}$/.test(processedData[0][xKey]));\n                if (isDateField) {\n                    // Sort dates chronologically (oldest to newest)\n                    processedData.sort({\n                        \"StackedBarChart.useMemo[brushData]\": (a, b)=>{\n                            const dateA = new Date(a[xKey]);\n                            const dateB = new Date(b[xKey]);\n                            return dateA.getTime() - dateB.getTime();\n                        }\n                    }[\"StackedBarChart.useMemo[brushData]\"]);\n                }\n            }\n            // Check if we have multiple Y-axis fields with stacked mode\n            const isMultiYFieldsStacked = Array.isArray(yField) && yField.length > 1 && chartConfig.isStacked;\n            // Group by x-axis values to prevent duplicates\n            const groupedData = {};\n            processedData.forEach({\n                \"StackedBarChart.useMemo[brushData]\": (item)=>{\n                    const xValue = String(item[xKey]);\n                    if (!groupedData[xValue]) {\n                        groupedData[xValue] = {\n                            ...item,\n                            [xKey]: item[xKey],\n                            totalValue: 0\n                        };\n                    }\n                    // For multi-y-field stacked charts, sum all the y fields for total value\n                    if (isMultiYFieldsStacked) {\n                        allYFields.forEach({\n                            \"StackedBarChart.useMemo[brushData]\": (field)=>{\n                                if (item[field] !== undefined && item[field] !== null) {\n                                    const value = Number(item[field]) || 0;\n                                    groupedData[xValue].totalValue += value;\n                                }\n                            }\n                        }[\"StackedBarChart.useMemo[brushData]\"]);\n                    } else {\n                        // Add to the total value for this x value using the primary yKey\n                        groupedData[xValue].totalValue += Number(item[yKey]) || 0;\n                    }\n                }\n            }[\"StackedBarChart.useMemo[brushData]\"]);\n            // Convert back to array\n            const uniqueData = Object.values(groupedData);\n            console.log(\"Processed \".concat(processedData.length, \" brush items into \").concat(uniqueData.length, \" unique data points\"));\n            // Create synthetic dates if needed\n            const baseDate = new Date();\n            baseDate.setHours(0, 0, 0, 0);\n            // Create a series of evenly spaced date points for brush\n            const brushDataPoints = uniqueData.map({\n                \"StackedBarChart.useMemo[brushData].brushDataPoints\": (d, i)=>{\n                    let dateObj;\n                    // Try to parse the date from the x-axis field\n                    if (typeof d[xKey] === 'string' && (d[xKey].match(/^\\d{4}-\\d{2}-\\d{2}/) || /^\\d{2}\\/\\d{2}\\/\\d{4}/.test(d[xKey]) || /^[A-Za-z]{3}\\s\\d{4}$/.test(d[xKey]) || /^\\d{4}$/.test(d[xKey]))) {\n                        // This is a date string, parse it\n                        dateObj = new Date(d[xKey]);\n                        // Check if the date is valid\n                        if (isNaN(dateObj.getTime())) {\n                            // Invalid date, use synthetic date based on index\n                            dateObj = new Date(baseDate);\n                            dateObj.setDate(baseDate.getDate() + i);\n                        }\n                    } else if (d[xKey] instanceof Date) {\n                        // Already a Date object\n                        dateObj = d[xKey];\n                    } else {\n                        // Non-date value, use synthetic date based on index\n                        dateObj = new Date(baseDate);\n                        dateObj.setDate(baseDate.getDate() + i);\n                    }\n                    // For the brush, use the total value across all stacked elements\n                    const totalValue = d.totalValue || 0;\n                    return {\n                        date: dateObj,\n                        value: totalValue,\n                        idx: i,\n                        originalIndex: i,\n                        originalData: d\n                    };\n                }\n            }[\"StackedBarChart.useMemo[brushData].brushDataPoints\"]);\n            console.log('Created brush data points for stacked chart:', brushDataPoints.length);\n            return brushDataPoints;\n        }\n    }[\"StackedBarChart.useMemo[brushData]\"], [\n        data,\n        xKey,\n        yKey,\n        yField,\n        allYFields,\n        chartConfig\n    ]);\n    // Handle brush change\n    const handleBrushChange = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"StackedBarChart.useCallback[handleBrushChange]\": (domain)=>{\n            if (!domain) {\n                if (isBrushActive) {\n                    setBrushDomain(null);\n                    setIsBrushActive(false);\n                    setFilteredData([]); // Reset filtered data\n                }\n                return;\n            }\n            const { x0, x1 } = domain;\n            console.log('Brush change:', new Date(x0), 'to', new Date(x1));\n            // Update brush domain\n            setBrushDomain([\n                new Date(x0),\n                new Date(x1)\n            ]);\n            // Get the selected brushData items\n            const selectedBrushItems = brushData.filter({\n                \"StackedBarChart.useCallback[handleBrushChange].selectedBrushItems\": (item)=>{\n                    return item.date >= new Date(x0) && item.date <= new Date(x1);\n                }\n            }[\"StackedBarChart.useCallback[handleBrushChange].selectedBrushItems\"]);\n            console.log('Selected brush items:', selectedBrushItems.length);\n            // For stacked charts, we need to preserve the x-value structure\n            // Extract the x values from the selected brush items\n            const selectedXValues = selectedBrushItems.map({\n                \"StackedBarChart.useCallback[handleBrushChange].selectedXValues\": (item)=>item.originalData[xKey]\n            }[\"StackedBarChart.useCallback[handleBrushChange].selectedXValues\"]);\n            // Filter the original data to include all items with those x values\n            const selectedDataObjects = data.filter({\n                \"StackedBarChart.useCallback[handleBrushChange].selectedDataObjects\": (d)=>selectedXValues.includes(d[xKey])\n            }[\"StackedBarChart.useCallback[handleBrushChange].selectedDataObjects\"]);\n            console.log('Filtered data after brush:', selectedDataObjects.length);\n            setFilteredData(selectedDataObjects);\n            if (!isBrushActive) {\n                setIsBrushActive(true);\n            }\n        }\n    }[\"StackedBarChart.useCallback[handleBrushChange]\"], [\n        isBrushActive,\n        brushData,\n        data,\n        xKey\n    ]);\n    // Handle modal brush change\n    const handleModalBrushChange = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"StackedBarChart.useCallback[handleModalBrushChange]\": (domain)=>{\n            if (!domain) {\n                if (isModalBrushActive) {\n                    setModalBrushDomain(null);\n                    setIsModalBrushActive(false);\n                    setModalFilteredData([]); // Reset modal filtered data\n                }\n                return;\n            }\n            const { x0, x1 } = domain;\n            console.log('Modal brush change:', new Date(x0), 'to', new Date(x1));\n            // Update modal brush domain\n            setModalBrushDomain([\n                new Date(x0),\n                new Date(x1)\n            ]);\n            // Get the selected brushData items\n            const selectedBrushItems = brushData.filter({\n                \"StackedBarChart.useCallback[handleModalBrushChange].selectedBrushItems\": (item)=>{\n                    return item.date >= new Date(x0) && item.date <= new Date(x1);\n                }\n            }[\"StackedBarChart.useCallback[handleModalBrushChange].selectedBrushItems\"]);\n            console.log('Selected modal brush items:', selectedBrushItems.length);\n            // Use the same approach as in handleBrushChange\n            const selectedXValues = selectedBrushItems.map({\n                \"StackedBarChart.useCallback[handleModalBrushChange].selectedXValues\": (item)=>item.originalData[xKey]\n            }[\"StackedBarChart.useCallback[handleModalBrushChange].selectedXValues\"]);\n            const selectedDataObjects = data.filter({\n                \"StackedBarChart.useCallback[handleModalBrushChange].selectedDataObjects\": (d)=>selectedXValues.includes(d[xKey])\n            }[\"StackedBarChart.useCallback[handleModalBrushChange].selectedDataObjects\"]);\n            console.log('Filtered data after modal brush:', selectedDataObjects.length);\n            setModalFilteredData(selectedDataObjects);\n            if (!isModalBrushActive) {\n                setIsModalBrushActive(true);\n            }\n        }\n    }[\"StackedBarChart.useCallback[handleModalBrushChange]\"], [\n        isModalBrushActive,\n        brushData,\n        data,\n        xKey\n    ]);\n    // Sync modal brush domain with main brush domain when modal opens\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"StackedBarChart.useEffect\": ()=>{\n            if (isExpanded) {\n                console.log('Modal opened, syncing brush domains');\n                // When modal opens, sync the brush domains\n                setModalBrushDomain(brushDomain);\n                setIsModalBrushActive(isBrushActive);\n                // Also sync filtered data\n                if (isBrushActive && filteredData.length > 0) {\n                    console.log('Syncing filtered data to modal:', filteredData.length, 'items');\n                    setModalFilteredData(filteredData);\n                }\n            }\n        }\n    }[\"StackedBarChart.useEffect\"], [\n        isExpanded,\n        brushDomain,\n        isBrushActive,\n        filteredData\n    ]);\n    // Calculate max value for brush scaling\n    const maxValue = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"StackedBarChart.useMemo[maxValue]\": ()=>{\n            if (!chartData || chartData.length === 0) return 1;\n            // For stacked charts, use the sum of all values in each stack\n            return Math.max(...chartData.map({\n                \"StackedBarChart.useMemo[maxValue]\": (d)=>{\n                    return keys.reduce({\n                        \"StackedBarChart.useMemo[maxValue]\": (total, key)=>total + (Number(d[key]) || 0)\n                    }[\"StackedBarChart.useMemo[maxValue]\"], 0);\n                }\n            }[\"StackedBarChart.useMemo[maxValue]\"]), 1);\n        }\n    }[\"StackedBarChart.useMemo[maxValue]\"], [\n        chartData,\n        keys\n    ]);\n    // Render the brush with proper shape reflecting bar values\n    const renderBrushArea = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"StackedBarChart.useCallback[renderBrushArea]\": function() {\n            let modalView = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;\n            if (!brushData || brushData.length === 0) return null;\n            // Add a small negative padding to keep the line just inside the brush bounds\n            const padding = -0.5;\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"h-[18%] w-full mt-2\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app_components_shared_BrushTimeScale__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                    data: brushData,\n                    activeBrushDomain: modalView ? modalBrushDomain : brushDomain,\n                    onBrushChange: modalView ? handleModalBrushChange : handleBrushChange,\n                    onClearBrush: {\n                        \"StackedBarChart.useCallback[renderBrushArea]\": ()=>{\n                            if (modalView) {\n                                setModalBrushDomain(null);\n                                setIsModalBrushActive(false);\n                                setModalFilteredData([]);\n                            } else {\n                                setBrushDomain(null);\n                                setIsBrushActive(false);\n                                setFilteredData([]);\n                            }\n                        }\n                    }[\"StackedBarChart.useCallback[renderBrushArea]\"],\n                    getDate: {\n                        \"StackedBarChart.useCallback[renderBrushArea]\": (d)=>d.date\n                    }[\"StackedBarChart.useCallback[renderBrushArea]\"],\n                    getValue: {\n                        \"StackedBarChart.useCallback[renderBrushArea]\": (d)=>{\n                            // Ensure we have a valid value for the brush line\n                            const val = d.value || 0;\n                            return Math.max(val, maxValue * 0.05);\n                        }\n                    }[\"StackedBarChart.useCallback[renderBrushArea]\"],\n                    lineColor: \"#3b82f6\",\n                    margin: {\n                        top: 10,\n                        right: 15 + padding,\n                        bottom: modalView ? 10 : 20,\n                        left: 40 + padding\n                    },\n                    isModal: modalView,\n                    curveType: \"catmullRom\",\n                    strokeWidth: 2,\n                    filterValues: modalView ? modalFilterValues : filterValues\n                }, void 0, false, {\n                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/StackedBarChart.tsx\",\n                    lineNumber: 1088,\n                    columnNumber: 9\n                }, _this)\n            }, void 0, false, {\n                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/StackedBarChart.tsx\",\n                lineNumber: 1087,\n                columnNumber: 7\n            }, _this);\n        }\n    }[\"StackedBarChart.useCallback[renderBrushArea]\"], [\n        brushData,\n        modalBrushDomain,\n        brushDomain,\n        handleModalBrushChange,\n        handleBrushChange,\n        setModalBrushDomain,\n        setIsModalBrushActive,\n        setModalFilteredData,\n        setBrushDomain,\n        setIsBrushActive,\n        setFilteredData,\n        maxValue,\n        modalFilterValues,\n        filterValues\n    ]);\n    // When rendering the chart in expanded mode, use the Modal component\n    if (isExpanded) {\n        var _chartConfig_additionalOptions_filters, _chartConfig_additionalOptions, _chartConfig_additionalOptions_filters_timeFilter_options, _chartConfig_additionalOptions_filters1, _chartConfig_additionalOptions1;\n        // Only render Modal on client-side to prevent hydration errors\n        if (!isClient) {\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"w-full h-full flex items-center justify-center\",\n                children: \"Loading expanded view...\"\n            }, void 0, false, {\n                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/StackedBarChart.tsx\",\n                lineNumber: 1126,\n                columnNumber: 14\n            }, undefined);\n        }\n        // Render expanded view inside Modal\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app_components_shared_Modal__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n            isOpen: isExpanded,\n            onClose: onCloseExpanded || (()=>{}),\n            title: chartConfig.title || \"Chart View\",\n            subtitle: chartConfig.subtitle,\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"w-full h-[80vh] relative overflow-visible\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"mb-4 flex justify-between items-center\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex items-center space-x-3\",\n                            children: [\n                                ((_chartConfig_additionalOptions = chartConfig.additionalOptions) === null || _chartConfig_additionalOptions === void 0 ? void 0 : (_chartConfig_additionalOptions_filters = _chartConfig_additionalOptions.filters) === null || _chartConfig_additionalOptions_filters === void 0 ? void 0 : _chartConfig_additionalOptions_filters.timeFilter) && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"flex items-center\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app_components_shared_filters_TimeFilter__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n                                        value: (modalFilterValues === null || modalFilterValues === void 0 ? void 0 : modalFilterValues.timeFilter) || chartConfig.additionalOptions.filters.timeFilter.activeValue || 'M',\n                                        onChange: (value)=>handleFilterChange('timeFilter', value),\n                                        options: (_chartConfig_additionalOptions_filters_timeFilter_options = chartConfig.additionalOptions.filters.timeFilter.options) === null || _chartConfig_additionalOptions_filters_timeFilter_options === void 0 ? void 0 : _chartConfig_additionalOptions_filters_timeFilter_options.map((opt)=>({\n                                                value: opt,\n                                                label: opt\n                                            }))\n                                    }, void 0, false, {\n                                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/StackedBarChart.tsx\",\n                                        lineNumber: 1144,\n                                        columnNumber: 19\n                                    }, undefined)\n                                }, void 0, false, {\n                                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/StackedBarChart.tsx\",\n                                    lineNumber: 1143,\n                                    columnNumber: 17\n                                }, undefined),\n                                ((_chartConfig_additionalOptions1 = chartConfig.additionalOptions) === null || _chartConfig_additionalOptions1 === void 0 ? void 0 : (_chartConfig_additionalOptions_filters1 = _chartConfig_additionalOptions1.filters) === null || _chartConfig_additionalOptions_filters1 === void 0 ? void 0 : _chartConfig_additionalOptions_filters1.currencyFilter) && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app_components_shared_filters_CurrencyFilter__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n                                    currency: (modalFilterValues === null || modalFilterValues === void 0 ? void 0 : modalFilterValues.currencyFilter) || chartConfig.additionalOptions.filters.currencyFilter.activeValue || 'USD',\n                                    onChange: (value)=>handleFilterChange('currencyFilter', value),\n                                    options: chartConfig.additionalOptions.filters.currencyFilter.options\n                                }, void 0, false, {\n                                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/StackedBarChart.tsx\",\n                                    lineNumber: 1157,\n                                    columnNumber: 17\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"flex items-center\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app_components_shared_filters_DisplayModeFilter__WEBPACK_IMPORTED_MODULE_10__[\"default\"], {\n                                        mode: displayMode,\n                                        onChange: (value)=>handleFilterChange('displayMode', value)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/StackedBarChart.tsx\",\n                                        lineNumber: 1167,\n                                        columnNumber: 17\n                                    }, undefined)\n                                }, void 0, false, {\n                                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/StackedBarChart.tsx\",\n                                    lineNumber: 1166,\n                                    columnNumber: 15\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/StackedBarChart.tsx\",\n                            lineNumber: 1140,\n                            columnNumber: 13\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/StackedBarChart.tsx\",\n                        lineNumber: 1139,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"w-full h-px bg-gray-900 mb-4\"\n                    }, void 0, false, {\n                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/StackedBarChart.tsx\",\n                        lineNumber: 1176,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex h-full\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"w-[90%] h-[90%] pr-3 border-r border-gray-900\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"flex flex-col h-full\",\n                                    children: [\n                                        tooltip.visible && tooltip.items && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"absolute z-50\",\n                                            style: {\n                                                pointerEvents: 'none',\n                                                top: tooltip.top,\n                                                left: tooltip.left\n                                            },\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app_components_shared_ChartTooltip__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                                                title: String(tooltip.key),\n                                                items: tooltip.items,\n                                                left: 0,\n                                                top: 0,\n                                                isModal: true,\n                                                timeFilter: (modalFilterValues === null || modalFilterValues === void 0 ? void 0 : modalFilterValues.timeFilter) || (filterValues === null || filterValues === void 0 ? void 0 : filterValues.timeFilter),\n                                                currencyFilter: (modalFilterValues === null || modalFilterValues === void 0 ? void 0 : modalFilterValues.currencyFilter) || (filterValues === null || filterValues === void 0 ? void 0 : filterValues.currencyFilter)\n                                            }, void 0, false, {\n                                                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/StackedBarChart.tsx\",\n                                                lineNumber: 1190,\n                                                columnNumber: 21\n                                            }, undefined)\n                                        }, void 0, false, {\n                                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/StackedBarChart.tsx\",\n                                            lineNumber: 1185,\n                                            columnNumber: 19\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"h-[85%] w-full relative\",\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_visx_responsive__WEBPACK_IMPORTED_MODULE_19__[\"default\"], {\n                                                debounceTime: 10,\n                                                children: (param)=>{\n                                                    let { width: parentWidth, height: parentHeight } = param;\n                                                    return parentWidth > 0 && parentHeight > 0 ? renderChartContent(parentWidth, parentHeight, true) : null;\n                                                }\n                                            }, void 0, false, {\n                                                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/StackedBarChart.tsx\",\n                                                lineNumber: 1204,\n                                                columnNumber: 19\n                                            }, undefined)\n                                        }, void 0, false, {\n                                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/StackedBarChart.tsx\",\n                                            lineNumber: 1203,\n                                            columnNumber: 17\n                                        }, undefined),\n                                        brushData.length > 0 ? renderBrushArea(true) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"h-[15%] w-full flex items-center justify-center text-gray-500 text-sm\",\n                                            children: \"No brush data available\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/StackedBarChart.tsx\",\n                                            lineNumber: 1215,\n                                            columnNumber: 19\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/StackedBarChart.tsx\",\n                                    lineNumber: 1182,\n                                    columnNumber: 15\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/StackedBarChart.tsx\",\n                                lineNumber: 1181,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"w-[10%] h-full pl-3 flex flex-col justify-start items-start\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"space-y-2 w-full overflow-y-auto max-h-[600px] [&::-webkit-scrollbar]:w-1.5  [&::-webkit-scrollbar-track]:bg-transparent  [&::-webkit-scrollbar-thumb]:bg-gray-700/40 [&::-webkit-scrollbar-thumb]:rounded-full [&::-webkit-scrollbar-thumb]:hover:bg-gray-600/60 scrollbar-thin scrollbar-track-transparent scrollbar-thumb-gray-700/40\",\n                                    children: legendItems.map((item)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app_components_shared_LegendItem__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                                            label: item.label,\n                                            color: item.color,\n                                            shape: \"square\"\n                                        }, item.id, false, {\n                                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/StackedBarChart.tsx\",\n                                            lineNumber: 1233,\n                                            columnNumber: 19\n                                        }, undefined))\n                                }, void 0, false, {\n                                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/StackedBarChart.tsx\",\n                                    lineNumber: 1225,\n                                    columnNumber: 15\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/StackedBarChart.tsx\",\n                                lineNumber: 1223,\n                                columnNumber: 13\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/StackedBarChart.tsx\",\n                        lineNumber: 1179,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/StackedBarChart.tsx\",\n                lineNumber: 1137,\n                columnNumber: 9\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/StackedBarChart.tsx\",\n            lineNumber: 1131,\n            columnNumber: 7\n        }, undefined);\n    }\n    // Render normal view with brush\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"w-full h-full relative\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"h-[85%] w-full\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_visx_responsive__WEBPACK_IMPORTED_MODULE_19__[\"default\"], {\n                    debounceTime: 10,\n                    children: (param)=>{\n                        let { width: parentWidth, height: parentHeight } = param;\n                        return parentWidth > 0 && parentHeight > 0 ? renderChartContent(parentWidth, parentHeight) : null;\n                    }\n                }, void 0, false, {\n                    fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/StackedBarChart.tsx\",\n                    lineNumber: 1254,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/StackedBarChart.tsx\",\n                lineNumber: 1253,\n                columnNumber: 7\n            }, undefined),\n            brushData.length > 0 ? renderBrushArea(false) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"h-[15%] w-full mt-2 flex items-center justify-center text-gray-500 text-sm\",\n                children: \"No brush data available\"\n            }, void 0, false, {\n                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/StackedBarChart.tsx\",\n                lineNumber: 1264,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/admin/components/charts/StackedBarChart.tsx\",\n        lineNumber: 1250,\n        columnNumber: 5\n    }, undefined);\n};\n_s(StackedBarChart, \"SzLqoZAgVeeLUzPmKp0qKD02xZI=\");\n_c1 = StackedBarChart;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (/*#__PURE__*/_c2 = react__WEBPACK_IMPORTED_MODULE_1___default().memo(StackedBarChart));\nvar _c, _c1, _c2;\n$RefreshReg$(_c, \"RefreshIcon\");\n$RefreshReg$(_c1, \"StackedBarChart\");\n$RefreshReg$(_c2, \"%default%\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/admin/components/charts/StackedBarChart.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/components/shared/filters/CurrencyFilter.tsx":
/*!**********************************************************!*\
  !*** ./app/components/shared/filters/CurrencyFilter.tsx ***!
  \**********************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-dom */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/index.js\");\n\nvar _s = $RefreshSig$();\n\n\n/**\n * A reusable component for toggling between currency options\n * Displays as buttons for 1-2 options, or a dropdown for 3+ options\n */ const CurrencyFilter = (param)=>{\n    let { currency, options = [\n        'USD',\n        'SOL'\n    ], onChange, isCompact = false, label = \"Currency\" } = param;\n    var _triggerRef_current;\n    _s();\n    const [isOpen, setIsOpen] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [portalContainer, setPortalContainer] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [dropdownPosition, setDropdownPosition] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        top: 0,\n        left: 0\n    });\n    const triggerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Setup portal container on mount\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CurrencyFilter.useEffect\": ()=>{\n            setPortalContainer(document.body);\n        }\n    }[\"CurrencyFilter.useEffect\"], []);\n    // Update dropdown position\n    const updateDropdownPosition = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"CurrencyFilter.useCallback[updateDropdownPosition]\": ()=>{\n            if (!triggerRef.current) return;\n            const rect = triggerRef.current.getBoundingClientRect();\n            setDropdownPosition({\n                top: rect.bottom + 2,\n                left: rect.left\n            });\n        }\n    }[\"CurrencyFilter.useCallback[updateDropdownPosition]\"], []);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CurrencyFilter.useEffect\": ()=>{\n            if (isOpen) {\n                updateDropdownPosition();\n            }\n        }\n    }[\"CurrencyFilter.useEffect\"], [\n        isOpen,\n        updateDropdownPosition\n    ]);\n    // Handle click outside to close dropdown\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CurrencyFilter.useEffect\": ()=>{\n            const handleClickOutside = {\n                \"CurrencyFilter.useEffect.handleClickOutside\": (event)=>{\n                    if (triggerRef.current && !triggerRef.current.contains(event.target)) {\n                        setIsOpen(false);\n                    }\n                }\n            }[\"CurrencyFilter.useEffect.handleClickOutside\"];\n            // Close dropdown on scroll - with debounce to avoid interfering with click events\n            let scrollTimer = null;\n            const handleScroll = {\n                \"CurrencyFilter.useEffect.handleScroll\": ()=>{\n                    if (scrollTimer) clearTimeout(scrollTimer);\n                    scrollTimer = setTimeout({\n                        \"CurrencyFilter.useEffect.handleScroll\": ()=>{\n                            setIsOpen(false);\n                        }\n                    }[\"CurrencyFilter.useEffect.handleScroll\"], 100);\n                }\n            }[\"CurrencyFilter.useEffect.handleScroll\"];\n            // Handle wheel events with same debounce\n            const handleWheel = {\n                \"CurrencyFilter.useEffect.handleWheel\": ()=>{\n                    if (scrollTimer) clearTimeout(scrollTimer);\n                    scrollTimer = setTimeout({\n                        \"CurrencyFilter.useEffect.handleWheel\": ()=>{\n                            setIsOpen(false);\n                        }\n                    }[\"CurrencyFilter.useEffect.handleWheel\"], 100);\n                }\n            }[\"CurrencyFilter.useEffect.handleWheel\"];\n            const handleTouchMove = {\n                \"CurrencyFilter.useEffect.handleTouchMove\": ()=>{\n                    if (scrollTimer) clearTimeout(scrollTimer);\n                    scrollTimer = setTimeout({\n                        \"CurrencyFilter.useEffect.handleTouchMove\": ()=>{\n                            setIsOpen(false);\n                        }\n                    }[\"CurrencyFilter.useEffect.handleTouchMove\"], 100);\n                }\n            }[\"CurrencyFilter.useEffect.handleTouchMove\"];\n            const handleKeyDown = {\n                \"CurrencyFilter.useEffect.handleKeyDown\": (event)=>{\n                    // Close on arrow keys, page up/down, home/end, space, etc.\n                    if ([\n                        'ArrowDown',\n                        'ArrowUp',\n                        'PageDown',\n                        'PageUp',\n                        'Home',\n                        'End',\n                        ' '\n                    ].includes(event.key)) {\n                        setIsOpen(false);\n                    }\n                    // Handle enter key on trigger element\n                    if (event.key === 'Enter' && document.activeElement === triggerRef.current) {\n                        setIsOpen({\n                            \"CurrencyFilter.useEffect.handleKeyDown\": (prev)=>!prev\n                        }[\"CurrencyFilter.useEffect.handleKeyDown\"]);\n                    }\n                }\n            }[\"CurrencyFilter.useEffect.handleKeyDown\"];\n            if (isOpen) {\n                // Use a slight delay before attaching scroll handlers\n                const handlerTimer = setTimeout({\n                    \"CurrencyFilter.useEffect.handlerTimer\": ()=>{\n                        window.addEventListener('scroll', handleScroll, {\n                            capture: true,\n                            passive: true\n                        });\n                        window.addEventListener('wheel', handleWheel, {\n                            capture: true,\n                            passive: true\n                        });\n                        window.addEventListener('touchmove', handleTouchMove, {\n                            capture: true,\n                            passive: true\n                        });\n                    }\n                }[\"CurrencyFilter.useEffect.handlerTimer\"], 300);\n                document.addEventListener('mousedown', handleClickOutside);\n                document.addEventListener('keydown', handleKeyDown);\n                return ({\n                    \"CurrencyFilter.useEffect\": ()=>{\n                        if (handlerTimer) clearTimeout(handlerTimer);\n                        if (scrollTimer) clearTimeout(scrollTimer);\n                        document.removeEventListener('mousedown', handleClickOutside);\n                        window.removeEventListener('scroll', handleScroll, {\n                            capture: true\n                        });\n                        window.removeEventListener('wheel', handleWheel, {\n                            capture: true\n                        });\n                        window.removeEventListener('touchmove', handleTouchMove, {\n                            capture: true\n                        });\n                        document.removeEventListener('keydown', handleKeyDown);\n                    }\n                })[\"CurrencyFilter.useEffect\"];\n            }\n            // Always listen for keyboard events\n            document.addEventListener('keydown', handleKeyDown);\n            return ({\n                \"CurrencyFilter.useEffect\": ()=>{\n                    if (scrollTimer) clearTimeout(scrollTimer);\n                    document.removeEventListener('keydown', handleKeyDown);\n                }\n            })[\"CurrencyFilter.useEffect\"];\n        }\n    }[\"CurrencyFilter.useEffect\"], [\n        isOpen\n    ]);\n    // Handle option selection\n    const handleOptionSelect = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"CurrencyFilter.useCallback[handleOptionSelect]\": (option)=>{\n            console.log('Option selected:', option);\n            // Set timeout to ensure the click event is fully processed before onChange\n            setTimeout({\n                \"CurrencyFilter.useCallback[handleOptionSelect]\": ()=>{\n                    onChange(option);\n                }\n            }[\"CurrencyFilter.useCallback[handleOptionSelect]\"], 0);\n            setIsOpen(false);\n        }\n    }[\"CurrencyFilter.useCallback[handleOptionSelect]\"], [\n        onChange\n    ]);\n    // If 2 or fewer options, display as buttons\n    if (options.length <= 2) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"flex items-center\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex space-x-1 bg-gray-900/60 rounded-md p-0.5\",\n                children: options.map((option)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        className: \"text-xs px-1.5 py-0.5 rounded \".concat(currency === option ? 'bg-gray-800 text-white shadow' : 'text-gray-400 hover:text-gray-300'),\n                        onClick: ()=>onChange(option),\n                        children: option\n                    }, option, false, {\n                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/components/shared/filters/CurrencyFilter.tsx\",\n                        lineNumber: 142,\n                        columnNumber: 13\n                    }, undefined))\n            }, void 0, false, {\n                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/components/shared/filters/CurrencyFilter.tsx\",\n                lineNumber: 140,\n                columnNumber: 9\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/components/shared/filters/CurrencyFilter.tsx\",\n            lineNumber: 138,\n            columnNumber: 7\n        }, undefined);\n    }\n    // For 3 or more options, display as dropdown\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex items-center\",\n        children: [\n            !isCompact && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                className: \"text-xs text-gray-400\"\n            }, void 0, false, {\n                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/components/shared/filters/CurrencyFilter.tsx\",\n                lineNumber: 162,\n                columnNumber: 22\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                ref: triggerRef,\n                className: \"flex items-center space-x-1 bg-gray-800/60 rounded-md py-0.5 px-2 cursor-pointer\",\n                onClick: ()=>{\n                    updateDropdownPosition();\n                    setIsOpen(!isOpen);\n                },\n                tabIndex: 0,\n                role: \"button\",\n                \"aria-haspopup\": \"listbox\",\n                \"aria-expanded\": isOpen,\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"text-xs text-white\",\n                        children: currency\n                    }, void 0, false, {\n                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/components/shared/filters/CurrencyFilter.tsx\",\n                        lineNumber: 175,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                        className: \"w-3 h-3 text-gray-400 transition-transform \".concat(isOpen ? 'rotate-180' : ''),\n                        fill: \"none\",\n                        stroke: \"currentColor\",\n                        viewBox: \"0 0 24 24\",\n                        xmlns: \"http://www.w3.org/2000/svg\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            strokeLinecap: \"round\",\n                            strokeLinejoin: \"round\",\n                            strokeWidth: 2,\n                            d: \"M19 9l-7 7-7-7\"\n                        }, void 0, false, {\n                            fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/components/shared/filters/CurrencyFilter.tsx\",\n                            lineNumber: 183,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/components/shared/filters/CurrencyFilter.tsx\",\n                        lineNumber: 176,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/components/shared/filters/CurrencyFilter.tsx\",\n                lineNumber: 163,\n                columnNumber: 7\n            }, undefined),\n            isOpen && portalContainer && /*#__PURE__*/ (0,react_dom__WEBPACK_IMPORTED_MODULE_2__.createPortal)(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"fixed shadow-xl py-1 min-w-[5rem] z-[9999]\",\n                style: {\n                    top: \"\".concat(dropdownPosition.top, \"px\"),\n                    left: \"\".concat(dropdownPosition.left, \"px\"),\n                    backgroundColor: '#1a1a1a',\n                    border: '1px solid #333',\n                    borderRadius: '0.375rem',\n                    width: \"\".concat(((_triggerRef_current = triggerRef.current) === null || _triggerRef_current === void 0 ? void 0 : _triggerRef_current.offsetWidth) || 100, \"px\")\n                },\n                role: \"listbox\",\n                children: options.map((option)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"px-3 py-1 text-xs cursor-pointer \".concat(currency === option ? 'bg-gray-800 text-white' : 'text-gray-400 hover:bg-gray-700 hover:text-white active:bg-gray-600'),\n                        // Use mousedown instead of click to avoid conflict with scroll handlers\n                        onMouseDown: (e)=>{\n                            e.preventDefault(); // Prevent focus blur\n                            e.stopPropagation(); // Prevent event bubbling\n                            handleOptionSelect(option);\n                        },\n                        role: \"option\",\n                        \"aria-selected\": currency === option,\n                        children: option\n                    }, option, false, {\n                        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/components/shared/filters/CurrencyFilter.tsx\",\n                        lineNumber: 201,\n                        columnNumber: 13\n                    }, undefined))\n            }, void 0, false, {\n                fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/components/shared/filters/CurrencyFilter.tsx\",\n                lineNumber: 188,\n                columnNumber: 9\n            }, undefined), portalContainer)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/lokeshtiwari/Desktop/sos/state_of_solana/app/components/shared/filters/CurrencyFilter.tsx\",\n        lineNumber: 161,\n        columnNumber: 5\n    }, undefined);\n};\n_s(CurrencyFilter, \"bdLInpUFoZt5CdBascN1yqFvlmA=\");\n_c = CurrencyFilter;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CurrencyFilter);\nvar _c;\n$RefreshReg$(_c, \"CurrencyFilter\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/components/shared/filters/CurrencyFilter.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@visx/axis/esm/axis/AxisRight.js":
/*!*******************************************************!*\
  !*** ./node_modules/@visx/axis/esm/axis/AxisRight.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ AxisRight),\n/* harmony export */   rightTickLabelProps: () => (/* binding */ rightTickLabelProps)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! classnames */ \"(app-pages-browser)/./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _Axis__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Axis */ \"(app-pages-browser)/./node_modules/@visx/axis/esm/axis/Axis.js\");\n/* harmony import */ var _constants_orientation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants/orientation */ \"(app-pages-browser)/./node_modules/@visx/axis/esm/constants/orientation.js\");\nvar _excluded = [\"axisClassName\", \"labelOffset\", \"tickLength\", \"tickLabelProps\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\nvar rightTickLabelProps = {\n  dx: '0.25em',\n  dy: '0.25em',\n  fill: '#222',\n  fontFamily: 'Arial',\n  fontSize: 10,\n  textAnchor: 'start'\n};\nfunction AxisRight(_ref) {\n  var axisClassName = _ref.axisClassName,\n    _ref$labelOffset = _ref.labelOffset,\n    labelOffset = _ref$labelOffset === void 0 ? 36 : _ref$labelOffset,\n    _ref$tickLength = _ref.tickLength,\n    tickLength = _ref$tickLength === void 0 ? 8 : _ref$tickLength,\n    tickLabelProps = _ref.tickLabelProps,\n    restProps = _objectWithoutPropertiesLoose(_ref, _excluded);\n  var tickLabelPropsFinal = typeof tickLabelProps === 'function' ? tickLabelProps : _extends({}, rightTickLabelProps, tickLabelProps);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Axis__WEBPACK_IMPORTED_MODULE_2__[\"default\"], _extends({\n    axisClassName: classnames__WEBPACK_IMPORTED_MODULE_1___default()('visx-axis-right', axisClassName),\n    labelOffset: labelOffset,\n    orientation: _constants_orientation__WEBPACK_IMPORTED_MODULE_3__[\"default\"].right,\n    tickLabelProps: tickLabelPropsFinal,\n    tickLength: tickLength\n  }, restProps));\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AdmlzeC9heGlzL2VzbS9heGlzL0F4aXNSaWdodC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBO0FBQ0Esc0JBQXNCLHNFQUFzRSxnQkFBZ0Isc0JBQXNCLE9BQU8sMkJBQTJCLDBCQUEwQix5REFBeUQsaUNBQWlDLGtCQUFrQjtBQUMxUywyREFBMkQsK0JBQStCLGlCQUFpQixzQ0FBc0MsWUFBWSxZQUFZLHVCQUF1QixPQUFPLHFCQUFxQiwwQ0FBMEMsNkJBQTZCO0FBQ3pRO0FBQ0U7QUFDRjtBQUN5QjtBQUM1QztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2U7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtGQUErRjtBQUMvRixzQkFBc0IsMERBQW1CLENBQUMsNkNBQUk7QUFDOUMsbUJBQW1CLGlEQUFFO0FBQ3JCO0FBQ0EsaUJBQWlCLDhEQUFXO0FBQzVCO0FBQ0E7QUFDQSxHQUFHO0FBQ0giLCJzb3VyY2VzIjpbIi9Vc2Vycy9sb2tlc2h0aXdhcmkvRGVza3RvcC9zb3Mvc3RhdGVfb2Zfc29sYW5hL25vZGVfbW9kdWxlcy9AdmlzeC9heGlzL2VzbS9heGlzL0F4aXNSaWdodC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX2V4Y2x1ZGVkID0gW1wiYXhpc0NsYXNzTmFtZVwiLCBcImxhYmVsT2Zmc2V0XCIsIFwidGlja0xlbmd0aFwiLCBcInRpY2tMYWJlbFByb3BzXCJdO1xuZnVuY3Rpb24gX2V4dGVuZHMoKSB7IF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiA/IE9iamVjdC5hc3NpZ24uYmluZCgpIDogZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07IHJldHVybiBfZXh0ZW5kcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9XG5mdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShzb3VyY2UsIGV4Y2x1ZGVkKSB7IGlmIChzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIHt9OyB2YXIgdGFyZ2V0ID0ge307IHZhciBzb3VyY2VLZXlzID0gT2JqZWN0LmtleXMoc291cmNlKTsgdmFyIGtleSwgaTsgZm9yIChpID0gMDsgaSA8IHNvdXJjZUtleXMubGVuZ3RoOyBpKyspIHsga2V5ID0gc291cmNlS2V5c1tpXTsgaWYgKGV4Y2x1ZGVkLmluZGV4T2Yoa2V5KSA+PSAwKSBjb250aW51ZTsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSByZXR1cm4gdGFyZ2V0OyB9XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IGN4IGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IEF4aXMgZnJvbSAnLi9BeGlzJztcbmltcG9ydCBPcmllbnRhdGlvbiBmcm9tICcuLi9jb25zdGFudHMvb3JpZW50YXRpb24nO1xuZXhwb3J0IHZhciByaWdodFRpY2tMYWJlbFByb3BzID0ge1xuICBkeDogJzAuMjVlbScsXG4gIGR5OiAnMC4yNWVtJyxcbiAgZmlsbDogJyMyMjInLFxuICBmb250RmFtaWx5OiAnQXJpYWwnLFxuICBmb250U2l6ZTogMTAsXG4gIHRleHRBbmNob3I6ICdzdGFydCdcbn07XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBBeGlzUmlnaHQoX3JlZikge1xuICB2YXIgYXhpc0NsYXNzTmFtZSA9IF9yZWYuYXhpc0NsYXNzTmFtZSxcbiAgICBfcmVmJGxhYmVsT2Zmc2V0ID0gX3JlZi5sYWJlbE9mZnNldCxcbiAgICBsYWJlbE9mZnNldCA9IF9yZWYkbGFiZWxPZmZzZXQgPT09IHZvaWQgMCA/IDM2IDogX3JlZiRsYWJlbE9mZnNldCxcbiAgICBfcmVmJHRpY2tMZW5ndGggPSBfcmVmLnRpY2tMZW5ndGgsXG4gICAgdGlja0xlbmd0aCA9IF9yZWYkdGlja0xlbmd0aCA9PT0gdm9pZCAwID8gOCA6IF9yZWYkdGlja0xlbmd0aCxcbiAgICB0aWNrTGFiZWxQcm9wcyA9IF9yZWYudGlja0xhYmVsUHJvcHMsXG4gICAgcmVzdFByb3BzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3JlZiwgX2V4Y2x1ZGVkKTtcbiAgdmFyIHRpY2tMYWJlbFByb3BzRmluYWwgPSB0eXBlb2YgdGlja0xhYmVsUHJvcHMgPT09ICdmdW5jdGlvbicgPyB0aWNrTGFiZWxQcm9wcyA6IF9leHRlbmRzKHt9LCByaWdodFRpY2tMYWJlbFByb3BzLCB0aWNrTGFiZWxQcm9wcyk7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChBeGlzLCBfZXh0ZW5kcyh7XG4gICAgYXhpc0NsYXNzTmFtZTogY3goJ3Zpc3gtYXhpcy1yaWdodCcsIGF4aXNDbGFzc05hbWUpLFxuICAgIGxhYmVsT2Zmc2V0OiBsYWJlbE9mZnNldCxcbiAgICBvcmllbnRhdGlvbjogT3JpZW50YXRpb24ucmlnaHQsXG4gICAgdGlja0xhYmVsUHJvcHM6IHRpY2tMYWJlbFByb3BzRmluYWwsXG4gICAgdGlja0xlbmd0aDogdGlja0xlbmd0aFxuICB9LCByZXN0UHJvcHMpKTtcbn0iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@visx/axis/esm/axis/AxisRight.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@visx/shape/esm/shapes/Pie.js":
/*!****************************************************!*\
  !*** ./node_modules/@visx/shape/esm/shapes/Pie.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Pie)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! classnames */ \"(app-pages-browser)/./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _visx_group__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @visx/group */ \"(app-pages-browser)/./node_modules/@visx/group/esm/Group.js\");\n/* harmony import */ var _util_D3ShapeFactories__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/D3ShapeFactories */ \"(app-pages-browser)/./node_modules/@visx/shape/esm/util/D3ShapeFactories.js\");\nvar _excluded = [\"className\", \"top\", \"left\", \"data\", \"centroid\", \"innerRadius\", \"outerRadius\", \"cornerRadius\", \"startAngle\", \"endAngle\", \"padAngle\", \"padRadius\", \"pieSort\", \"pieSortValues\", \"pieValue\", \"children\", \"fill\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\nfunction Pie(_ref) {\n  var className = _ref.className,\n    top = _ref.top,\n    left = _ref.left,\n    _ref$data = _ref.data,\n    data = _ref$data === void 0 ? [] : _ref$data,\n    centroid = _ref.centroid,\n    _ref$innerRadius = _ref.innerRadius,\n    innerRadius = _ref$innerRadius === void 0 ? 0 : _ref$innerRadius,\n    outerRadius = _ref.outerRadius,\n    cornerRadius = _ref.cornerRadius,\n    startAngle = _ref.startAngle,\n    endAngle = _ref.endAngle,\n    padAngle = _ref.padAngle,\n    padRadius = _ref.padRadius,\n    pieSort = _ref.pieSort,\n    pieSortValues = _ref.pieSortValues,\n    pieValue = _ref.pieValue,\n    children = _ref.children,\n    _ref$fill = _ref.fill,\n    fill = _ref$fill === void 0 ? '' : _ref$fill,\n    restProps = _objectWithoutPropertiesLoose(_ref, _excluded);\n  var path = (0,_util_D3ShapeFactories__WEBPACK_IMPORTED_MODULE_2__.arc)({\n    innerRadius: innerRadius,\n    outerRadius: outerRadius,\n    cornerRadius: cornerRadius,\n    padRadius: padRadius\n  });\n  var pie = (0,_util_D3ShapeFactories__WEBPACK_IMPORTED_MODULE_2__.pie)({\n    startAngle: startAngle,\n    endAngle: endAngle,\n    padAngle: padAngle,\n    value: pieValue,\n    sort: pieSort,\n    sortValues: pieSortValues\n  });\n  var arcs = pie(data);\n  if (children) return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, children({\n    arcs: arcs,\n    path: path,\n    pie: pie\n  }));\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_visx_group__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"visx-pie-arcs-group\",\n    top: top,\n    left: left\n  }, arcs.map(function (arc, i) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"g\", {\n      key: \"pie-arc-\" + i\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"path\", _extends({\n      className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('visx-pie-arc', className),\n      d: path(arc) || '',\n      fill: fill == null || typeof fill === 'string' ? fill : fill(arc)\n    }, restProps)), centroid == null ? void 0 : centroid(path.centroid(arc), arc));\n  }));\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AdmlzeC9zaGFwZS9lc20vc2hhcGVzL1BpZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFDQSxzQkFBc0Isc0VBQXNFLGdCQUFnQixzQkFBc0IsT0FBTywyQkFBMkIsMEJBQTBCLHlEQUF5RCxpQ0FBaUMsa0JBQWtCO0FBQzFTLDJEQUEyRCwrQkFBK0IsaUJBQWlCLHNDQUFzQyxZQUFZLFlBQVksdUJBQXVCLE9BQU8scUJBQXFCLDBDQUEwQyw2QkFBNkI7QUFDelE7QUFDRTtBQUNRO0FBQ3NDO0FBQzNEO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSwyREFBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxZQUFZLDJEQUFPO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLG9DQUFvQywwREFBbUIsQ0FBQyx1REFBYztBQUN0RTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsc0JBQXNCLDBEQUFtQixDQUFDLG1EQUFLO0FBQy9DO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCx3QkFBd0IsMERBQW1CO0FBQzNDO0FBQ0EsS0FBSyxlQUFlLDBEQUFtQjtBQUN2QyxpQkFBaUIsaURBQUU7QUFDbkI7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0giLCJzb3VyY2VzIjpbIi9Vc2Vycy9sb2tlc2h0aXdhcmkvRGVza3RvcC9zb3Mvc3RhdGVfb2Zfc29sYW5hL25vZGVfbW9kdWxlcy9AdmlzeC9zaGFwZS9lc20vc2hhcGVzL1BpZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX2V4Y2x1ZGVkID0gW1wiY2xhc3NOYW1lXCIsIFwidG9wXCIsIFwibGVmdFwiLCBcImRhdGFcIiwgXCJjZW50cm9pZFwiLCBcImlubmVyUmFkaXVzXCIsIFwib3V0ZXJSYWRpdXNcIiwgXCJjb3JuZXJSYWRpdXNcIiwgXCJzdGFydEFuZ2xlXCIsIFwiZW5kQW5nbGVcIiwgXCJwYWRBbmdsZVwiLCBcInBhZFJhZGl1c1wiLCBcInBpZVNvcnRcIiwgXCJwaWVTb3J0VmFsdWVzXCIsIFwicGllVmFsdWVcIiwgXCJjaGlsZHJlblwiLCBcImZpbGxcIl07XG5mdW5jdGlvbiBfZXh0ZW5kcygpIHsgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduID8gT2JqZWN0LmFzc2lnbi5iaW5kKCkgOiBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTsgcmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH1cbmZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHNvdXJjZSwgZXhjbHVkZWQpIHsgaWYgKHNvdXJjZSA9PSBudWxsKSByZXR1cm4ge307IHZhciB0YXJnZXQgPSB7fTsgdmFyIHNvdXJjZUtleXMgPSBPYmplY3Qua2V5cyhzb3VyY2UpOyB2YXIga2V5LCBpOyBmb3IgKGkgPSAwOyBpIDwgc291cmNlS2V5cy5sZW5ndGg7IGkrKykgeyBrZXkgPSBzb3VyY2VLZXlzW2ldOyBpZiAoZXhjbHVkZWQuaW5kZXhPZihrZXkpID49IDApIGNvbnRpbnVlOyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IHJldHVybiB0YXJnZXQ7IH1cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgY3ggZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgeyBHcm91cCB9IGZyb20gJ0B2aXN4L2dyb3VwJztcbmltcG9ydCB7IGFyYyBhcyBhcmNQYXRoLCBwaWUgYXMgcGllUGF0aCB9IGZyb20gJy4uL3V0aWwvRDNTaGFwZUZhY3Rvcmllcyc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBQaWUoX3JlZikge1xuICB2YXIgY2xhc3NOYW1lID0gX3JlZi5jbGFzc05hbWUsXG4gICAgdG9wID0gX3JlZi50b3AsXG4gICAgbGVmdCA9IF9yZWYubGVmdCxcbiAgICBfcmVmJGRhdGEgPSBfcmVmLmRhdGEsXG4gICAgZGF0YSA9IF9yZWYkZGF0YSA9PT0gdm9pZCAwID8gW10gOiBfcmVmJGRhdGEsXG4gICAgY2VudHJvaWQgPSBfcmVmLmNlbnRyb2lkLFxuICAgIF9yZWYkaW5uZXJSYWRpdXMgPSBfcmVmLmlubmVyUmFkaXVzLFxuICAgIGlubmVyUmFkaXVzID0gX3JlZiRpbm5lclJhZGl1cyA9PT0gdm9pZCAwID8gMCA6IF9yZWYkaW5uZXJSYWRpdXMsXG4gICAgb3V0ZXJSYWRpdXMgPSBfcmVmLm91dGVyUmFkaXVzLFxuICAgIGNvcm5lclJhZGl1cyA9IF9yZWYuY29ybmVyUmFkaXVzLFxuICAgIHN0YXJ0QW5nbGUgPSBfcmVmLnN0YXJ0QW5nbGUsXG4gICAgZW5kQW5nbGUgPSBfcmVmLmVuZEFuZ2xlLFxuICAgIHBhZEFuZ2xlID0gX3JlZi5wYWRBbmdsZSxcbiAgICBwYWRSYWRpdXMgPSBfcmVmLnBhZFJhZGl1cyxcbiAgICBwaWVTb3J0ID0gX3JlZi5waWVTb3J0LFxuICAgIHBpZVNvcnRWYWx1ZXMgPSBfcmVmLnBpZVNvcnRWYWx1ZXMsXG4gICAgcGllVmFsdWUgPSBfcmVmLnBpZVZhbHVlLFxuICAgIGNoaWxkcmVuID0gX3JlZi5jaGlsZHJlbixcbiAgICBfcmVmJGZpbGwgPSBfcmVmLmZpbGwsXG4gICAgZmlsbCA9IF9yZWYkZmlsbCA9PT0gdm9pZCAwID8gJycgOiBfcmVmJGZpbGwsXG4gICAgcmVzdFByb3BzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3JlZiwgX2V4Y2x1ZGVkKTtcbiAgdmFyIHBhdGggPSBhcmNQYXRoKHtcbiAgICBpbm5lclJhZGl1czogaW5uZXJSYWRpdXMsXG4gICAgb3V0ZXJSYWRpdXM6IG91dGVyUmFkaXVzLFxuICAgIGNvcm5lclJhZGl1czogY29ybmVyUmFkaXVzLFxuICAgIHBhZFJhZGl1czogcGFkUmFkaXVzXG4gIH0pO1xuICB2YXIgcGllID0gcGllUGF0aCh7XG4gICAgc3RhcnRBbmdsZTogc3RhcnRBbmdsZSxcbiAgICBlbmRBbmdsZTogZW5kQW5nbGUsXG4gICAgcGFkQW5nbGU6IHBhZEFuZ2xlLFxuICAgIHZhbHVlOiBwaWVWYWx1ZSxcbiAgICBzb3J0OiBwaWVTb3J0LFxuICAgIHNvcnRWYWx1ZXM6IHBpZVNvcnRWYWx1ZXNcbiAgfSk7XG4gIHZhciBhcmNzID0gcGllKGRhdGEpO1xuICBpZiAoY2hpbGRyZW4pIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChSZWFjdC5GcmFnbWVudCwgbnVsbCwgY2hpbGRyZW4oe1xuICAgIGFyY3M6IGFyY3MsXG4gICAgcGF0aDogcGF0aCxcbiAgICBwaWU6IHBpZVxuICB9KSk7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChHcm91cCwge1xuICAgIGNsYXNzTmFtZTogXCJ2aXN4LXBpZS1hcmNzLWdyb3VwXCIsXG4gICAgdG9wOiB0b3AsXG4gICAgbGVmdDogbGVmdFxuICB9LCBhcmNzLm1hcChmdW5jdGlvbiAoYXJjLCBpKSB7XG4gICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZ1wiLCB7XG4gICAgICBrZXk6IFwicGllLWFyYy1cIiArIGlcbiAgICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInBhdGhcIiwgX2V4dGVuZHMoe1xuICAgICAgY2xhc3NOYW1lOiBjeCgndmlzeC1waWUtYXJjJywgY2xhc3NOYW1lKSxcbiAgICAgIGQ6IHBhdGgoYXJjKSB8fCAnJyxcbiAgICAgIGZpbGw6IGZpbGwgPT0gbnVsbCB8fCB0eXBlb2YgZmlsbCA9PT0gJ3N0cmluZycgPyBmaWxsIDogZmlsbChhcmMpXG4gICAgfSwgcmVzdFByb3BzKSksIGNlbnRyb2lkID09IG51bGwgPyB2b2lkIDAgOiBjZW50cm9pZChwYXRoLmNlbnRyb2lkKGFyYyksIGFyYykpO1xuICB9KSk7XG59Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@visx/shape/esm/shapes/Pie.js\n"));

/***/ })

}]);